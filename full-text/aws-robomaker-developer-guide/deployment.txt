Deploying a Robot Application
To deploy a robot application to a physical robot, the physical robot must be configured to receive deployments and belong to a fleet. At a minimum, to deploy, do this: 


Create a robot application with sources for the architectures of your robots. Supported architectures are X86_64, ARM64 and ARMHF. 


Create the robot in AWS RoboMaker and configure it with AWS IoT Greengrass so it can receive deployments. AWS RoboMaker uses AWS IoT Greengrass to deploy the robot application. Each robot has one AWS IoT Greengrass group which internally has one AWS IoT Greengrass core.


If your robot application uses AWS RoboMaker cloud extensions or other AWS services, then grant permissions for the robot application to access them. 


Register the robot in a fleet. A fleet is logical grouping of robots with shared functionality defined by the robot application. 


Create a deployment to install the robot application to the fleet. Pick the robot application version, customize the launch configuration (including pre- and post-launch actions), and specify how the robot application is deployed. 


Monitor the deployment. You can track the progress of your deployment and other information in deployment details. Customize your robot application to provide additional information by using AWS RoboMaker cloud extensions.


You can learn how to do these steps in Getting Started with AWS RoboMaker.
How Robot Applications are Deployed
When a robot application is deployed to a physical robot, AWS RoboMaker does the following: 


AWS RoboMaker creates or updates a custom Lambda in your account. The Lambda contains the logic needed for deployment. This includes robot application bundle download, ROS launch, pre- and post-checks, and other logic. 


AWS RoboMaker begins deployment to the fleet using the parallelization specified in the deployment configuration. 


AWS RoboMaker notifies AWS IoT Greengrass to run the custom Lambda on the target robot. The daemon running on the robot receives the command and runs the Lambda. If a Lambda is running when the command is received, it and all ROS process on the robot are terminated. 


The Lambda downloads and uncompresses the robot application bundle from Amazon S3. If a pre-launch script was specified, it is run. Then the Lambda starts ROS using the launch file and package specified. If a post-launch script was specified, it is run after ROS is started. Finally, the status of the deployment is updated.

