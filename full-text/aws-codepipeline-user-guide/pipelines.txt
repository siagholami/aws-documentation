Working with pipelines in CodePipeline
To define an automated release process in AWS CodePipeline, you create a pipeline, which is a workflow construct that describes how software changes go through a release process. A pipeline is composed of stages and actions that you configure. 
Note
When you add Build, Deploy, Test, or Invoke stages, in addition to the default options provided with CodePipeline, you can choose custom actions that you have already created for use with your pipelines. Custom actions can be used for tasks such as running an internally developed build process or a test suite. Version identifiers are included to help you distinguish among different versions of a custom action in the provider lists. For more information, see Create and add a custom action in CodePipeline.
Before you can create a pipeline, you must first complete the steps in Getting started with CodePipeline.
For more information about pipelines, see CodePipeline concepts, CodePipeline tutorials, and, if you want to use the AWS CLI to create a pipeline, CodePipeline pipeline structure reference. To view a list of pipelines, see View pipeline details and history in CodePipeline.
Topics
 Start a pipeline execution
 Stop a pipeline execution
 Create a pipeline
 Edit a pipeline
 View pipeline details and history
 Delete a pipeline
 Create a pipeline that uses resources from another account
 Edit a pipeline for push events
 Create the CodePipeline service role
 Tag a pipeline
 Create a connection to Bitbucket
 Create a notification rule