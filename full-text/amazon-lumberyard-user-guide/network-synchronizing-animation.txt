Synchronizing Animations Across a Network
You can use the AnimGraph component to add an animation graph and motion set to a character. To synchronize the AnimGraph component's parameters (its EMotion FX animation state) across the network, use these two components:
 Network Binding
 Anim Graph Net Sync
The Anim Graph Net Sync component, which is included with the EMotion FX Animation gem, requires the Network Binding component. You can add the Anim Graph Net Sync component to any entity that has the Anim Graph component.
Topics
 Adding Animation Synchronization to an Entity
 Running the Samples Project in a Server and Client Configuration
Adding Animation Synchronization to an Entity
The following procedure shows how to add the Network Binding and Anim Graph Net Sync components to the Rin character in the Advanced_RinLocomotion Sample level of the Samples Project.
To add animation synchronization to an entity


In the Project Configurator, do the following:


Follow the steps in Choosing a Game Project to Open to set the SamplesProject as your default project.


Follow the steps in Enabling Gems to enable the Multiplayer gem for the Samples Project.


Close the Project Configurator, and then launch Lumberyard Editor.


In Lumberyard Editor, choose File, Open Level, or press CtrlO.


In the Open a Level dialog box, under Levels, Samples, choose Advanced_RinLocomotion, and then click Open.


Choose Tools, Entity Inspector.


In the viewport, zoom in and select the Rin character.



In the Entity Inspector, ensure that Rin appears in the Name field.


In the Entity Inspector search box, enter anim.



The AnimGraph component for Rin has four parameters:
    movement_speed
    movement_direction
    attacking
    jumping
Changes in these parameters are replicated to other network peers after you add the Network Binding and Anim Graph Net Sync components.


In the Entity Inspector, choose Add Component.


In the Entity Inspector search box, enter Network.


Choose Network Binding.



In the Entity Inspector, click Add Component.


In the Entity Inspector search box, enter anim.


Choose Anim Graph Net Sync.



The Anim Graph Net Sync component is added to the Rin entity.

By default, the Anim Graph Net Sync component synchronizes only the animation parameters. For greater precision, you can also choose to synchronize active nodes and motion nodes, which uses more network bandwidth.

Choose File, Save or press CtrlS to save the level.

Running the Samples Project in a Server and Client Configuration
Now that you have added the Net Binding and Anim Graph Net Sync components to the Rin entity, you can test the synchronization by running server and game launcher applications.
To test the animation graph network synchronization


In Lumberyard Editor, choose Game, Export to Engine, or press CtrlE to export your level to the Samples Project game launcher.


In the message box that reports The level was successfully exported, click OK.


Open a Windows command console on the lumberyard_version\dev\Bin directory that you are using.
    For Visual Studio 2017, the directory is lumberyard_version\dev\Bin64vc141\.
    For Visual Studio 2019, the directory is lumberyard_version\dev\Bin64vc142\.


Run the following command to start the server:


SamplesProjectLauncher.exe mphost map advanced_rinlocomotion


Wait until the server game is running and the Rin character renders fully.


Press AltTab to return to the command prompt.


Run the following command to start and connect the client:


SamplesProjectLauncher.exe mpjoin


Wait until the client game is running and the Rin character renders fully.


Press AltTab to return to the server application.


Use the following keys to control the Rin character:
    To move forward, left, backward, and right, press the W, A, S, and D keys, respectively.
    To look around, move the pointer.
    To attack, press the left mouse button.
    To jump, press the Space key.


Observe how, as you move the Rin character in the server application, the Rin character in the client application performs the same movements as its counterpart in the server.


In the server application, press the backtick key (`) to open the console, and then enter quit.


In the client application, press the backtick key (`) to open the console, and then enter quit.

