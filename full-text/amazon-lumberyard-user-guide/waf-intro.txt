Using the Waf Build System
Lumberyard uses the Waf build system to allow you to switch between various build pipelines and to ensure you build only what is needed. You can use extensions, such as automatic project generation, or a simple GUI to modify the command line base system for your project requirements. 
You can run Waf using the following methods:
 Command line window
 Waf-generated, Visual Studio solution file. Waf creates a Visual Studio solution file along with the projects specified in the selected project specs. If more than one spec file includes the same project, only one project file is created to prevent duplicates. Waf uses the project specs to determine the projects, project filters, and possible build configurations. Waf uses the wscript files to identify individual project definitions.
Note
Waf is compatible with the version of Python 3 that comes bundled with Lumberyard.
Lumberyard includes the Project Configurator, a standalone application that allows you to specify to Waf which game templates and assets (Gems) to include in the game build.
Topics
 Waf File System
 Waf Commands and Options
 Waf Supported Operating Systems and Compilers
 Waf Project Settings
 Using the Waf Artifacts Cache
 Adding Third-Party Libraries
 Creating Third-Party Library Configuration Files for Waf
 Waf Extensions
 Using Waf
 Adding User Settings to Waf
 Adding Qt 5 Content to Waf
 Using Uber Files
 Debugging Waf