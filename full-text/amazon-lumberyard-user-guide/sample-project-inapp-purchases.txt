In-App Purchases Sample
The In-App Purchases sample demonstrates how to use the In-App Purchases (IAP) Gem for a Lumberyard application that runs on a mobile device. For more information about this gem, see In-App Purchases Gem.
Topics
 Prerequisites
 Testing the In-App Purchases Sample on Android
 Testing the In-App Purchases Sample on iOS
Prerequisites
To use the In-App Purchases sample, you must have the following:
 An understanding of how to build a Lumberyard application and deploy to a mobile device. For more information, see Create Android and iOS projects in Lumberyard.
 Access to iTunes Connect to properly configure the sample for an iOS device.
 Access to the Google Play Developer Console to properly configure the sample for an Android device.
To load the In-App Purchases sample, you must edit the autoexec.cfg file (located in the \dev\SamplesProject directory) to include the following: map Gems_InAppPurchases_Sample
You must also update the product IDs in the product_ids.json file to match the product IDs in iTunes Connect or the Google Play Developer Console. This file is located in the \dev\SamplesProject\IAP_ProductIds directory.
Testing the In-App Purchases Sample on Android
You can test the In-App Purchase samples on an Android device.
To test the In-App Purchases sample on an Android device


In a command line window, build the SamplesProject application.


Go to the Google Play Developer Console.


In the left pane, click All Applications.


In the right pane, click Create Application.


Follow the steps to create a new application. The package name for your application must match the package name under android_settings in the project.json file. This file is located in the \dev\SamplesProject directory.


Once the application is created, it appears on the All Applications tab in the Google Play Developer Console. Click the application. In the left pane, navigate to In-app Products.


On the In-app Products page, click Add new product to add products that can be purchased through the application.


In the left pane of the application page, click APK to upload the APK that you built in step 1.


Create a closed beta test and add test accounts for testing.


Deploy the application to your device. The in-app products that you created in the Google Play Developer Console appear when you select Available Products in the application.


You can now buy products, view purchased products, and consume purchased products in the application.
Testing the In-App Purchases Sample on iOS
You can test the In-App Purchases sample on an iOS device.
To test the In-App Purchases sample on an iOS device

Go to iTunes Connect.

You must have an admin account to create applications.


Click My Apps.


In the top left of the page, click  to create a new application.


The bundle identifier must match the bundle identifier for your product in Xcode. To find the bundle identifier, select your Lumberyard project (for example, SamplesProject) in Xcode. You can also find the bundle identifier in the Info.plist file (located in the \Code\SamplesProject\Resources\IOSLauncher directory).


On the My Apps page, click your newly created application.


In the top pane of the application page, click Features.


In the left pane of the Features page, click In-App Purchases.


On the In-App Purchases page, click  to add products that can be purchased through the application.


When you finish adding products for in-app purchases, go to the iTunes Connect home page.


In iTunes Connect, click Users and Roles.


On the Users and Roles page, click Sandbox Testers.


On the Sandbox Testers page, click  to add sandbox tester accounts.
Important
Do not log in using this account on your device. This will deactivate the sandbox testing account and you'll need to create a new account.


On your device, choose Settings, iTunes. Log out of any accounts that are logged in.


Deploy and run the application from Xcode. When prompted, sign in with your sandbox tester account on the device.


You can now view available products, buy products, view purchased products, and more. When you buy a product, a note appears that indicates you are in the sandbox environment and will not be charged for the purchase.