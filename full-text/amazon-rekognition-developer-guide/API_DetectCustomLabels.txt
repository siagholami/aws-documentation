DetectCustomLabels
Detects custom labels in a supplied image by using an Amazon Rekognition Custom Labels model. 
You specify which version of a model version to use by using the ProjectVersionArn input parameter. 
You pass the input image as base64-encoded image bytes or as a reference to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes is not supported. The image must be either a PNG or JPEG formatted file. 
For each object that the model version detects on an image, the API returns a (CustomLabel) object in an array (CustomLabels). Each CustomLabel object provides the label name (Name), the level of confidence that the image contains the object (Confidence), and object location information, if it exists, for the label on the image (Geometry). 
During training model calculates a threshold value that determines if a prediction for a label is true. By default, DetectCustomLabels doesn't return labels whose confidence value is below the model's calculated threshold value. To filter labels that are returned, specify a value for MinConfidence that is higher than the model's calculated threshold. You can get the model's calculated threshold from the model's training results shown in the Amazon Rekognition Custom Labels console. To get all labels, regardless of confidence, specify a MinConfidence value of 0. 
You can also add the MaxResults parameter to limit the number of labels returned. 
This is a stateless API operation. That is, the operation does not persist any data.
This operation requires permissions to perform the rekognition:DetectCustomLabels action. 
Request Syntax
{
   "[Image](#rekognition-DetectCustomLabels-request-Image)": { 
      "[Bytes](API_Image.md#rekognition-Type-Image-Bytes)": blob,
      "[S3Object](API_Image.md#rekognition-Type-Image-S3Object)": { 
         "[Bucket](API_S3Object.md#rekognition-Type-S3Object-Bucket)": "string",
         "[Name](API_S3Object.md#rekognition-Type-S3Object-Name)": "string",
         "[Version](API_S3Object.md#rekognition-Type-S3Object-Version)": "string"
      }
   },
   "[MaxResults](#rekognition-DetectCustomLabels-request-MaxResults)": number,
   "[MinConfidence](#rekognition-DetectCustomLabels-request-MinConfidence)": number,
   "[ProjectVersionArn](#rekognition-DetectCustomLabels-request-ProjectVersionArn)": "string"
}
Request Parameters
The request accepts the following data in JSON format.
 Image  
Provides the input image either as bytes or an S3 object.
You pass image bytes to an Amazon Rekognition API operation by using the Bytes property. For example, you would use the Bytes property to pass an image loaded from a local file system. Image bytes passed by using the Bytes property must be base64-encoded. Your code may not need to encode image bytes if you are using an AWS SDK to call Amazon Rekognition API operations. 
For more information, see Analyzing an Image Loaded from a Local File System.
 You pass images stored in an S3 bucket to an Amazon Rekognition API operation by using the S3Object property. Images stored in an S3 bucket do not need to be base64-encoded.
The region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.
If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes using the Bytes property is not supported. You must first upload the image to an Amazon S3 bucket and then call the operation using the S3Object property.
For Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see Amazon Rekognition Resource-Based Policies. 
Type: Image object
Required: Yes
 MaxResults  
Maximum number of results you want the service to return in the response. The service returns the specified number of highest confidence labels ranked from highest confidence to lowest.
Type: Integer
Valid Range: Minimum value of 0.
Required: No
 MinConfidence  
Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence lower than this specified value. If you specify a value of 0, all labels are return, regardless of the default thresholds that the model version applies.
Type: Float
Valid Range: Minimum value of 0. Maximum value of 100.
Required: No
 ProjectVersionArn  
The ARN of the model version that you want to use.
Type: String
Length Constraints: Minimum length of 20. Maximum length of 2048.
Pattern: (^arn:[a-z\d-]:rekognition:[a-z\d-]:\d{12}:project\/[a-zA-Z0-9_.\-]{1,255}\/version\/[a-zA-Z0-9_.\-]{1,255}\/[0-9]$) 
Required: Yes
Response Syntax
{
   "[CustomLabels](#rekognition-DetectCustomLabels-response-CustomLabels)": [ 
      { 
         "[Confidence](API_CustomLabel.md#rekognition-Type-CustomLabel-Confidence)": number,
         "[Geometry](API_CustomLabel.md#rekognition-Type-CustomLabel-Geometry)": { 
            "[BoundingBox](API_Geometry.md#rekognition-Type-Geometry-BoundingBox)": { 
               "[Height](API_BoundingBox.md#rekognition-Type-BoundingBox-Height)": number,
               "[Left](API_BoundingBox.md#rekognition-Type-BoundingBox-Left)": number,
               "[Top](API_BoundingBox.md#rekognition-Type-BoundingBox-Top)": number,
               "[Width](API_BoundingBox.md#rekognition-Type-BoundingBox-Width)": number
            },
            "[Polygon](API_Geometry.md#rekognition-Type-Geometry-Polygon)": [ 
               { 
                  "[X](API_Point.md#rekognition-Type-Point-X)": number,
                  "[Y](API_Point.md#rekognition-Type-Point-Y)": number
               }
            ]
         },
         "[Name](API_CustomLabel.md#rekognition-Type-CustomLabel-Name)": "string"
      }
   ]
}
Response Elements
If the action is successful, the service sends back an HTTP 200 response.
The following data is returned in JSON format by the service.
 CustomLabels  
An array of custom labels detected in the input image.
Type: Array of CustomLabel objects
Errors
AccessDeniedException 
You are not authorized to perform the action.
HTTP Status Code: 400
ImageTooLargeException 
The input image size exceeds the allowed limit. For more information, see Limits in Amazon Rekognition. 
HTTP Status Code: 400
InternalServerError 
Amazon Rekognition experienced a service issue. Try your call again.
HTTP Status Code: 500
InvalidImageFormatException 
The provided image format is not supported. 
HTTP Status Code: 400
InvalidParameterException 
Input parameter violated a constraint. Validate your parameter before calling the API operation again.
HTTP Status Code: 400
InvalidS3ObjectException 
Amazon Rekognition is unable to access the S3 object specified in the request.
HTTP Status Code: 400
LimitExceededException 
An Amazon Rekognition service limit was exceeded. For example, if you start too many Amazon Rekognition Video jobs concurrently, calls to start operations (StartLabelDetection, for example) will raise a LimitExceededException exception (HTTP status code: 400) until the number of concurrently running jobs is below the Amazon Rekognition service limit. 
HTTP Status Code: 400
ProvisionedThroughputExceededException 
The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.
HTTP Status Code: 400
ResourceNotFoundException 
The collection specified in the request cannot be found.
HTTP Status Code: 400
ResourceNotReadyException 
The requested resource isn't ready. For example, this exception occurs when you call DetectCustomLabels with a model version that isn't deployed. 
HTTP Status Code: 400
ThrottlingException 
Amazon Rekognition is temporarily unable to process the request. Try your call again.
HTTP Status Code: 500
See Also
For more information about using this API in one of the language-specific AWS SDKs, see the following:
  AWS Command Line Interface 
  AWS SDK for .NET 
  AWS SDK for C 
  AWS SDK for Go 
  AWS SDK for Java 
  AWS SDK for JavaScript 
  AWS SDK for PHP V3 
  AWS SDK for Python 
  AWS SDK for Ruby V3 