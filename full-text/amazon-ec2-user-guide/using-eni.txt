Elastic network interfaces
An elastic network interface is a logical networking component in a VPC that represents a virtual network card. It can include the following attributes:
 A primary private IPv4 address from the IPv4 address range of your VPC
 One or more secondary private IPv4 addresses from the IPv4 address range of your VPC
 One Elastic IP address (IPv4) per private IPv4 address
 One public IPv4 address
 One or more IPv6 addresses
 One or more security groups
 A MAC address
 A source/destination check flag
 A description
You can create and configure network interfaces in your account and attach them to instances in your VPC. Your account might also have requester-managed network interfaces, which are created and managed by AWS services to enable you to use other resources and services. You cannot manage these network interfaces yourself. For more information, see Requester-managed network interfaces.
This AWS resource is referred to as a network interface in the AWS Management Console and the Amazon EC2 API. Therefore, we use "network interface" in this documentation instead of "elastic network interface". The term "network interface" in this documentation always means "elastic network interface".
Topics
 Network interface basics
 IP addresses per network interface per instance type
 Scenarios for network interfaces
 Best practices for configuring network interfaces
 Working with network interfaces
 Requester-managed network interfaces
Network interface basics
You can create a network interface, attach it to an instance, detach it from an instance, and attach it to another instance. The attributes of a network interface follow it as it's attached or detached from an instance and reattached to another instance. When you move a network interface from one instance to another, network traffic is redirected to the new instance.
You can also modify the attributes of your network interface, including changing its security groups and managing its IP addresses.
Every instance in a VPC has a default network interface, called the primary network interface. You cannot detach a primary network interface from an instance. You can create and attach additional network interfaces. The maximum number of network interfaces that you can use varies by instance type. For more information, see IP addresses per network interface per instance type.
Public IPv4 addresses for network interfaces
In a VPC, all subnets have a modifiable attribute that determines whether network interfaces created in that subnet (and therefore instances launched into that subnet) are assigned a public IPv4 address. For more information, see IP Addressing Behavior for Your Subnet in the Amazon VPC User Guide. The public IPv4 address is assigned from Amazon's pool of public IPv4 addresses. When you launch an instance, the IP address is assigned to the primary network interface that's created.
When you create a network interface, it inherits the public IPv4 addressing attribute from the subnet. If you later modify the public IPv4 addressing attribute of the subnet, the network interface keeps the setting that was in effect when it was created. If you launch an instance and specify an existing network interface as the primary network interface, the public IPv4 address attribute is determined by this network interface.
For more information, see Public IPv4 addresses and external DNS hostnames.
IPv6 addresses for network interfaces
You can associate an IPv6 CIDR block with your VPC and subnet, and assign one or more IPv6 addresses from the subnet range to a network interface.
All subnets have a modifiable attribute that determines whether network interfaces created in that subnet (and therefore instances launched into that subnet) are automatically assigned an IPv6 address from the range of the subnet. For more information, see IP Addressing Behavior for Your Subnet in the Amazon VPC User Guide. When you launch an instance, the IPv6 address is assigned to the primary network interface that's created.
For more information, see IPv6 addresses.
Monitoring IP traffic
You can enable a VPC flow log on your network interface to capture information about the IP traffic going to and from a network interface. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. For more information, see VPC Flow Logs in the Amazon VPC User Guide.
IP addresses per network interface per instance type
The following table lists the maximum number of network interfaces per instance type, and the maximum number of private IPv4 addresses and IPv6 addresses per network interface. The limit for IPv6 addresses is separate from the limit for private IPv4 addresses per network interface. Not all instance types support IPv6 addressing. Network interfaces, multiple private IPv4 addresses, and IPv6 addresses are only available for instances running in a VPC. IPv6 addresses are public and reachable over the Internet. For more information, see Multiple IP addresses. For more information about IPv6 in VPC, see IP Addressing in Your VPC in the Amazon VPC User Guide.



Instance type
Maximum network interfaces
Private IPv4 addresses per interface
IPv6 addresses per interface




a1.medium
2
4
4


a1.large
3
10
10


a1.xlarge
4
15
15


a1.2xlarge
4
15
15


a1.4xlarge
8
30
30


a1.metal
8
30
30


c1.medium
2
6
IPv6 not supported


c1.xlarge
4
15
IPv6 not supported


c3.large
3
10
10


c3.xlarge
4
15
15


c3.2xlarge
4
15
15


c3.4xlarge
8
30
30


c3.8xlarge
8
30
30


c4.large
3
10
10


c4.xlarge
4
15
15


c4.2xlarge
4
15
15


c4.4xlarge
8
30
30


c4.8xlarge
8
30
30


c5.large
3
10
10


c5.xlarge
4
15
15


c5.2xlarge
4
15
15


c5.4xlarge
8
30
30


c5.9xlarge
8
30
30


c5.12xlarge
8
30
30


c5.18xlarge
15
50
50


c5.24xlarge
15
50
50


c5.metal
15
50
50


c5a.large
3
10
10


c5a.xlarge
4
15
15


c5a.2xlarge
4
15
15


c5a.4xlarge
8
30
30


c5a.8xlarge
8
30
30


c5a.12xlarge
8
30
30


c5a.16xlarge
15
50
50


c5a.24xlarge
15
50
50


c5ad.large
3
10
10


c5ad.xlarge
4
15
15


c5ad.2xlarge
4
15
15


c5ad.4xlarge
8
30
30


c5ad.8xlarge
8
30
30


c5ad.12xlarge
8
30
30


c5ad.16xlarge
15
50
50


c5ad.24xlarge
15
50
50


c5d.large
3
10
10


c5d.xlarge
4
15
15


c5d.2xlarge
4
15
15


c5d.4xlarge
8
30
30


c5d.9xlarge
8
30
30


c5d.12xlarge
8
30
30


c5d.18xlarge
15
50
50


c5d.24xlarge
15
50
50


c5d.metal
15
50
50


c5n.large
3
10
10


c5n.xlarge
4
15
15


c5n.2xlarge
4
15
15


c5n.4xlarge
8
30
30


c5n.9xlarge
8
30
30


c5n.18xlarge
15
50
50


c5n.metal
15
50
50


c6g.medium
2
4
4


c6g.large
3
10
10


c6g.xlarge
4
15
15


c6g.2xlarge
4
15
15


c6g.4xlarge
8
30
30


c6g.8xlarge
8
30
30


c6g.12xlarge
8
30
30


c6g.16xlarge
15
50
50


c6g.metal
15
50
50


c6gd.medium
2
4
4


c6gd.large
3
10
10


c6gd.xlarge
4
15
15


c6gd.2xlarge
4
15
15


c6gd.4xlarge
8
30
30


c6gd.8xlarge
8
30
30


c6gd.12xlarge
8
30
30


c6gd.16xlarge
15
50
50


c6gd.metal
15
50
50


cc2.8xlarge
8
30
IPv6 not supported


cr1.8xlarge
8
30
IPv6 not supported


d2.xlarge
4
15
15


d2.2xlarge
4
15
15


d2.4xlarge
8
30
30


d2.8xlarge
8
30
30


f1.2xlarge
4
15
15


f1.4xlarge
8
30
30


f1.16xlarge
8
50
50


g2.2xlarge
4
15
IPv6 not supported


g2.8xlarge
8
30
IPv6 not supported


g3s.xlarge
4
15
15


g3.4xlarge
8
30
30


g3.8xlarge
8
30
30


g3.16xlarge
15
50
50


g4dn.xlarge
3
10
10


g4dn.2xlarge
3
10
10


g4dn.4xlarge
3
10
10


g4dn.8xlarge
4
15
15


g4dn.12xlarge
8
30
30


g4dn.16xlarge
4
15
15


g4dn.metal
15
50
50


h1.2xlarge
4
15
15


h1.4xlarge
8
30
30


h1.8xlarge
8
30
30


h1.16xlarge
15
50
50


hs1.8xlarge
8
30
IPv6 not supported


i2.xlarge
4
15
15


i2.2xlarge
4
15
15


i2.4xlarge
8
30
30


i2.8xlarge
8
30
30


i3.large
3
10
10


i3.xlarge
4
15
15


i3.2xlarge
4
15
15


i3.4xlarge
8
30
30


i3.8xlarge
8
30
30


i3.16xlarge
15
50
50


i3.metal
15
50
50


i3en.large
3
10
10


i3en.xlarge
4
15
15


i3en.2xlarge
4
15
15


i3en.3xlarge
4
15
15


i3en.6xlarge
8
30
30


i3en.12xlarge
8
30
30


i3en.24xlarge
15
50
50


i3en.metal
15
50
50


inf1.xlarge
4
10
10


inf1.2xlarge
4
10
10


inf1.6xlarge
8
30
30


inf1.24xlarge
15
30
30


m1.small
2
4
IPv6 not supported


m1.medium
2
6
IPv6 not supported


m1.large
3
10
IPv6 not supported


m1.xlarge
4
15
IPv6 not supported


m2.xlarge
4
15
IPv6 not supported


m2.2xlarge
4
30
IPv6 not supported


m2.4xlarge
8
30
IPv6 not supported


m3.medium
2
6
IPv6 not supported


m3.large
3
10
IPv6 not supported


m3.xlarge
4
15
IPv6 not supported


m3.2xlarge
4
30
IPv6 not supported


m4.large
2
10
10


m4.xlarge
4
15
15


m4.2xlarge
4
15
15


m4.4xlarge
8
30
30


m4.10xlarge
8
30
30


m4.16xlarge
8
30
30


m5.large
3
10
10


m5.xlarge
4
15
15


m5.2xlarge
4
15
15


m5.4xlarge
8
30
30


m5.8xlarge
8
30
30


m5.12xlarge
8
30
30


m5.16xlarge
15
50
50


m5.24xlarge
15
50
50


m5.metal
15
50
50


m5a.large
3
10
10


m5a.xlarge
4
15
15


m5a.2xlarge
4
15
15


m5a.4xlarge
8
30
30


m5a.8xlarge
8
30
30


m5a.12xlarge
8
30
30


m5a.16xlarge
15
50
50


m5a.24xlarge
15
50
50


m5ad.large
3
10
10


m5ad.xlarge
4
15
15


m5ad.2xlarge
4
15
15


m5ad.4xlarge
8
30
30


m5ad.8xlarge
8
30
30


m5ad.12xlarge
8
30
30


m5ad.16xlarge
15
50
50


m5ad.24xlarge
15
50
50


m5d.large
3
10
10


m5d.xlarge
4
15
15


m5d.2xlarge
4
15
15


m5d.4xlarge
8
30
30


m5d.8xlarge
8
30
30


m5d.12xlarge
8
30
30


m5d.16xlarge
15
50
50


m5d.24xlarge
15
50
50


m5d.metal
15
50
50


m5dn.large
3
10
10


m5dn.xlarge
4
15
15


m5dn.2xlarge
4
15
15


m5dn.4xlarge
8
30
30


m5dn.8xlarge
8
30
30


m5dn.12xlarge
8
30
30


m5dn.16xlarge
15
50
50


m5dn.24xlarge
15
50
50


m5n.large
3
10
10


m5n.xlarge
4
15
15


m5n.2xlarge
4
15
15


m5n.4xlarge
8
30
30


m5n.8xlarge
8
30
30


m5n.12xlarge
8
30
30


m5n.16xlarge
15
50
50


m5n.24xlarge
15
50
50


m6g.medium
2
4
4


m6g.large
3
10
10


m6g.xlarge
4
15
15


m6g.2xlarge
4
15
15


m6g.4xlarge
8
30
30


m6g.8xlarge
8
30
30


m6g.12xlarge
8
30
30


m6g.16xlarge
15
50
50


m6g.metal
15
50
50


m6gd.medium
2
4
4


m6gd.large
3
10
10


m6gd.xlarge
4
15
15


m6gd.2xlarge
4
15
15


m6gd.4xlarge
8
30
30


m6gd.8xlarge
8
30
30


m6gd.12xlarge
8
30
30


m6gd.16xlarge
15
50
50


m6gd.metal
15
50
50


p2.xlarge
4
15
15


p2.8xlarge
8
30
30


p2.16xlarge
8
30
30


p3.2xlarge
4
15
15


p3.8xlarge
8
30
30


p3.16xlarge
8
30
30


p3dn.24xlarge
15
50
50


r3.large
3
10
10


r3.xlarge
4
15
15


r3.2xlarge
4
15
15


r3.4xlarge
8
30
30


r3.8xlarge
8
30
30


r4.large
3
10
10


r4.xlarge
4
15
15


r4.2xlarge
4
15
15


r4.4xlarge
8
30
30


r4.8xlarge
8
30
30


r4.16xlarge
15
50
50


r5.large
3
10
10


r5.xlarge
4
15
15


r5.2xlarge
4
15
15


r5.4xlarge
8
30
30


r5.8xlarge
8
30
30


r5.12xlarge
8
30
30


r5.16xlarge
15
50
50


r5.24xlarge
15
50
50


r5.metal
15
50
50


r5a.large
3
10
10


r5a.xlarge
4
15
15


r5a.2xlarge
4
15
15


r5a.4xlarge
8
30
30


r5a.8xlarge
8
30
30


r5a.12xlarge
8
30
30


r5a.16xlarge
15
50
50


r5a.24xlarge
15
50
50


r5ad.large
3
10
10


r5ad.xlarge
4
15
15


r5ad.2xlarge
4
15
15


r5ad.4xlarge
8
30
30


r5ad.8xlarge
8
30
30


r5ad.12xlarge
8
30
30


r5ad.16xlarge
15
50
50


r5ad.24xlarge
15
50
50


r5d.large
3
10
10


r5d.xlarge
4
15
15


r5d.2xlarge
4
15
15


r5d.4xlarge
8
30
30


r5d.8xlarge
8
30
30


r5d.12xlarge
8
30
30


r5d.16xlarge
15
50
50


r5d.24xlarge
15
50
50


r5d.metal
15
50
50


r5dn.large
3
10
10


r5dn.xlarge
4
15
15


r5dn.2xlarge
4
15
15


r5dn.4xlarge
8
30
30


r5dn.8xlarge
8
30
30


r5dn.12xlarge
8
30
30


r5dn.16xlarge
15
50
50


r5dn.24xlarge
15
50
50


r5n.large
3
10
10


r5n.xlarge
4
15
15


r5n.2xlarge
4
15
15


r5n.4xlarge
8
30
30


r5n.8xlarge
8
30
30


r5n.12xlarge
8
30
30


r5n.16xlarge
15
50
50


r5n.24xlarge
15
50
50


r6g.medium
2
4
4


r6g.large
3
10
10


r6g.xlarge
4
15
15


r6g.2xlarge
4
15
15


r6g.4xlarge
8
30
30


r6g.8xlarge
8
30
30


r6g.12xlarge
8
30
30


r6g.16xlarge
15
50
50


r6g.metal
15
50
50


r6gd.medium
2
4
4


r6gd.large
3
10
10


r6gd.xlarge
4
15
15


r6gd.2xlarge
4
15
15


r6gd.4xlarge
8
30
30


r6gd.8xlarge
8
30
30


r6gd.12xlarge
8
30
30


r6gd.16xlarge
15
50
50


r6gd.metal
15
50
50


t1.micro
2
2
IPv6 not supported


t2.nano
2
2
2


t2.micro
2
2
2


t2.small
3
4
4


t2.medium
3
6
6


t2.large
3
12
12


t2.xlarge
3
15
15


t2.2xlarge
3
15
15


t3.nano
2
2
2


t3.micro
2
2
2


t3.small
3
4
4


t3.medium
3
6
6


t3.large
3
12
12


t3.xlarge
4
15
15


t3.2xlarge
4
15
15


t3a.nano
2
2
2


t3a.micro
2
2
2


t3a.small
2
4
4


t3a.medium
3
6
6


t3a.large
3
12
12


t3a.xlarge
4
15
15


t3a.2xlarge
4
15
15


t4g.nano
2
2
2


t4g.micro
2
2
2


t4g.small
2
4
4


t4g.medium
3
6
6


t4g.large
3
12
12


t4g.xlarge
4
15
15


t4g.2xlarge
4
15
15


u-6tb1.metal
5
30
30


u-9tb1.metal
5
30
30


u-12tb1.metal
5
30
30


u-18tb1.metal
15
50
50


u-24tb1.metal
15
50
50


x1.16xlarge
8
30
30


x1.32xlarge
8
30
30


x1e.xlarge
3
10
10


x1e.2xlarge
4
15
15


x1e.4xlarge
4
15
15


x1e.8xlarge
4
15
15


x1e.16xlarge
8
30
30


x1e.32xlarge
8
30
30


z1d.large
3
10
10


z1d.xlarge
4
15
15


z1d.2xlarge
4
15
15


z1d.3xlarge
8
30
30


z1d.6xlarge
8
30
30


z1d.12xlarge
15
50
50


z1d.metal
15
50
50



Scenarios for network interfaces
Attaching multiple network interfaces to an instance is useful when you want to:
 Create a management network.
 Use network and security appliances in your VPC.
 Create dual-homed instances with workloads/roles on distinct subnets.
 Create a low-budget, high-availability solution.
Creating a management network
You can create a management network using network interfaces. In this scenario, the primary network interface (eth0) on the instance handles public traffic and the secondary network interface (eth1) handles backend management traffic and is connected to a separate subnet in your VPC that has more restrictive access controls. The public interface, which may or may not be behind a load balancer, has an associated security group that allows access to the server from the internet (for example, allow TCP port 80 and 443 from 0.0.0.0/0, or from the load balancer) while the private facing interface has an associated security group allowing SSH access only from an allowed range of IP addresses either within the VPC or from the internet, a private subnet within the VPC or a virtual private gateway.
To ensure failover capabilities, consider using a secondary private IPv4 for incoming traffic on a network interface. In the event of an instance failure, you can move the interface and/or secondary private IPv4 address to a standby instance.

Use network and security appliances in your VPC
Some network and security appliances, such as load balancers, network address translation (NAT) servers, and proxy servers prefer to be configured with multiple network interfaces. You can create and attach secondary network interfaces to instances in a VPC that are running these types of applications and configure the additional interfaces with their own public and private IP addresses, security groups, and source/destination checking.
Creating dual-homed instances with workloads/roles on distinct subnets
You can place a network interface on each of your web servers that connects to a mid-tier network where an application server resides. The application server can also be dual-homed to a backend network (subnet) where the database server resides. Instead of routing network packets through the dual-homed instances, each dual-homed instance receives and processes requests on the front end, initiates a connection to the backend, and then sends requests to the servers on the backend network.
Create a low budget high availability solution
If one of your instances serving a particular function fails, its network interface can be attached to a replacement or hot standby instance pre-configured for the same role in order to rapidly recover the service. For example, you can use a network interface as your primary or secondary network interface to a critical service such as a database instance or a NAT instance. If the instance fails, you (or more likely, the code running on your behalf) can attach the network interface to a hot standby instance. Because the interface maintains its private IP addresses, Elastic IP addresses, and MAC address, network traffic begins flowing to the standby instance as soon as you attach the network interface to the replacement instance. Users experience a brief loss of connectivity between the time the instance fails and the time that the network interface is attached to the standby instance, but no changes to the VPC route table or your DNS server are required.
Best practices for configuring network interfaces

You can attach a network interface to an instance when it's running (hot attach), when it's stopped (warm attach), or when the instance is being launched (cold attach).
You can detach secondary network interfaces when the instance is running or stopped. However, you can't detach the primary network interface.
You can move a network interface from one instance to another, if the instances are in the same Availability Zone and VPC but in different subnets.
When launching an instance using the CLI, API, or an SDK, you can specify the primary network interface and additional network interfaces.
Launching an Amazon Linux or Windows Server instance with multiple network interfaces automatically configures interfaces, private IPv4 addresses, and route tables on the operating system of the instance.
A warm or hot attach of an additional network interface may require you to manually bring up the second interface, configure the private IPv4 address, and modify the route table accordingly. Instances running Amazon Linux or Windows Server automatically recognize the warm or hot attach and configure themselves.
Attaching another network interface to an instance (for example, a NIC teaming configuration) cannot be used as a method to increase or double the network bandwidth to or from the dual-homed instance.
If you attach two or more network interfaces from the same subnet to an instance, you may encounter networking issues such as asymmetric routing. If possible, use a secondary private IPv4 address on the primary network interface instead. For more information, see Assigning a secondary private IPv4 address. 

Configuring your network interface using ec2-net-utils
Amazon Linux AMIs may contain additional scripts installed by AWS, known as ec2-net-utils. These scripts optionally automate the configuration of your network interfaces. These scripts are available for Amazon Linux only.
Use the following command to install the package on Amazon Linux if it's not already installed, or update it if it's installed and additional updates are available:
$ yum install ec2-net-utils
The following components are part of ec2-net-utils:
udev rules (/etc/udev/rules.d)
Identifies network interfaces when they are attached, detached, or reattached to a running instance, and ensures that the hotplug script runs (53-ec2-network-interfaces.rules). Maps the MAC address to a device name (75-persistent-net-generator.rules, which generates 70-persistent-net.rules).
hotplug script
Generates an interface configuration file suitable for use with DHCP (/etc/sysconfig/network-scripts/ifcfg-ethN). Also generates a route configuration file (/etc/sysconfig/network-scripts/route-ethN).
DHCP script
Whenever the network interface receives a new DHCP lease, this script queries the instance metadata for Elastic IP addresses. For each Elastic IP address, it adds a rule to the routing policy database to ensure that outbound traffic from that address uses the correct network interface. It also adds each private IP address to the network interface as a secondary address.
ec2ifup ethN
Extends the functionality of the standard ifup. After this script rewrites the configuration files ifcfg-ethN and route-ethN, it runs ifup.
ec2ifdown ethN
Extends the functionality of the standard ifdown. After this script removes any rules for the network interface from the routing policy database, it runs ifdown.
ec2ifscan
Checks for network interfaces that have not been configured and configures them.
This script isn't available in the initial release of ec2-net-utils.
To list any configuration files that were generated by ec2-net-utils, use the following command:
$ ls -l /etc/sysconfig/network-scripts/*-eth?
To disable the automation on a per-instance basis, you can add EC2SYNC=no to the corresponding ifcfg-ethN file. For example, use the following command to disable the automation for the eth1 interface:
$ sed -i -e 's/^EC2SYNC=yes/EC2SYNC=no/' /etc/sysconfig/network-scripts/ifcfg-eth1
To disable the automation completely, you can remove the package using the following command:
$ yum remove ec2-net-utils
Working with network interfaces
You can work with network interfaces using the Amazon EC2 console or the command line.
Topics
 Creating a network interface
 Deleting a network interface
 Viewing details about a network interface
 Attaching a network interface when launching an instance
 Attaching a network interface to a stopped or running instance
 Detaching a network interface from an instance
 Changing the security group
 Changing the source or destination checking
 Associating an Elastic IP address (IPv4)
 Disassociating an Elastic IP address (IPv4)
 Assigning an IPv6 address
 Unassigning an IPv6 address
 Changing termination behavior
 Adding or editing a description
 Adding or editing tags
Creating a network interface
You can create a network interface in a subnet. You can't move the network interface to another subnet after it's created, and you can only attach the network interface to instances in the same Availability Zone.
To create a network interface using the console


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Network Interfaces.


Choose Create Network Interface.


For Description, enter a descriptive name.


For Subnet, select the subnet.


For Private IP (or IPv4 Private IP), enter the primary private IPv4 address. If you don't specify an IPv4 address, we select an available private IPv4 address from within the selected subnet.


(IPv6 only) If you selected a subnet that has an associated IPv6 CIDR block, you can optionally specify an IPv6 address in the IPv6 IP field. 


To create an Elastic Fabric Adapter, select Elastic Fabric Adapter.


For Security groups, select one or more security groups.


(Optional) Choose Add Tag and enter a tag key and a tag value.


Choose Yes, Create.


To create a network interface using the command line
You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
 create-network-interface (AWS CLI)
 New-EC2NetworkInterface (AWS Tools for Windows PowerShell)
Deleting a network interface
To delete an instance, you must first detach the network interface. Deleting a network interface releases all attributes associated with the interface and releases any private IP addresses or Elastic IP addresses to be used by another instance.
To delete a network interface using the console


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Network Interfaces.


Select a network interface and choose Delete.


In the Delete Network Interface dialog box, choose Yes, Delete.


To delete a network interface using the command line
You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
 delete-network-interface (AWS CLI)
 Remove-EC2NetworkInterface (AWS Tools for Windows PowerShell)
Viewing details about a network interface
You can view all the network interfaces in your account.
To describe a network interface using the console


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Network Interfaces.


Select the network interface.


To view the details, choose Details.


To describe a network interface using the command line
You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
 describe-network-interfaces (AWS CLI)
 Get-EC2NetworkInterface (AWS Tools for Windows PowerShell)
To describe a network interface attribute using the command line
You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
 describe-network-interface-attribute (AWS CLI)
 Get-EC2NetworkInterfaceAttribute (AWS Tools for Windows PowerShell)
Attaching a network interface when launching an instance
You can specify an existing network interface or attach an additional network interface when you launch an instance.
Note
If an error occurs when attaching a network interface to your instance, this causes the instance launch to fail.
To attach a network interface when launching an instance using the console


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


Choose Launch Instance.


Select an AMI and instance type and choose Next: Configure Instance Details.


On the Configure Instance Details page, select a VPC for Network, and a subnet for Subnet.


In the Network Interfaces section, the console enables you to specify up to two network interfaces (new, existing, or a combination) when you launch an instance. You can also enter a primary IPv4 address and one or more secondary IPv4 addresses for any new interface. 


You can add additional network interfaces to the instance after you launch it. The total number of network interfaces that you can attach varies by instance type. For more information, see IP addresses per network interface per instance type.
Note
If you specify more than one network interface, you cannot auto-assign a public IPv4 address to your instance. 


(IPv6 only) If you're launching an instance into a subnet that has an associated IPv6 CIDR block, you can specify IPv6 addresses for any network interfaces that you attach. Under IPv6 IPs, choose Add IP. To add a secondary IPv6 address, choose Add IP again. You can enter an IPv6 address from the range of the subnet, or leave the default Auto-assign value to let Amazon choose an IPv6 address from the subnet for you.


Choose Next: Add Storage.


On the Add Storage page, you can specify volumes to attach to the instance besides the volumes specified by the AMI (such as the root device volume), and then choose Next: Add Tags.


On the Add Tags page, specify tags for the instance, such as a user-friendly name, and then choose Next: Configure Security Group.


On the Configure Security Group page, you can select a security group or create a new one. Choose Review and Launch. 
Note
If you specified an existing network interface in step 5, the instance is associated with the security group for that network interface, regardless of any option that you select in this step.


On the Review Instance Launch page, details about the primary and additional network interface are displayed. Review the settings, and then choose Launch to choose a key pair and launch your instance. If you're new to Amazon EC2 and haven't created any key pairs, the wizard prompts you to create one.


To attach a network interface when launching an instance using the command line
You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
 run-instances (AWS CLI)
 New-EC2Instance (AWS Tools for Windows PowerShell)
Attaching a network interface to a stopped or running instance
You can attach a network interface to any of your stopped or running instances in your VPC, using either the Instances or Network Interfaces pages of the Amazon EC2 console. 
Note
If the public IPv4 address on your instance is released, it does not receive a new one if there is more than one network interface attached to the instance. For more information about the behavior of public IPv4 addresses, see Public IPv4 addresses and external DNS hostnames.
To attach a network interface to an instance using the Instances page


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Instances.


Choose Actions, Networking, Attach Network Interface.


In the Attach Network Interface dialog box, select the network interface and choose Attach.


To attach a network interface to an instance using the Network Interfaces page


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Network Interfaces.


Select the network interface and choose Attach.


In the Attach Network Interface dialog box, select the instance and choose Attach.


To attach a network interface to an instance using the command line
You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
 attach-network-interface (AWS CLI)
 Add-EC2NetworkInterface (AWS Tools for Windows PowerShell)
Detaching a network interface from an instance
You can detach a secondary network interface that is attached to an EC2 instance at any time, using either the Instances or Network Interfaces page of the Amazon EC2 console.
To detach a network interface from an instance using the Instances page


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Instances.


Choose Actions, Networking, Detach Network Interface.


In the Detach Network Interface dialog box, select the network interface and choose Detach.


You can't use the Amazon EC2 console to detach a network interface that is attached to a resource from another service, such as an Elastic Load Balancing load balancer, a Lambda function, a WorkSpace, or a NAT gateway. The network interfaces for those resources will be deleted when the resource is deleted.
To detach a network interface from an instance using the Network Interfaces page


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Network Interfaces.


Select the network interface and check the description to verify that the network interface is attached to an instance, not another type of resource. If the resource is an EC2 instance, choose Detach.


If the network interface is the primary network interface for the instance, the Detach button is disabled.


When prompted for confirmation, choose Yes, Detach.


If the network interface fails to detach from the instance, choose Force detachment and then try again. We recommend that you choose this option only as a last resort. Forcing a detachment can prevent you from attaching a different network interface on the same index until you restart the instance. It can also prevent the instance metadata from reflecting that the network interface was detached until you restart the instance.


To detach a network interface using the command line
You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
 detach-network-interface (AWS CLI)
 Dismount-EC2NetworkInterface (AWS Tools for Windows PowerShell)
Changing the security group
You can change the security groups that are associated with a network interface. When you create the security group, be sure to specify the same VPC as the subnet for the network interface.
Note
To change security group membership for interfaces owned by other services, such as Elastic Load Balancing, use the console or command line interface for that service.
To change the security group of a network interface using the console


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Network Interfaces.


Select the network interface and choose Actions, Change Security Groups.


In the Change Security Groups dialog box, select the security groups to use, and choose Save.


To change the security group of a network interface using the command line
You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
 modify-network-interface-attribute (AWS CLI)
 Edit-EC2NetworkInterfaceAttribute (AWS Tools for Windows PowerShell)
Changing the source or destination checking
The Source/Destination Check attribute controls whether source/destination checking is enabled on the instance. Disabling this attribute enables an instance to handle network traffic that isn't specifically destined for the instance. For example, instances running services such as network address translation, routing, or a firewall should set this value to disabled. The default value is enabled.
To change source/destination checking for a network interface using the console


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Network Interfaces.


Select the network interface and choose Actions, Change Source/Dest Check.


In the dialog box, choose Enabled (if enabling) or Disabled (if disabling), and Save.


To change source/destination checking for a network interface using the command line
You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
 modify-network-interface-attribute (AWS CLI)
 Edit-EC2NetworkInterfaceAttribute (AWS Tools for Windows PowerShell)
Associating an Elastic IP address (IPv4)
If you have an Elastic IP address (IPv4), you can associate it with one of the private IPv4 addresses for the network interface. You can associate one Elastic IP address with each private IPv4 address.
You can associate an Elastic IP address using the Amazon EC2 console or the command line.
To associate an Elastic IP address using the console


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Network Interfaces.


Select the network interface and choose Actions, Associate Address.


In the Associate Elastic IP Address dialog box, select the Elastic IP address from the Address list.


For Associate to private IP address, select the private IPv4 address to associate with the Elastic IP address. 


Choose Allow reassociation to allow the Elastic IP address to be associated with the specified network interface if it's currently associated with another instance or network interface, and then choose Associate Address.


To associate an Elastic IP address using the command line
You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
 associate-address (AWS CLI)
 Register-EC2Address (AWS Tools for Windows PowerShell)
Disassociating an Elastic IP address (IPv4)
If the network interface has an Elastic IP address (IPv4) associated with it, you can disassociate the address, and then either associate it with another network interface or release it back to the address pool. This is the only way to associate an Elastic IP address with an instance in a different subnet or VPC using a network interface, as network interfaces are specific to a particular subnet.
You can disassociate an Elastic IP address using the Amazon EC2 console or the command line.
To disassociate an Elastic IP address using the console


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Network Interfaces.


Select the network interface and choose Actions, Disassociate Address.


In the Disassociate IP Address dialog box, choose Yes, Disassociate.


To disassociate an Elastic IP address using the command line
You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
 disassociate-address (AWS CLI)
 Unregister-EC2Address (AWS Tools for Windows PowerShell)
Assigning an IPv6 address
You can assign one or more IPv6 addresses to a network interface. The network interface must be in a subnet that has an associated IPv6 CIDR block. To assign a specific IPv6 address to the network interface, ensure that the IPv6 address is not already assigned to another network interface.


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Network Interfaces and select the network interface.


Choose Actions, Manage IP Addresses.


Under IPv6 Addresses, choose Assign new IP. Specify an IPv6 address from the range of the subnet. To let AWS choose an address for you, leave the Auto-assign value.


Choose Yes, Update.


To assign an IPv6 address to a network interface using the command line
 You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
   assign-ipv6-addresses (AWS CLI)
   Register-EC2Ipv6AddressList (AWS Tools for Windows PowerShell)
Unassigning an IPv6 address
You can unassign an IPv6 address from a network interface using the Amazon EC2 console.


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Network Interfaces and select the network interface.


Choose Actions, Manage IP Addresses.


Under IPv6 Addresses, choose Unassign for the IPv6 address to remove.


Choose Yes, Update.


To unassign an IPv6 address from a network interface using the command line
 You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
   unassign-ipv6-addresses (AWS CLI)
   Unregister-EC2Ipv6AddressList (AWS Tools for Windows PowerShell)
Changing termination behavior
You can set the termination behavior for a network interface that's attached to an instance. You can specify whether the network interface should be automatically deleted when you terminate the instance to which it's attached.
You can change the terminating behavior for a network interface using the Amazon EC2 console or the command line.
To change the termination behavior for a network interface using the console


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Network Interfaces.


Select the network interface and choose Actions, Change Termination Behavior.


In the Change Termination Behavior dialog box, select the Delete on termination check box if you want the network interface to be deleted when you terminate an instance.


To change the termination behavior for a network interface using the command line
You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
 modify-network-interface-attribute (AWS CLI)
 Edit-EC2NetworkInterfaceAttribute (AWS Tools for Windows PowerShell)
Adding or editing a description
You can change the description for a network interface using the Amazon EC2 console or the command line.
To change the description for a network interface using the console


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Network Interfaces.


Select the network interface and choose Actions, Change Description.


In the Change Description dialog box, enter a description for the network interface, and then choose Save.


To change the description for a network interface using the command line
You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
 modify-network-interface-attribute (AWS CLI)
 Edit-EC2NetworkInterfaceAttribute (AWS Tools for Windows PowerShell)
Adding or editing tags
Tags are metadata that you can add to a network interface. Tags are private and are only visible to your account. Each tag consists of a key and an optional value. For more information about tags, see Tagging your Amazon EC2 resources.
To add or edit tags for a network interface using the console


Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


In the navigation pane, choose Network Interfaces.


Select the network interface.


In the details pane, choose Tags, Add/Edit Tags.


In the Add/Edit Tags dialog box, choose Create Tag for each tag to create, and enter a key and optional value. When you're done, choose Save.


To add or edit tags for a network interface using the command line
You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2.
 create-tags (AWS CLI)
 New-EC2Tag (AWS Tools for Windows PowerShell)