Implementing client-side encryption
Client-side encryption is one of the three encryption options that you can use with AWS Elemental MediaConvert. With client-side encryption, you encrypt your input files before you upload them to Amazon S3.
You can use client-side encryption in conjunction with the other two options. The following illustration shows the three options.

When you set up client-side encryption, you use multiple AWS services, as shown in the following diagram.

To use client-side encryption with AWS Elemental MediaConvert


Use AWS Key Management Service (AWS KMS) to create a customer managed customer master key (CMK). For procedures, see Creating keys in the AWS Key Management Service Developer Guide. For an overview, see Customer master keys in the same guide.


Create a data key to use to encrypt your content. Use the AWS KMS Encrypt operation to encrypt the data key under your customer managed CMK. You must use this encryption context: 


"{\"service\" : \"mediaconvert.amazonaws.com\" }"
You can create and encrypt your data key in one the following ways:
    Create a data key using AWS Key Management Service (AWS KMS) by calling KMS GenerateDataKey. For the KeyId parameter, specify the Amazon Resource Name (ARN) of the CMK that you created in the first step of this procedure. This operation returns a plaintext copy of the data key and a copy that is encrypted under the CMK.
    Use an encryption library, such as OpenSSL, to create an Advanced encryption standard (AES) key. Then, encrypt the key by calling AWS KMS Encrypt. Include the CMK that you created in the first step of this procedure as the KeyId when you make this call.
 For more information about creating an AES key using OpenSSL, see the [OpenSSL documentation](https://www.openssl.org/docs/)\.

For more information, see data keys in the AWS Key Management Service concepts topic of the AWS Key Management Service Developer Guide.

Use the plaintext data key that you created in the preceding step to encrypt your content as follows:
    Use one of the following AES encryption modes: CTR, CBC, or GCM.
    Use a 16-byte initialization vector with any encryption mode. Or, use a 12-byte initialization vector with GCM or CTR.

For more information about using OpenSSL, see the OpenSSL documentation.
Note
AWS Elemental MediaConvert doesn't support files encrypted by using the Amazon S3 encryption client.


Specify AWS Elemental MediaConvert decryption settings for each encrypted input as follows:


On the Create job page, in the Job pane on the left, choose an Input.


In the Input section on the right, choose Decryption settings.


For Decryption mode, choose the AES encryption mode that you used to encrypt your content in an earlier step of this procedure.


For Encrypted data key, enter the encrypted version of your data key that the AWS KMS GeneratedDataKey or Encrypt operation returned.
Make sure that you provide the encrypted version of your data key. Providing the data key in plaintext exposes it in transit between your system and MediaConvert, making your content vulnerable. Also, if you provide your plaintext data key, your job will fail.


For Initialization vector, provide the 16-byte or 12-byte initialization vector that you used to encrypt your content in an earlier step of this procedure.
Note
You must provide your initialization vector encoded in base64. You can do base64-encoding with an online conversion tool, or at the Linux command line with the following command: echo -n "string-to-be-encoded-here" | base64. The -n flag excludes any newline character from the end of the string that you pass in.


If the AWS Region that you used for AWS KMS when you generated your data key is different from the Region that you are currently using to run your AWS Elemental MediaConvert job, specify that Region for AWS Region for decryption key.


Grant kms:Decrypt permissions to your AWS Elemental MediaConvert AWS Identity and Access Management (IAM) role. Use an IAM inline policy. To learn more, see these topics:
    For more information about setting up an IAM role for AWS Elemental MediaConvert to assume, see Step 3: Set up IAM permissions  in the Getting Started chapter of this guide.
    For more information about granting IAM permissions using an inline policy, see the procedure To embed an inline policy for a user or role in Adding IAM identity permissions (console) in the IAM User Guide. 
    For examples of IAM policies that grant AWS KMS permissions, including decrypting encrypted content, see Customer managed policy examples in the AWS Key Management Service Developer Guide.

