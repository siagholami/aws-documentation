GetBotVersions
Gets information about all of the versions of a bot.
The GetBotVersions operation returns a BotMetadata object for each version of a bot. For example, if a bot has three numbered versions, the GetBotVersions operation returns four BotMetadata objects in the response, one for each numbered version and one for the $LATEST version. 
The GetBotVersions operation always returns at least one version, the $LATEST version.
This operation requires permissions for the lex:GetBotVersions action.
Request Syntax
GET /bots/name/versions/?maxResults=maxResults&nextToken=nextToken HTTP/1.1
URI Request Parameters
The request uses the following URI parameters.
 maxResults  
The maximum number of bot versions to return in the response. The default is 10.
Valid Range: Minimum value of 1. Maximum value of 50.
 name  
The name of the bot for which versions should be returned.
Length Constraints: Minimum length of 2. Maximum length of 50.
Pattern: ^([A-Za-z]_?)$ 
Required: Yes
 nextToken  
A pagination token for fetching the next page of bot versions. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of versions, specify the pagination token in the next request. 
Request Body
The request does not have a request body.
Response Syntax
```
HTTP/1.1 200
Content-type: application/json
{
   "bots": [ 
      { 
         "createdDate": number,
         "description": "string",
         "lastUpdatedDate": number,
         "name": "string",
         "status": "string",
         "version": "string"
      }
   ],
   "nextToken": "string"
}
```
Response Elements
If the action is successful, the service sends back an HTTP 200 response.
The following data is returned in JSON format by the service.
 bots  
An array of BotMetadata objects, one for each numbered version of the bot plus one for the $LATEST version.
Type: Array of BotMetadata objects
 nextToken  
A pagination token for fetching the next page of bot versions. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of versions, specify the pagination token in the next request. 
Type: String
Errors
BadRequestException 
The request is not well formed. For example, a value is invalid or a required field is missing. Check the field values, and try again.
HTTP Status Code: 400
InternalFailureException 
An internal Amazon Lex error occurred. Try your request again.
HTTP Status Code: 500
LimitExceededException 
The request exceeded a limit. Try your request again.
HTTP Status Code: 429
NotFoundException 
The resource specified in the request was not found. Check the resource and try again.
HTTP Status Code: 404
See Also
For more information about using this API in one of the language-specific AWS SDKs, see the following:
  AWS Command Line Interface 
  AWS SDK for .NET 
  AWS SDK for C 
  AWS SDK for Go 
  AWS SDK for Java 
  AWS SDK for JavaScript 
  AWS SDK for PHP V3 
  AWS SDK for Python 
  AWS SDK for Ruby V3 