CreateTags
Creates or overwrites tags associated with a file system. Each tag is a key-value pair. If a tag key specified in the request already exists on the file system, this operation overwrites its value with the value provided in the request. If you add the Name tag to your file system, Amazon EFS returns it in the response to the DescribeFileSystems operation. 
This operation requires permission for the elasticfilesystem:CreateTags action.
Request Syntax
```
POST /2015-02-01/create-tags/FileSystemId HTTP/1.1
Content-type: application/json
{
   "Tags": [ 
      { 
         "Key": "string",
         "Value": "string"
      }
   ]
}
```
URI Request Parameters
The request uses the following URI parameters.
 FileSystemId  
The ID of the file system whose tags you want to modify (String). This operation modifies the tags only, not the file system.
Length Constraints: Maximum length of 128.
Pattern: ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$ 
Required: Yes
Request Body
The request accepts the following data in JSON format.
 Tags  
An array of Tag objects to add. Each Tag object is a key-value pair. 
Type: Array of Tag objects
Required: Yes
Response Syntax
HTTP/1.1 204
Response Elements
If the action is successful, the service sends back an HTTP 204 response with an empty HTTP body.
Errors
BadRequest 
Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
HTTP Status Code: 400
FileSystemNotFound 
Returned if the specified FileSystemId value doesn't exist in the requester's AWS account.
HTTP Status Code: 404
InternalServerError 
Returned if an error occurred on the server side.
HTTP Status Code: 500
Example
Create Tags on a File System
The following request creates three tags ("key1", "key2", and "key3") on the specified file system.
Sample Request
```
POST /2015-02-01/create-tags/fs-01234567 HTTP/1.1 
Host: elasticfilesystem.us-west-2.amazonaws.com
x-amz-date: 20140620T221118Z
Authorization: <...>
Content-Type: application/json
Content-Length: 160
{
    "Tags": [
        {
            "Value": "value1",
            "Key": "key1"
        },
        {
            "Value": "value2",
            "Key": "key2"
        },
        {
            "Value": "value3",
            "Key": "key3"
        }
    ]
}
```
Sample Response
HTTP/1.1 204 no content
x-amzn-RequestId: 01234567-89ab-cdef-0123-456789abcdef
See Also
For more information about using this API in one of the language-specific AWS SDKs, see the following:
  AWS Command Line Interface 
  AWS SDK for .NET 
  AWS SDK for C 
  AWS SDK for Go 
  AWS SDK for Java 
  AWS SDK for JavaScript 
  AWS SDK for PHP V3 
  AWS SDK for Python 
  AWS SDK for Ruby V3 