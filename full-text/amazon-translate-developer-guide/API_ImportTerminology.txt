ImportTerminology
Creates or updates a custom terminology, depending on whether or not one already exists for the given terminology name. Importing a terminology with the same name as an existing one will merge the terminologies based on the chosen merge strategy. Currently, the only supported merge strategy is OVERWRITE, and so the imported terminology will overwrite an existing terminology of the same name.
If you import a terminology that overwrites an existing one, the new terminology take up to 10 minutes to fully propagate and be available for use in a translation due to cache policies with the DataPlane service that performs the translations.
Request Syntax
{
   "[Description](#Translate-ImportTerminology-request-Description)": "string",
   "[EncryptionKey](#Translate-ImportTerminology-request-EncryptionKey)": { 
      "[Id](API_EncryptionKey.md#Translate-Type-EncryptionKey-Id)": "string",
      "[Type](API_EncryptionKey.md#Translate-Type-EncryptionKey-Type)": "string"
   },
   "[MergeStrategy](#Translate-ImportTerminology-request-MergeStrategy)": "string",
   "[Name](#Translate-ImportTerminology-request-Name)": "string",
   "[TerminologyData](#Translate-ImportTerminology-request-TerminologyData)": { 
      "[File](API_TerminologyData.md#Translate-Type-TerminologyData-File)": blob,
      "[Format](API_TerminologyData.md#Translate-Type-TerminologyData-Format)": "string"
   }
}
Request Parameters
For information about the parameters that are common to all actions, see Common Parameters.
The request accepts the following data in JSON format.
 Description  
The description of the custom terminology being imported.
Type: String
Length Constraints: Maximum length of 256.
Pattern: [\P{M}\p{M}]{0,256} 
Required: No
 EncryptionKey  
The encryption key for the custom terminology being imported.
Type: EncryptionKey object
Required: No
 MergeStrategy  
The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.
Type: String
Valid Values:OVERWRITE 
Required: Yes
 Name  
The name of the custom terminology being imported.
Type: String
Length Constraints: Minimum length of 1. Maximum length of 256.
Pattern: ^([A-Za-z0-9-]_?)$ 
Required: Yes
 TerminologyData  
The terminology data for the custom terminology being imported.
Type: TerminologyData object
Required: Yes
Response Syntax
{
   "[TerminologyProperties](#Translate-ImportTerminology-response-TerminologyProperties)": { 
      "[Arn](API_TerminologyProperties.md#Translate-Type-TerminologyProperties-Arn)": "string",
      "[CreatedAt](API_TerminologyProperties.md#Translate-Type-TerminologyProperties-CreatedAt)": number,
      "[Description](API_TerminologyProperties.md#Translate-Type-TerminologyProperties-Description)": "string",
      "[EncryptionKey](API_TerminologyProperties.md#Translate-Type-TerminologyProperties-EncryptionKey)": { 
         "[Id](API_EncryptionKey.md#Translate-Type-EncryptionKey-Id)": "string",
         "[Type](API_EncryptionKey.md#Translate-Type-EncryptionKey-Type)": "string"
      },
      "[LastUpdatedAt](API_TerminologyProperties.md#Translate-Type-TerminologyProperties-LastUpdatedAt)": number,
      "[Name](API_TerminologyProperties.md#Translate-Type-TerminologyProperties-Name)": "string",
      "[SizeBytes](API_TerminologyProperties.md#Translate-Type-TerminologyProperties-SizeBytes)": number,
      "[SourceLanguageCode](API_TerminologyProperties.md#Translate-Type-TerminologyProperties-SourceLanguageCode)": "string",
      "[TargetLanguageCodes](API_TerminologyProperties.md#Translate-Type-TerminologyProperties-TargetLanguageCodes)": [ "string" ],
      "[TermCount](API_TerminologyProperties.md#Translate-Type-TerminologyProperties-TermCount)": number
   }
}
Response Elements
If the action is successful, the service sends back an HTTP 200 response.
The following data is returned in JSON format by the service.
 TerminologyProperties  
The properties of the custom terminology being imported.
Type: TerminologyProperties object
Errors
For information about the errors that are common to all actions, see Common Errors.
InternalServerException 
An internal server error occurred. Retry your request.
HTTP Status Code: 500
InvalidParameterValueException 
The value of the parameter is invalid. Review the value of the parameter you are using to correct it, and then retry your operation.
HTTP Status Code: 400
LimitExceededException 
The specified limit has been exceeded. Review your request and retry it with a quantity below the stated limit.
HTTP Status Code: 400
TooManyRequestsException 
 You have made too many requests within a short period of time. Wait for a short time and then try your request again.
HTTP Status Code: 400
See Also
For more information about using this API in one of the language-specific AWS SDKs, see the following:
  AWS Command Line Interface 
  AWS SDK for .NET 
  AWS SDK for C 
  AWS SDK for Go 
  AWS SDK for Java 
  AWS SDK for JavaScript 
  AWS SDK for PHP V3 
  AWS SDK for Python 
  AWS SDK for Ruby V2 