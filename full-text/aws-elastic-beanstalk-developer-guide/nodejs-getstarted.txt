Getting started with Node.js on Elastic Beanstalk
To get started with Node.js applications on AWS Elastic Beanstalk, all you need is an application source bundle to upload as your first application version and to deploy to an environment. When you create an environment, Elastic Beanstalk allocates all of the AWS resources needed to run a highly scalable web application.
Launching an environment with a sample Node.js application
Elastic Beanstalk provides single page sample applications for each platform as well as more complex examples that show the use of additional AWS resources such as Amazon RDS and language or platform-specific features and APIs.
Samples 



Environment type
Source bundle
Description




Web Server
nodejs.zip
Single page application. Use the procedure at Create an Example Application to launch this example.


Web Server with Amazon RDS
nodejs-express-hiking-v1.zip
Hiking log application that uses the Express framework and an RDS database. Tutorial


Web Server with Amazon ElastiCache
nodejs-example-express-elasticache.zip
Express web application that uses Amazon ElastiCache for clustering. Clustering enhances your web application's high availability, performance, and security. Tutorial


Web Server with DynamoDB, Amazon SNS and Amazon SQS
eb-node-express-sample-v1.0.zip Clone the repo at GitHub.com
Express web site that collects user contact information for a new company's marketing campaign. Uses the AWS SDK for JavaScript in Node.js to write entries to a DynamoDB table, and Elastic Beanstalk configuration files to create resources in DynamoDB, Amazon SNS and Amazon SQS. Tutorial



Next steps
After you have an environment running an application, you can deploy a new version of the application or a completely different application at any time. Deploying a new application version is very quick because it doesn't require provisioning or restarting EC2 instances. For details about application deployment, see Deploy a New Version of Your Application.
After you've deployed a sample application or two and are ready to start developing and running Node.js applications locally, see the next section to set up a Node.js development environment with all of the tools that you will need.