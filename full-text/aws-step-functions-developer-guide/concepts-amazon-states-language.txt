Amazon States Language
The Amazon States Language is a JSON-based, structured language used to define your state machine, a collection of states, that can do work (Task states), determine which states to transition to next (Choice states), stop an execution with an error (Fail states), and so on. 
For more information, see the Amazon States Language Specification and Statelint, a tool that validates Amazon States Language code.
To create a state machine on the Step Functions console using Amazon States Language, see Getting Started.
Example Amazon States Language Specification
```
{
  "Comment": "An example of the Amazon States Language using a choice state.",
  "StartAt": "FirstState",
  "States": {
    "FirstState": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:FUNCTION_NAME",
      "Next": "ChoiceState"
    },
    "ChoiceState": {
      "Type" : "Choice",
      "Choices": [
        {
          "Variable": "$.foo",
          "NumericEquals": 1,
          "Next": "FirstMatchState"
        },
        {
          "Variable": "$.foo",
          "NumericEquals": 2,
          "Next": "SecondMatchState"
        }
      ],
      "Default": "DefaultState"
    },
"FirstMatchState": {
  "Type" : "Task",
  "Resource": "arn:aws:lambda:us-east-1:123456789012:function:OnFirstMatch",
  "Next": "NextState"
},

"SecondMatchState": {
  "Type" : "Task",
  "Resource": "arn:aws:lambda:us-east-1:123456789012:function:OnSecondMatch",
  "Next": "NextState"
},

"DefaultState": {
  "Type": "Fail",
  "Error": "DefaultStateError",
  "Cause": "No Matches!"
},

"NextState": {
  "Type": "Task",
  "Resource": "arn:aws:lambda:us-east-1:123456789012:function:FUNCTION_NAME",
  "End": true
}

}
}
```
Topics
 Example Amazon States Language Specification
 State Machine Structure
 Common State Fields