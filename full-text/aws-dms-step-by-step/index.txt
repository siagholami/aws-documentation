AWS Database Migration Service Step-by-Step Migration Guide

*Copyright Â© 2018 Amazon Web Services, Inc. and/or its affiliates. All rights reserved.***

Amazon's trademarks and trade dress may not be used in 
     connection with any product or service that is not Amazon's, 
     in any manner that is likely to cause confusion among customers, 
     or in any manner that disparages or discredits Amazon. All other 
     trademarks not owned by Amazon are the property of their respective
     owners, who may or may not be affiliated with, connected to, or 
     sponsored by Amazon.

Contents

AWS Database Migration Service Step-by-Step Walkthroughs
Migrating Databases to Amazon Web Services (AWS)
Migrating an On-Premises Oracle Database to Amazon Aurora MySQL
Migration High-Level Outline
Migration Step-by-Step Guide
Step 1: Configure Your Oracle Source Database
Step 2: Configure Your Aurora Target Database
Step 3: Creating a Replication Instance
Step 4: Create Your Oracle Source Endpoint
Step 5: Create Your Aurora MySQL Target Endpoint
Step 6: Create a Migration Task
Step 7: Monitor Your Migration Task
Troubleshooting


Working with the Sample Database for Migration
Migrating an Amazon RDS Oracle Database to Amazon Aurora MySQL
Prerequisites
Migration Architecture
Step-by-Step Migration
Step 1: Launch the RDS Instances in a VPC by Using the CloudFormation Template
Step 2: Install the SQL Tools and AWS Schema Conversion Tool on Your Local Computer
Step 3: Test Connectivity to the Oracle DB Instance and Create the Sample Schema
Step 4: Test the Connectivity to the Aurora MySQL DB Instance
Step 5: Use the AWS Schema Conversion Tool (AWS SCT) to Convert the Oracle Schema to Aurora MySQL
Step 6: Validate the Schema Conversion
Step 7: Create a AWS DMS Replication Instance
Step 8: Create AWS DMS Source and Target Endpoints
Step 9: Create and Run Your AWS DMS Migration Task
Step 10: Verify That Your Data Migration Completed Successfully
Step 11: Delete Walkthrough Resources


Next Steps
AWS CloudFormation Template, SQL Scripts, and Other Resources
References
Migrating a SQL Server Database to Amazon Aurora MySQL
Prerequisites
Step-by-Step Migration
Step 1: Install the SQL Drivers and AWS Schema Conversion Tool on Your Local Computer
Step 2: Configure Your Microsoft SQL Server Source Database
Step 3: Configure Your Aurora MySQL Target Database
Step 4: Use AWS SCT to Convert the SQL Server Schema to Aurora MySQL
Step 5: Create an AWS DMS Replication Instance
Step 6: Create AWS DMS Source and Target Endpoints
Step 7: Create and Run Your AWS DMS Migration Task
Step 8: Cut Over to Aurora MySQL


Troubleshooting
Migrating an Oracle Database to PostgreSQL
Prerequisites
Step-by-Step Migration
Step 1: Install the SQL Drivers and AWS Schema Conversion Tool on Your Local Computer
Step 2: Configure Your Oracle Source Database
Step 3: Configure Your PostgreSQL Target Database
Step 4: Use the AWS Schema Conversion Tool (AWS SCT) to Convert the Oracle Schema to PostgreSQL
Step 5: Create an AWS DMS Replication Instance
Step 6: Create AWS DMS Source and Target Endpoints
Step 7: Create and Run Your AWS DMS Migration Task
Step 8: Cut Over to PostgreSQL


Rolling Back the Migration
Troubleshooting
Migrating an Amazon RDS for Oracle Database to Amazon Redshift
Prerequisites
Migration Architecture
Step-by-Step Migration
Step 1: Launch the RDS Instances in a VPC by Using the CloudFormation Template
Step 2: Install the SQL Tools and AWS Schema Conversion Tool on Your Local Computer
Step 3: Test Connectivity to the Oracle DB Instance and Create the Sample Schema
Step 4: Test the Connectivity to the Amazon Redshift Database
Step 5: Use AWS SCT to Convert the Oracle Schema to Amazon Redshift
Step 6: Validate the Schema Conversion
Step 7: Create an AWS DMS Replication Instance
Step 8: Create AWS DMS Source and Target Endpoints
Step 9: Create and Run Your AWS DMS Migration Task
Step 10: Verify That Your Data Migration Completed Successfully
Step 11: Delete Walkthrough Resources


Next Steps
References
Migrating MySQL-Compatible Databases to AWS
Migrating a MySQL-Compatible Database to Amazon Aurora MySQL
Migrating Data from an Amazon RDS MySQL DB Instance to an Amazon Aurora MySQL DB Cluster
Document History
