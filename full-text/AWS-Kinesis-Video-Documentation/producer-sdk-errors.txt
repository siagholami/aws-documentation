Error Code Reference
This section contains error and status code information for the Producer Libraries.
For information about solutions to common issues, see Troubleshooting Kinesis Video Streams.
Topics
 Errors and Status Codes Returned by PutFrame Callbacks - Platform Independent Code (PIT)
 Errors and Status Codes Returned by PutFrame Callbacks - C Producer Library
Errors and Status Codes Returned by PutFrame Callbacks - Platform Independent Code (PIT)
The following sections contain error and status information that is returned by callbacks for the PutFrame operation within the Platform Independent Codebase (PIT).
Topics
 Error and Status Codes Returned by the Client Library
 Error and Status Codes Returned by the Duration Library
 Error and Status Codes Returned by the Common Library
 Error and Status Codes Returned by the Heap Library
 Error and Status Codes Returned by the MKVGen Library
 Error and Status Codes Returned by the Trace Library
 Error and Status Codes Returned by the Utils Library
 Error and Status Codes Returned by the View Library
Error and Status Codes Returned by the Client Library
The following table contains error and status information that is returned by methods in the Kinesis Video Streams Client library.




Code
Message
Description
Recommended Action




0x52000001
STATUS_MAX_STREAM_COUNT
The maximum stream count was reached.
Specify a larger max stream count in DeviceInfo as specified in Producer SDK Limits.


0x52000002
STATUS_MIN_STREAM_COUNT
Minimum stream count error.
Specify the max number of streams greater than 0 in DeviceInfo.


0x52000003
STATUS_INVALID_DEVICE_NAME_LENGTH
Invalid device name length.
Refer to the max device name length in characters that is specified in Producer SDK Limits.


0x52000004
STATUS_INVALID_DEVICE_INFO_VERSION
Invalid DeviceInfo structure version.
Specify the correct current version of the structure.


0x52000005
STATUS_MAX_TAG_COUNT
The maximum tag count was reached.
Refer to the current max tag count that is specified in Producer SDK Limits.


0x52000006
STATUS_DEVICE_FINGERPRINT_LENGTH




0x52000007
STATUS_INVALID_CALLBACKS_VERSION
Invalid Callbacks structure version.
Specify the correct current version of the structure.


0x52000008
STATUS_INVALID_STREAM_INFO_VERSION
Invalid StreamInfo structure version.
Specify the correct current version of the structure.


0x52000009
STATUS_INVALID_STREAM_NAME_LENGTH
Invalid stream name length.
Refer to the max stream name length in characters that is specified in Producer SDK Limits.


0x5200000a
STATUS_INVALID_STORAGE_SIZE
An invalid storage size was specified.
The storage size in bytes must be within the limits specified in Producer SDK Limits.


0x5200000b
STATUS_INVALID_ROOT_DIRECTORY_LENGTH
Invalid root directory string length.
Refer to the max root directory path length that is specified in Producer SDK Limits.


0x5200000c
STATUS_INVALID_SPILL_RATIO
Invalid spill ratio.
Express the spill ratio as a percentage from 0 to 100.


0x5200000d
STATUS_INVALID_STORAGE_INFO_VERSION
Invalid StorageInfo structure version.
Specify the correct current version of the structure.


0x5200000e
STATUS_INVALID_STREAM_STATE
The stream is in a state that doesn't permit the current operation.
Most commonly, this error occurs when the SDK fails to reach the state that it needs to perform the requested operation. For example, it occurs if the GetStreamingEndpoint API call fails, and the client application ignores it and continues putting frames into the stream.


0x5200000f
STATUS_SERVICE_CALL_CALLBACKS_MISSING
The Callbacks structure has missing function entry points for some mandatory functions.
Ensure that the mandatory callbacks are implemented in the client application. This error is exposed only to PIC (Platform Independent Code) clients. C and other higher-level wrappers satisfy these calls.


0x52000010
STATUS_SERVICE_CALL_NOT_AUTHORIZED_ERROR
Not authorized.
Verify the security token/certificate/security token integration/expiration. Ensure that the token has the correct associated rights with it. For the Kinesis Video Streams sample applications, ensure that the environment variable is set correctly.


0x52000011
STATUS_DESCRIBE_STREAM_CALL_FAILED
DescribeStream API failure.
This error is returned after the DescribeStream API retry failure. The PIC client returns this error after it gives up retrying.


0x52000012
STATUS_INVALID_DESCRIBE_STREAM_RESPONSE
Invalid DescribeStreamResponse structure.
The structure that was passed to the DescribeStreamResultEvent is either null or contains invalid items like a null Amazon Resource Name (ARN).


0x52000013
STATUS_STREAM_IS_BEING_DELETED_ERROR
The stream is being deleted.
An API failure was caused by the stream being deleted. Ensure that no other processes are trying to delete the stream while the stream is in use.


0x52000014
STATUS_SERVICE_CALL_INVALID_ARG_ERROR
Invalid arguments were specified for the service call.
The backend returns this error when a service call argument is not valid or when the SDK encounters an error that it can't interpret.


0x52000015
STATUS_SERVICE_CALL_DEVICE_NOT_FOUND_ERROR
The device was not found.
Ensure that the device is not deleted while in use.


0x52000016
STATUS_SERVICE_CALL_DEVICE_NOT_PROVISIONED_ERROR
The device was not provisioned.
Ensure that the device has been provisioned.


0x52000017
STATUS_SERVICE_CALL_RESOURCE_NOT_FOUND_ERROR
Generic resource not found returned from the service.
This error occurs when the service can't locate the resource (for example, a stream). It might mean different things in different contexts, but the likely cause is the usage of APIs before the stream is created. Using the SDK ensures that the stream is created first.


0x52000018
STATUS_INVALID_AUTH_LEN
Invalid auth info length.
Refer to the current values that are specified in Producer SDK Limits.


0x52000019
STATUS_CREATE_STREAM_CALL_FAILED
The CreateStream API call failed.
Refer to the error string for more detailed information about why the operation failed.


0x5200002a
STATUS_GET_STREAMING_TOKEN_CALL_FAILED
The GetStreamingToken call failed.
Refer to the error string for more detailed information about why the operation failed.


0x5200002b
STATUS_GET_STREAMING_ENDPOINT_CALL_FAILED
The GetStreamingEndpoint API call failed.
Refer to the error string for more detailed information about why the operation failed.


0x5200002c
STATUS_INVALID_URI_LEN
An invalid URI string length was returned from the GetStreamingEndpoint API.
Refer to the current maximum values that are specified in Producer SDK Limits.


0x5200002d
STATUS_PUT_STREAM_CALL_FAILED
The PutMedia API call failed.
Refer to the error string for more detailed information about why the operation failed.


0x5200002e
STATUS_STORE_OUT_OF_MEMORY
The content store is out of memory.
The content store is shared between the streams and should have enough capacity to store the maximum durations for all the streams  \~20% (accounting for the defragmentation). It's important to not overflow the storage. Choose values for the maximum duration per stream that correspond to the cumulative storage size and the latency tolerances. It's better to drop the frames as they fall out of the content view window versus just being put (content store memory pressure). This is because dropping the frames triggers the stream pressure notification callbacks. Then the application can adjust the upstream media components (like the encoder) to thin the bitrate, drop frames, or act accordingly.


0x5200002f
STATUS_NO_MORE_DATA_AVAILABLE
No more data is available currently for a stream.
This is a potential valid result when the media pipeline produces more slowly than the networking thread consumes the frames to be sent to the service. Higher-level clients (for example, C, Java, or Android) do not see this warning because it's handled internally.


0x52000030
STATUS_INVALID_TAG_VERSION
Invalid Tag structure version.
Specify the correct current version of the structure.


0x52000031
STATUS_SERVICE_CALL_UNKNOWN_ERROR
An unknown or generic error was returned from the networking stack.
See the logs for more detailed information.


0x52000032
STATUS_SERVICE_CALL_RESOURCE_IN_USE_ERROR
Resource in use.
Returned from the service. For more information, see the Kinesis Video Streams API Reference.


0x52000033
STATUS_SERVICE_CALL_CLIENT_LIMIT_ERROR
Client limit.
Returned from the service. For more information, see the Kinesis Video Streams API Reference.


0x52000034
STATUS_SERVICE_CALL_DEVICE_LIMIT_ERROR
Device limit.
Returned from the service. For more information, see the Kinesis Video Streams API Reference.


0x52000035
STATUS_SERVICE_CALL_STREAM_LIMIT_ERROR
Stream limit.
Returned from the service. For more information, see the Kinesis Video Streams API Reference.


0x52000036
STATUS_SERVICE_CALL_RESOURCE_DELETED_ERROR
The resource was deleted or is being deleted.
Returned from the service. For more information, see the Kinesis Video Streams API Reference.


0x52000037
STATUS_SERVICE_CALL_TIMEOUT_ERROR
The service call timed out.
Calling a particular service API resulted in a timeout. Ensure that you have a valid network connection. The PIC will retry the operation automatically.


0x52000038
STATUS_STREAM_READY_CALLBACK_FAILED
Stream ready notification.
This notification is sent from the PIC to the client indicating that the async stream has been created.


0x52000039
STATUS_DEVICE_TAGS_COUNT_NON_ZERO_TAGS_NULL
Invalid tags were specified.
The tag count is not zero, but the tags are empty. Ensure that the tags are specified or the count is zero.


0x5200003a
STATUS_INVALID_STREAM_DESCRIPTION_VERSION
Invalid StreamDescription structure version.
Specify the correct current version of the structure.


0x5200003b
STATUS_INVALID_TAG_NAME_LEN
Invalid tag name length.
Refer to the limits for the tag name that are specified in Producer SDK Limits.


0x5200003c
STATUS_INVALID_TAG_VALUE_LEN
Invalid tag value length.
Refer to the limits for the tag value that are specified in Producer SDK Limits.


0x5200003d
STATUS_TAG_STREAM_CALL_FAILED
The TagResource API failed.
The TagResource API call failed. Check for a valid network connection. See the logs for more information about the failure.


0x5200003e
STATUS_INVALID_CUSTOM_DATA
Invalid custom data calling PIC APIs.
Invalid custom data has been specified in a call to the PIC APIs. This can occur only in the clients that directly use PIC.


0x5200003f
STATUS_INVALID_CREATE_STREAM_RESPONSE
Invalid CreateStreamResponse structure.
The structure or its member fields are invalid (that is, the ARN is null or larger than what's specified in Producer SDK Limits).


0x52000040
STATUS_CLIENT_AUTH_CALL_FAILED
Client auth failed.
The PIC failed to get proper auth information (that is, AccessKeyId or SecretAccessKey) after a number of retries. Check the authentication integration. The sample applications use environment variables to pass in credential information to the C Producer Library.


0x52000041
STATUS_GET_CLIENT_TOKEN_CALL_FAILED
Getting the security token call failed.
This situation can occur for clients that use PIC directly. After a number of retries, the call fails with this error.


0x52000042
STATUS_CLIENT_PROVISION_CALL_FAILED
Provisioning error.
Provisioning is not implemented.


0x52000043
STATUS_CREATE_CLIENT_CALL_FAILED
Failed to create the producer client.
A generic error returned by the PIC after a number of retries when the client creation fails.


0x52000044
STATUS_CLIENT_READY_CALLBACK_FAILED
Failed to get the producer client to a READY state.
Returned by the PIC state machine if the PIC fails to move to the READY state. See the logs for more information about the root cause.


0x52000045
STATUS_TAG_CLIENT_CALL_FAILED
The TagResource for the producer client failed.
The TagResource API call failed for the producer client. See the logs for more information about the root cause.


0x52000046
STATUS_INVALID_CREATE_DEVICE_RESPONSE
Device/Producer creation failed.
The higher-level SDKs (for example, C or Java) don't implement the device/producer creation API yet. Clients that use PIC directly can indicate a failure using the result notification.


0x52000047
STATUS_ACK_TIMESTAMP_NOT_IN_VIEW_WINDOW
The timestamp of the received ACK is not in the view.
This error occurs if the frame corresponding to the received ACK falls out of the content view window. Generally, this occurs if the ACK delivery is slow. It can be interpreted as a warning and an indication that the downlink is slow.


0x52000048
STATUS_INVALID_FRAGMENT_ACK_VERSION
Invalid FragmentAck structure version.
Specify the correct current version of the FragmentAck structure.


0x52000049
STATUS_INVALID_TOKEN_EXPIRATION
Invalid security token expiration.
The security token expiration should have an absolute timestamp in the future that is greater than the current timestamp, with a grace period. For the limits for the grace period, see the Producer SDK Limits.


0x5200004a
STATUS_END_OF_STREAM
End of stream (EOS) indicator.
In the GetStreamData API call, indicates that the current upload handle session has ended. This occurs if the session ends or errors, or if the session token has expired and the session is being rotated.


0x5200004b
STATUS_DUPLICATE_STREAM_NAME
Duplicate stream name.
Multiple streams can't have the same stream name. Choose a unique name for the stream.


0x5200004c
STATUS_INVALID_RETENTION_PERIOD
Invalid retention period.
An invalid retention period is specified in the StreamInfo structure. For information about the valid range of values for the retention period, see Producer SDK Limits.


0x5200004d
STATUS_INVALID_ACK_KEY_START
Invalid FragmentAck.
Failed to parse the fragment ACK string. Invalid key start indicator. The fragment ACK string might be damaged. It can self-correct and this error can be treated as a warning.


0x5200004e
STATUS_INVALID_ACK_DUPLICATE_KEY_NAME
Invalid FragmentAck.
Failed to parse the fragment ACK string. Multiple keys have the same name. The fragment ACK string might be damaged. It can self-correct and this error can be treated as a warning.


0x5200004f
STATUS_INVALID_ACK_INVALID_VALUE_START
Invalid FragmentAck.
Failed to parse the fragment ACK string because of an invalid key value start indicator. The fragment ACK string might be damaged. It can self-correct, and this error can be treated as a warning.


0x52000050
STATUS_INVALID_ACK_INVALID_VALUE_END
Invalid FragmentAck.
Failed to parse the fragment ACK string because of an invalid key value end indicator. The fragment ACK string might be damaged. It can self-correct and this error can be treated as a warning.


0x52000051
STATUS_INVALID_PARSED_ACK_TYPE
Invalid FragmentAck.
Failed to parse the fragment ACK string because an invalid ACK type was specified.


0x52000052
STATUS_STREAM_HAS_BEEN_STOPPED
Stream was stopped.
The stream has been stopped, but a frame is still being put into the stream.


0x52000053
STATUS_INVALID_STREAM_METRICS_VERSION
Invalid StreamMetrics structure version.
Specify the correct current version of the StreamMetrics structure.


0x52000054
STATUS_INVALID_CLIENT_METRICS_VERSION
Invalid ClientMetrics structure version.
Specify the correct current version of the ClientMetrics structure.


0x52000055
STATUS_INVALID_CLIENT_READY_STATE
Producer initialization failed to reach a READY state.
Failed to reach the READY state during the producer client initialization. See the logs for more information.


0x52000056
STATUS_STATE_MACHINE_STATE_NOT_FOUND
Internal state machine error.
Not a publicly visible error.


0x52000057
STATUS_INVALID_FRAGMENT_ACK_TYPE
Invalid ACK type is specified in the FragmentAck structure.
The FragmentAck structure should contain ACK types defined in the public header.


0x52000058
STATUS_INVALID_STREAM_READY_STATE
Internal state machine transition error.
Not a publicly visible error.


0x52000059
STATUS_CLIENT_FREED_BEFORE_STREAM
The stream object was freed after the producer was freed.
There was an attempt to free a stream object after the producer object was freed. This can only occur in clients that directly use PIC.


0x5200005a
STATUS_ALLOCATION_SIZE_SMALLER_THAN_REQUESTED
Internal storage error.
An internal error indicating that the actual allocation size from the content store is smaller than the size of the packaged frame/fragment.


0x5200005b
STATUS_VIEW_ITEM_SIZE_GREATER_THAN_ALLOCATION
Internal storage error.
The stored size of the allocation in the content view is greater than the allocation size in the content store.


0x5200005c
STATUS_ACK_ERR_STREAM_READ_ERROR
Stream read error ACK.
An error that the ACK returned from the backend indicating a stream read/parsing error. This generally occurs when the backend fails to retrieve the stream. Auto-restreaming can usually correct this error.


0x5200005d
STATUS_ACK_ERR_FRAGMENT_SIZE_REACHED
The maximum fragment size was reached.
The max fragment size in bytes is defined in Producer SDK Limits. This error indicates that there are either very large frames, or there are no key frames to create manageable size fragments. Check the encoder settings and ensure that key frames are being produced properly. For streams that have very high density, configure the encoder to produce fragments at smaller durations to manage the maximum size.


0x5200005e
STATUS_ACK_ERR_FRAGMENT_DURATION_REACHED
The maximum fragment duration was reached.
The max fragment duration is defined in Producer SDK Limits. This error indicates that there are either very low frames per second or there are no key frames to create manageable duration fragments. Check the encoder settings and ensure that key frames are being produced properly at the regular intervals.


0x5200005f
STATUS_ACK_ERR_CONNECTION_DURATION_REACHED
The maximum connection duration was reached.
Kinesis Video Streams enforces the max connection duration as specified in the Producer SDK Limits. The Producer SDK automatically rotates the stream/token before the maximum is reached, and so clients using the SDK should not receive this error.


0x52000060
STATUS_ACK_ERR_FRAGMENT_TIMECODE_NOT_MONOTONIC
Timecodes are not monotonically increasing.
The Producer SDK enforces timestamps, so clients using the SDK should not receive this error.


0x52000061
STATUS_ACK_ERR_MULTI_TRACK_MKV
Multiple tracks in the MKV.
The Producer SDK enforces single track streams, so clients using the SDK should not receive this error.


0x52000062
STATUS_ACK_ERR_INVALID_MKV_DATA
Invalid MKV data.
The backend MKV parser encountered an error parsing the stream. Clients using the SDK might encounter this error if the stream is corrupted in the transition or if the buffer pressures force the SDK to drop tail frames that are partially transmitted. In the latter case, we recommend that you either reduce the FPS/resolution, increase the compression ratio, or (in the case of a "bursty" network) allow for larger content store and buffer duration to accommodate for the temporary pressures.


0x52000063
STATUS_ACK_ERR_INVALID_PRODUCER_TIMESTAMP
Invalid producer timestamp.
The service returns this error ACK if the producer clock has a large drift into the future. Higher-level SDKs (for example, Java or C) use some version of the system clock to satisfy the current time callback from PIC. Ensure that the system clock is set properly. Clients using the PIC directly should ensure that their callback functions return the correct timestamp.


0x52000064
STATUS_ACK_ERR_STREAM_NOT_ACTIVE
Inactive stream.
A call to a backend API was made while the stream was not in an "Active" state. This occurs when the client creates the stream and immediately continues to push frames into it. The SDK handles this scenario through the state machine and recovery mechanism.


0x52000065
STATUS_ACK_ERR_KMS_KEY_ACCESS_DENIED
AWS KMS access denied error.
Returned when the account has no access to the specified key.


0x52000066
STATUS_ACK_ERR_KMS_KEY_DISABLED
AWS KMS key is disabled
The specified key has been disabled.


0x52000067
STATUS_ACK_ERR_KMS_KEY_VALIDATION_ERROR
AWS KMS key validation error.
Generic validation error. For more information, see the AWS Key Management Service API Reference.


0x52000068
STATUS_ACK_ERR_KMS_KEY_UNAVAILABLE
AWS KMS key unavailable.
The key is unavailable. For more information, see the AWS Key Management Service API Reference.


0x52000069
STATUS_ACK_ERR_KMS_KEY_INVALID_USAGE
Invalid use of AWS KMS key.
The AWS KMS key is not configured to be used in this context. For more information, see the AWS Key Management Service API Reference.


0x5200006a
STATUS_ACK_ERR_KMS_KEY_INVALID_STATE
AWS KMS invalid state.
For more information, see the AWS Key Management Service API Reference.


0x5200006b
STATUS_ACK_ERR_KMS_KEY_NOT_FOUND
AWS KMS key not found.
The key was not found. For more information, see the AWS Key Management Service API Reference.


0x5200006c
STATUS_ACK_ERR_STREAM_DELETED
The stream has been or is being deleted.
The stream is being deleted by another application or through the AWS Management Console.


0x5200006d
STATUS_ACK_ERR_ACK_INTERNAL_ERROR
Internal error.
Generic service internal error.


0x5200006e
STATUS_ACK_ERR_FRAGMENT_ARCHIVAL_ERROR
Fragment archival error.
Returned when the service fails to durably persist and index the fragment. Although it's rare, it can occur for various reasons. By default, the SDK retries sending the fragment.


0x5200006f
STATUS_ACK_ERR_UNKNOWN_ACK_ERROR
Unknown error.
The service returned an unknown error.


0x52000070
STATUS_MISSING_ERR_ACK_ID
Missing ACK information.
The ACK parser completed parsing, but the FragmentAck information is missing.


0x52000071
STATUS_INVALID_ACK_SEGMENT_LEN
Invalid ACK segment length.
An ACK segment string with an invalid length was specified to the ACK parser. For more information, see Producer SDK Limits.


0x52000074
STATUS_MAX_FRAGMENT_METADATA_COUNT
The maximum number of metadata items has been added to a fragment.
A Kinesis video stream can add up to 10 metadata items to a fragment, either by adding a nonpersistent item to a fragment, or by adding a persistent item to the metadata queue. For more information, see Using Streaming Metadata with Kinesis Video Streams.


0x52000075
STATUS_ACK_ERR_FRAGMENT_METADATA_LIMIT_REACHED
A limit (maximum metadata count, metadata name length, or metadata value length) has been reached.
The Producer SDK limits the number and size of metadata items. This error does not occur unless the limits in the Producer SDK code are changed. For more information, see Using Streaming Metadata with Kinesis Video Streams.


0x52000076
STATUS_BLOCKING_PUT_INTERRUPTED_STREAM_TERMINATED
Not implemented.



0x52000077
STATUS_INVALID_METADATA_NAME
The metadata name is not valid.
The metadata name cannot start with the string "AWS". If this error occurs, the metadata item is not added to the fragment or metadata queue. For more information, see Using Streaming Metadata with Kinesis Video Streams.


0x52000078
STATUS_END_OF_FRAGMENT_FRAME_INVALID_STATE
The end of a fragment frame is in an invalid state.
The end of fragment should not be sent in a non-key-frame fragmented stream.


0x52000079
STATUS_TRACK_INFO_MISSING
Track information is missing.
The track number must be greater than 0 and it must match the track id.


0x5200007a
STATUS_MAX_TRACK_COUNT_EXCEEDED
Maximum track count is exceeded.
You can have a maximum of 3 tracks per stream.


0x5200007b
STATUS_OFFLINE_MODE_WITH_ZERO_RETENTION
The offline streaming mode retention time is set to zero.
The offline streaming mode retention time should not be set to zero.


0x5200007c
STATUS_ACK_ERR_TRACK_NUMBER_MISMATCH
The track number of the error ACK is mismatched.



0x5200007d
STATUS_ACK_ERR_FRAMES_MISSING_FOR_TRACK
Frames missing for a track.



0x5200007e
STATUS_ACK_ERR_MORE_THAN_ALLOWED_TRACKS_FOUND
Maximum allowed number of tracks is exceeded.



0x5200007f
STATUS_UPLOAD_HANDLE_ABORTED
Upload handle is aborted.



0x52000080
STATUS_INVALID_CERT_PATH_LENGTH
Invalid certificate path length.



0x52000081
STATUS_DUPLICATE_TRACK_ID_FOUND
Duplicate track ID found.




Error and Status Codes Returned by the Duration Library
The following table contains error and status information that is returned by methods in the Duration library.




Code
Message




0xFFFFFFFFFFFFFFFF
INVALID_DURATION_VALUE



Error and Status Codes Returned by the Common Library
The following table contains error and status information that is returned by methods in the Common library.
Note
These error and status information codes are common to many APIs.




Code
Message
Description




0x00000001
STATUS_NULL_ARG
NULL was passed for a mandatory argument.


0x00000002
STATUS_INVALID_ARG
An invalid value was specified for an argument.


0x00000003
STATUS_INVALID_ARG_LEN
An invalid argument length was specified.


0x00000004
STATUS_NOT_ENOUGH_MEMORY
Could not allocate enough memory.


0x00000005
STATUS_BUFFER_TOO_SMALL
The specified buffer size is too small.


0x00000006
STATUS_UNEXPECTED_EOF
An unexpected end of file was reached.


0x00000007
STATUS_FORMAT_ERROR
An invalid format was encountered.


0x00000008
STATUS_INVALID_HANDLE_ERROR
Invalid handle value.


0x00000009
STATUS_OPEN_FILE_FAILED
Failed to open a file.


0x0000000a
STATUS_READ_FILE_FAILED
Failed to read from a file.


0x0000000b
STATUS_WRITE_TO_FILE_FAILED
Failed to write to a file.


0x0000000c
STATUS_INTERNAL_ERROR
An internal error that normally doesn't occur and might indicate an SDK or service API bug.


0x0000000d
STATUS_INVALID_OPERATION
There was an invalid operation, or the operation is not permitted.


0x0000000e
STATUS_NOT_IMPLEMENTED
The feature is not implemented.


0x0000000f
STATUS_OPERATION_TIMED_OUT
The operation timed out.


0x00000010
STATUS_NOT_FOUND
A required resource was not found.



Error and Status Codes Returned by the Heap Library
The following table contains error and status information that is returned by methods in the Heap library.




Code
Message
Description




0x01000001
STATUS_HEAP_FLAGS_ERROR
An invalid combination of flags was specified.


0x01000002
STATUS_HEAP_NOT_INITIALIZED
An operation was attempted before the heap was initialized.


0x01000003
STATUS_HEAP_CORRUPTED
The heap was corrupted or the guard band (in debug mode) was overwritten. A buffer overflow in the client code might lead to a heap corruption.


0x01000004
STATUS_HEAP_VRAM_LIB_MISSING
The VRAM (video RAM) user or kernel mode library cannot be loaded or is missing. Check if the underlying platform supports VRAM allocations.


0x01000005
STATUS_HEAP_VRAM_LIB_REOPEN
Failed to open the VRAM library.


0x01000006
STATUS_HEAP_VRAM_INIT_FUNC_SYMBOL
Failed to load the INIT function export.


0x01000007
STATUS_HEAP_VRAM_ALLOC_FUNC_SYMBOL
Failed to load the ALLOC function export.


0x01000008
STATUS_HEAP_VRAM_FREE_FUNC_SYMBOL
Failed to load the FREE function export.


0x01000009
STATUS_HEAP_VRAM_LOCK_FUNC_SYMBOL
Failed to load the LOCK function export.


0x0100000a
STATUS_HEAP_VRAM_UNLOCK_FUNC_SYMBOL
Failed to load the UNLOCK function export.


0x0100000b
STATUS_HEAP_VRAM_UNINIT_FUNC_SYMBOL
Failed to load the UNINIT function export.


0x0100000c
STATUS_HEAP_VRAM_GETMAX_FUNC_SYMBOL
Failed to load the GETMAX function export.


0x0100000d
STATUS_HEAP_DIRECT_MEM_INIT
Failed to initialize the main heap pool in the hybrid heap.


0x0100000e
STATUS_HEAP_VRAM_INIT_FAILED
The VRAM dynamic initialization failed.


0x0100000f
STATUS_HEAP_LIBRARY_FREE_FAILED
Failed to de-allocate and free the VRAM library.


0x01000010
STATUS_HEAP_VRAM_ALLOC_FAILED
The VRAM allocation failed.


0x01000011
STATUS_HEAP_VRAM_FREE_FAILED
The VRAM free failed.


0x01000012
STATUS_HEAP_VRAM_MAP_FAILED
The VRAM map failed.


0x01000013
STATUS_HEAP_VRAM_UNMAP_FAILED
The VRAM unmap failed.


0x01000014
STATUS_HEAP_VRAM_UNINIT_FAILED
The VRAM deinitialization failed.



Error and Status Codes Returned by the MKVGen Library
The following table contains error and status information that is returned by methods in the MKVGen library.




Code
Message
Description / Recommended Action




0x32000001
STATUS_MKV_INVALID_FRAME_DATA
Invalid members of the Frame data structure. Ensure that the duration, size, and frame data are valid and are within the limits specified in Producer SDK Limits.


0x32000002
STATUS_MKV_INVALID_FRAME_TIMESTAMP
Invalid frame timestamp. The calculated PTS (presentation timestamp) and DTS (decoding timestamp) are greater or equal to the timestamp of the start frame of the fragment. This is an indication of a potential media pipeline restart or an encoder stability issue. For troubleshooting information, see Error: "Failed to submit frame to Kinesis Video client"


0x32000003
STATUS_MKV_INVALID_CLUSTER_DURATION
An invalid fragment duration was specified. For more information, see Producer SDK Limits.


0x32000004
STATUS_MKV_INVALID_CONTENT_TYPE_LENGTH
Invalid content type string length. For more information, see Producer SDK Limits.


0x32000005
STATUS_MKV_NUMBER_TOO_BIG
There was an attempt to encode a number that's too large to be represented in EBML (Extensible Binary Meta Language) format. This should not be exposed to the SDK clients.


0x32000006
STATUS_MKV_INVALID_CODEC_ID_LENGTH
Invalid codec ID string length. For more information, see Producer SDK Limits.


0x32000007
STATUS_MKV_INVALID_TRACK_NAME_LENGTH
Invalid track name string length. For more information, see Producer SDK Limits.


0x32000008
STATUS_MKV_INVALID_CODEC_PRIVATE_LENGTH
Invalid codec private data length. For more information, see Producer SDK Limits.


0x32000009
STATUS_MKV_CODEC_PRIVATE_NULL
The codec private data (CPD) is NULL, whereas the CPD size is greater than 0.


0x3200000a
STATUS_MKV_INVALID_TIMECODE_SCALE
Invalid timecode scale value. For more information, see Producer SDK Limits.


0x3200000b
STATUS_MKV_MAX_FRAME_TIMECODE
The frame timecode is greater than the maximum. For more information, see Producer SDK Limits.


0x3200000c
STATUS_MKV_LARGE_FRAME_TIMECODE
The max frame timecode was reached. The MKV format uses signed 16 bits to represent the relative timecode of the frame to the beginning of the cluster. The error is generated if the frame timecode cannot be represented. This error indicates either a bad timecode scale selection or the cluster duration is too long, so representing the frame timecode overflows the signed 16-bit space.


0x3200000d
STATUS_MKV_INVALID_ANNEXB_NALU_IN_FRAME_DATA
An invalid Annex-B start code was encountered. For example, the Annex-B adaptation flag was specified and the code encounters an invalid start sequence of more than three zeroes. A valid Annex-B format should have an "emulation prevention" sequence to escape a sequence of three or more zeroes in the bytestream. For more information, see the MPEG specification. For information about this error on Android, see STATUS_MKV_INVALID_ANNEXB_NALU_IN_FRAME_DATA (0x3200000d) error on Android.


0x3200000e
STATUS_MKV_INVALID_AVCC_NALU_IN_FRAME_DATA
Invalid AVCC NALu packaging when the adapting AVCC flag is specified. Ensure that the bytestream is in a valid AVCC format. For more information, see the MPEG specification.


0x3200000f
STATUS_MKV_BOTH_ANNEXB_AND_AVCC_SPECIFIED
Both adapting AVCC and Annex-B NALs were specified. Specify either one, or specify none.


0x32000010
STATUS_MKV_INVALID_ANNEXB_NALU_IN_CPD
Invalid Annex-B format of CPD when the adapting Annex-B flag is specified. Ensure that the CPD is in valid Annex-B format. If it is not, then remove the CPD Annex-B adaptation flag.


0x32000011
STATUS_MKV_PTS_DTS_ARE_NOT_SAME
Kinesis Video Streams enforces the PTS (presentation timestamp) and DTS (decoding timestamp) to be the same for the fragment start frames. These are the key frames that start the fragment.


0x32000012
STATUS_MKV_INVALID_H264_H265_CPD
Failed to parse H264/H265 codec private data.


0x32000013
STATUS_MKV_INVALID_H264_H265_SPS_WIDTH
Failed to extract the width from the codec private data.


0x32000014
STATUS_MKV_INVALID_H264_H265_SPS_HEIGHT
Failed to extract the height from codec private data.


0x32000015
STATUS_MKV_INVALID_H264_H265_SPS_NALU
Invalid H264/H265 SPS NALu.


0x32000016
STATUS_MKV_INVALID_BIH_CPD
Invalid bitmap info header format in the codec private data.


0x32000017
STATUS_MKV_INVALID_HEVC_NALU_COUNT
Invalid High Efficiency Video Coding (HEVC) Network Abstraction Layer units (NALU) count.


0x32000018
STATUS_MKV_INVALID_HEVC_FORMAT
Invalid HEVC format.


0x32000019
STATUS_MKV_HEVC_SPS_NALU_MISSING
Missing HEVC NALUs in the Sequence Parameter Set (SPS).


0x3200001a
STATUS_MKV_INVALID_HEVC_SPS_NALU_SIZE
Invalid HEVC SPS NALU size.


0x3200001b
STATUS_MKV_INVALID_HEVC_SPS_CHROMA_FORMAT_IDC
Invalid Chroma format IDC.


0x3200001c
STATUS_MKV_INVALID_HEVC_SPS_RESERVED
Invalid HEVC reserved SPS.


0x3200001d
STATUS_MKV_MIN_ANNEX_B_CPD_SIZE
Minimum Annex-b codec private beta value size. For H264, this value must be equal to or greater that 11. For H265, this value must be equal to or greater than 15.


0x3200001e
STATUS_MKV_ANNEXB_CPD_MISSING_NALUS
Missing codec private data in Annex-B NALUs.


0x3200001f
STATUS_MKV_INVALID_ANNEXB_CPD_NALUS
Invalid codec private beta in Annex-B NALUs.


0x32000020
STATUS_MKV_INVALID_TAG_NAME_LENGTH
Invalid tag name length. Valid value is greater than zero and less than 128.


0x32000021
STATUS_MKV_INVALID_TAG_VALUE_LENGTH
Invalid tag value length. valid value is greater than zero and less than 256.


0x32000022
STATUS_MKV_INVALID_GENERATOR_STATE_TAGS
Invalid generator state tags.


0x32000023
STATUS_MKV_INVALID_AAC_CPD_SAMPLING_FREQUENCY_INDEX
Invalid AAC codec private data sampling frequency index.


0x32000024
STATUS_MKV_INVALID_AAC_CPD_CHANNEL_CONFIG
Invalid AAC codec private data channel configuration.


0x32000025
STATUS_MKV_INVALID_AAC_CPD
Invalid AAC codec private data.


0x32000026
STATUS_MKV_TRACK_INFO_NOT_FOUND
Track information not found.


0x32000027
STATUS_MKV_INVALID_SEGMENT_UUID
Invalid segment UUID.


0x32000028
STATUS_MKV_INVALID_TRACK_UID
Invalid track UID.



Error and Status Codes Returned by the Trace Library
The following table contains error and status information that is returned by methods in the Trace library.




Code
Message




0x10100001
STATUS_MIN_PROFILER_BUFFER



Error and Status Codes Returned by the Utils Library
The following table contains error and status information that is returned by methods in the Utils library.




Code
Message




0x40000001
STATUS_INVALID_BASE64_ENCODE


0x40000002
STATUS_INVALID_BASE


0x40000003
STATUS_INVALID_DIGIT


0x40000004
STATUS_INT_OVERFLOW


0x40000005
STATUS_EMPTY_STRING


0x40000006
STATUS_DIRECTORY_OPEN_FAILED


0x40000007
STATUS_PATH_TOO_LONG


0x40000008
STATUS_UNKNOWN_DIR_ENTRY_TYPE


0x40000009
STATUS_REMOVE_DIRECTORY_FAILED


0x4000000a
STATUS_REMOVE_FILE_FAILED


0x4000000b
STATUS_REMOVE_LINK_FAILED


0x4000000c
STATUS_DIRECTORY_ACCESS_DENIED


0x4000000d
STATUS_DIRECTORY_MISSING_PATH


0x4000000e
STATUS_DIRECTORY_ENTRY_STAT_ERROR



Error and Status Codes Returned by the View Library
The following table contains error and status information that is returned by methods in the View library.




Code
Message
Description




0x30000001
STATUS_MIN_CONTENT_VIEW_ITEMS
An invalid content view item count was specified. For more information, see Producer SDK Limits.


0x30000002
STATUS_INVALID_CONTENT_VIEW_DURATION
An invalid content view duration was specified. For more information, see Producer SDK Limits.


0x30000003
STATUS_CONTENT_VIEW_NO_MORE_ITEMS
An attempt was made to get past the head position.


0x30000004
STATUS_CONTENT_VIEW_INVALID_INDEX
An invalid index is specified.


0x30000005
STATUS_CONTENT_VIEW_INVALID_TIMESTAMP
There was an invalid timestamp or a timestamp overlap. The frame decoding timestamp should be greater or equal to the previous frame timestamp, plus the previous frame duration: DTS\(n\) >= DTS\(n\-1\) \ Duration\(n\-1\). This error often indicates an "unstable" encoder. The encoder produces a burst of encoded frames, and their timestamps are smaller than the intra-frame durations. Or the stream is configured to use SDK timestamps, and the frames are sent faster than the frame durations. To help with some "jitter" in the encoder, specify a smaller frame duration in the StreamInfo.StreamCaps structure. For example, if the stream is 25FPS, each frame's duration is 40 ms. However, to handle the encoder jitter, we recommend that you use half of that frame duration (20 ms). Some streams require more precise control over the timing for error detection.


0x30000006
STATUS_INVALID_CONTENT_VIEW_LENGTH
An invalid content view item data length was specified.



Errors and Status Codes Returned by PutFrame Callbacks - C Producer Library
The following section contains error and status information that is returned by callbacks for the PutFrame operation within the C producer library.




Code
Message
Description
Recommended Action




0x15000001
STATUS_STOP_CALLBACK_CHAIN
The callback chain has stopped.



0x15000002
STATUS_MAX_CALLBACK_CHAIN
The maximum callback chain was reached.



0x15000003
STATUS_INVALID_PLATFORM_CALLBACKS_VERSION
Invalid PlatformCallbacks structure version.
Specify the correct current version of the structure.


0x15000004
STATUS_INVALID_PRODUCER_CALLBACKS_VERSION
Invalid ProducerCallbacks structure version.
Specify the correct current version of the structure.


0x15000005
STATUS_INVALID_STREAM_CALLBACKS_VERSION
Invalid StreamCallbacks structure version.
Specify the correct current version of the structure.


0x15000006
STATUS_INVALID_AUTH_CALLBACKS_VERSION
Invalid AuthCallbacks structure version.
Specify the correct current version of the structure.


0x15000007
STATUS_INVALID_API_CALLBACKS_VERSION
Invalid ApiCallbacks structure version.
Specify the correct current version of the structure.


0x15000008
STATUS_INVALID_AWS_CREDENTIALS_VERSION
Invalid AwsCredentials structure version.
Specify the correct current version of the structure.


0x15000009
STATUS_MAX_REQUEST_HEADER_COUNT
The maximum request header count was reached.



0x1500000a
STATUS_MAX_REQUEST_HEADER_NAME_LEN
The maximum request header name length was reached.



0x1500000b
STATUS_MAX_REQUEST_HEADER_VALUE_LEN
The maximum request header value length was reached.



0x1500000c
STATUS_INVALID_API_CALL_RETURN_JSON
Invalid return JSON for an API call.



0x1500000d
STATUS_CURL_INIT_FAILED
Curl initialization failed.



0x1500000e
STATUS_CURL_LIBRARY_INIT_FAILED
Curl lib initialization failed.



0x1500000f
STATUS_INVALID_DESCRIBE_STREAM_RETURN_JSON
Invalid return JSON for DescribeStream.



0x150000010
STATUS_HMAC_GENERATION_ERROR
HMAC generation error.



0x150000011
STATUS_IOT_FAILED
IOT authorization failed.



0x150000012
STATUS_MAX_ROLE_ALIAS_LEN_EXCEEDED
The maximum role alias length was reached.
Specify a shorter alias length.


0x150000013
STATUS_MAX_USER_AGENT_NAME_POSTFIX_LEN_EXCEEDED
The maximum agent name postfix length was reached.



0x150000014
STATUS_MAX_CUSTOM_USER_AGENT_LEN_EXCEEDED
The maximum customer user agent length was reached.



0x150000015
STATUS_INVALID_USER_AGENT_LENGTH
Invalid user agent length.



0x150000016
STATUS_INVALID_ENDPOINT_CACHING_PERIOD
Invalid endpoint caching period.
Specify a caching period that is less than 24 hours.


0x150000017
STATUS_IOT_EXPIRATION_OCCURS_IN_PAST
IOT expiration timestamp occurs in the past.



0x150000018
STATUS_IOT_EXPIRATION_PARSING_FAILED
The IOT expiration parsing has failed.



