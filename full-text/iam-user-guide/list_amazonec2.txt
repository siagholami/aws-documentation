Actions, resources, and condition keys for Amazon EC2
Amazon EC2 (service prefix: ec2) provides the following service-specific resources, actions, and condition context keys for use in IAM permission policies.
References:
 Learn how to configure this service.
 View a list of the API operations available for this service.
 Learn how to secure this service and its resources by using IAM permission policies.
Topics
 Actions defined by Amazon EC2
 Resource types defined by Amazon EC2
 Condition keys for Amazon EC2
Actions defined by Amazon EC2
You can specify the following actions in the Action element of an IAM policy statement. Use policies to grant permissions to perform an operation in AWS. When you use an action in a policy, you usually allow or deny access to the API operation or CLI command with the same name. However, in some cases, a single action controls access to more than one operation. Alternatively, some operations require several different actions.
The Resource types column indicates whether each action supports resource-level permissions. If there is no value for this column, you must specify all resources ("*") in the Resource element of your policy statement. If the column includes a resource type, then you can specify an ARN of that type in a statement with that action. Required resources are indicated in the table with an asterisk (*). If you specify a resource-level permission ARN in a statement using this action, then it must be of this type. Some actions support multiple resource types. If the resource type is optional (not indicated as required), then you can choose to use one but not the other.
For details about the columns in the following table, see The actions table.

[See the AWS documentation website for more details]
Resource types defined by Amazon EC2
The following resource types are defined by this service and can be used in the Resource element of IAM permission policy statements. Each action in the Actions table identifies the resource types that can be specified with that action. A resource type can also define which condition keys you can include in a policy. These keys are displayed in the last column of the table. For details about the columns in the following table, see The resource types table.




Resource types
ARN
Condition keys




 capacity-reservation 
arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 carrier-gateway 
arn:${Partition}:ec2:${Region}:${Account}:carrier-gateway/${CarrierGatewayId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 client-vpn-endpoint 
arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 customer-gateway 
arn:${Partition}:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}
 aws:ResourceTag/${TagKey}   ec2:Region   ec2:ResourceTag/${TagKey} 


 dedicated-host 
arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/${HostId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:AutoPlacement   ec2:AvailabilityZone   ec2:HostRecovery   ec2:InstanceType   ec2:Quantity   ec2:ResourceTag/${TagKey} 


 dhcp-options 
arn:${Partition}:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 egress-only-internet-gateway 
arn:${Partition}:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 elastic-gpu 
arn:${Partition}:ec2:${Region}:${Account}:elastic-gpu/${ElasticGpuId}
 ec2:ElasticGpuType 


 elastic-inference 
arn:${Partition}:elastic-inference:${Region}:${Account}:elastic-inference-accelerator/${ElasticInferenceAcceleratorId}



 export-instance-task 
arn:${Partition}:ec2:${Region}:${Account}:export-instance-task/${ExportTaskId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 fleet 
arn:${Partition}:ec2:${Region}:${Account}:fleet/${FleetId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 fpga-image 
arn:${Partition}:ec2:${Region}::fpga-image/${FpgaImageId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Owner   ec2:Public   ec2:Region   ec2:ResourceTag/${TagKey} 


 image 
arn:${Partition}:ec2:${Region}::image/${ImageId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:ImageType   ec2:Owner   ec2:Public   ec2:Region   ec2:ResourceTag/${TagKey}   ec2:RootDeviceType 


 instance 
arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:AvailabilityZone   ec2:EbsOptimized   ec2:InstanceProfile   ec2:InstanceType   ec2:PlacementGroup   ec2:Region   ec2:ResourceTag/${TagKey}   ec2:RootDeviceType   ec2:Tenancy 


 internet-gateway 
arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 key-pair 
arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 launch-template 
arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 local-gateway 
arn:${Partition}:ec2:${Region}:${Account}:local-gateway/${LocalGatewayId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 local-gateway-route-table 
arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRouteTableId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 local-gateway-route-table-virtual-interface-group-association 
arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-virtual-interface-group-association/${LocalGatewayRouteTableVirtualInterfaceGroupAssociationId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 local-gateway-route-table-vpc-association 
arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 local-gateway-virtual-interface 
arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface/${LocalGatewayVirtualInterfaceId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 local-gateway-virtual-interface-group 
arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface-group/${LocalGatewayVirtualInterfaceGroupId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 natgateway 
arn:${Partition}:ec2:${Region}:${Account}:natgateway/${NatGatewayId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 network-acl 
arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey}   ec2:Vpc 


 network-interface 
arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:AssociatePublicIpAddress   ec2:AuthorizedService   ec2:AvailabilityZone   ec2:Region   ec2:ResourceTag/${TagKey}   ec2:Subnet   ec2:Vpc 


 placement-group 
arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:PlacementGroupStrategy   ec2:Region   ec2:ResourceTag/${TagKey} 


prefix-list
arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 reserved-instances 
arn:${Partition}:ec2:${Region}:${Account}:reserved-instances/${ReservationId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:AvailabilityZone   ec2:InstanceType   ec2:Region   ec2:ReservedInstancesOfferingType   ec2:ResourceTag/${TagKey}   ec2:Tenancy 


 route-table 
arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey}   ec2:Vpc 


 security-group 
arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey}   ec2:Vpc 


 snapshot 
arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Owner   ec2:ParentVolume   ec2:Region   ec2:ResourceTag/${TagKey}   ec2:SnapshotTime   ec2:VolumeSize 


 spot-instance-request 
arn:${Partition}:ec2:${Region}:${Account}:spot-instances-request/${SpotInstanceRequestId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 subnet 
arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:AvailabilityZone   ec2:Region   ec2:ResourceTag/${TagKey}   ec2:Vpc 


 traffic-mirror-session 
arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 traffic-mirror-target 
arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 traffic-mirror-filter 
arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 traffic-mirror-filter-rule 
arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter-rule/${TrafficMirrorFilterRuleId}
 ec2:Region 


 transit-gateway-attachment 
arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 transit-gateway-multicast-domain 
arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 transit-gateway-route-table 
arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 transit-gateway 
arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 volume 
arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:AvailabilityZone   ec2:Encrypted   ec2:ParentSnapshot   ec2:Region   ec2:ResourceTag/${TagKey}   ec2:VolumeIops   ec2:VolumeSize   ec2:VolumeType 


 vpc 
arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey}   ec2:Tenancy 


 vpc-endpoint 
arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpceId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey}   ec2:VpceServiceName   ec2:VpceServiceOwner 


 vpc-endpoint-service 
arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpceServiceId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey}   ec2:VpceServicePrivateDnsName 


 vpc-flow-log 
arn:${Partition}:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:Region   ec2:ResourceTag/${TagKey} 


 vpc-peering-connection 
arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}
 aws:ResourceTag/${TagKey}   ec2:AccepterVpc   ec2:Region   ec2:RequesterVpc   ec2:ResourceTag/${TagKey} 


 vpn-connection 
arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}
 aws:RequestTag/${TagKey}   aws:ResourceTag/${TagKey}   aws:TagKeys   ec2:AuthenticationType   ec2:DPDTimeoutSeconds   ec2:GatewayType   ec2:IKEVersions   ec2:InsideTunnelCidr   ec2:Phase1DHGroupNumbers   ec2:Phase1EncryptionAlgorithms   ec2:Phase1IntegrityAlgorithms   ec2:Phase1LifetimeSeconds   ec2:Phase2DHGroupNumbers   ec2:Phase2EncryptionAlgorithms   ec2:Phase2IntegrityAlgorithms   ec2:Phase2LifetimeSeconds   ec2:PresharedKeys   ec2:Region   ec2:RekeyFuzzPercentage   ec2:RekeyMarginTimeSeconds   ec2:ResourceTag/${TagKey}   ec2:RoutingType 


 vpn-gateway 
arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}




Condition keys for Amazon EC2
Amazon EC2 defines the following condition keys that can be used in the Condition element of an IAM policy. You can use these keys to further refine the conditions under which the policy statement applies. For details about the columns in the following table, see The condition keys table.
To view the global condition keys that are available to all services, see Available global condition keys.




Condition keys
Description
Type




 aws:RequestTag/${TagKey} 
Filters access by a tag key and value pair that is allowed in the request
String


 aws:ResourceTag/ 
Filters access by the preface string for a tag key and value pair that are attached to a resource
String


 aws:ResourceTag/${TagKey} 
Filters access by a tag key and value pair of a resource
String


 aws:TagKeys 
Filters access by a list of tag keys that are allowed in the request
String


 ec2:AccepterVpc 
Filters access by the ARN of an accepter VPC in a VPC peering connection
ARN


 ec2:AssociatePublicIpAddress 
Filters access by whether the user wants to associate a public IP address with the instance
Bool


 ec2:AuthenticationType 
Filters access by the authentication type for the VPN tunnel endpoints
String


 ec2:AuthorizedService 
Filters access by the AWS service that has permission to use a resource
String


 ec2:AuthorizedUser 
Filters access by an IAM principal that has permission to use a resource
String


 ec2:AutoPlacement 
Filters access by the Auto Placement properties of a Dedicated Host
String


 ec2:AvailabilityZone 
Filters access by the name of an Availability Zone in an AWS Region
String


 ec2:CreateAction 
Filters access by the name of a resource-creating API action
String


 ec2:DPDTimeoutSeconds 
Filters access by the duration after which DPD timeout occurs on a VPN tunnel
Numeric


 ec2:EbsOptimized 
Filters access by whether the instance is enabled for EBS optimization
Bool


 ec2:ElasticGpuType 
Filters access by the type of Elastic Graphics accelerator
String


 ec2:Encrypted 
Filters access by whether the EBS volume is encrypted
Bool


 ec2:GatewayType 
Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection
String


 ec2:HostRecovery 
Filters access by whether host recovery is enabled for a Dedicated Host
String


 ec2:IKEVersions 
Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel
String


 ec2:ImageType 
Filters access by the type of image (machine, aki, or ari)
String


 ec2:InsideTunnelCidr 
Filters access by the range of inside IP addresses for a VPN tunnel
String


 ec2:InstanceMarketType 
Filters access by the market or purchasing option of an instance (on-demand or spot)
String


 ec2:InstanceProfile 
Filters access by the ARN of an instance profile
ARN


 ec2:InstanceType 
Filters access by the type of instance
String


 ec2:IsLaunchTemplateResource 
Filters access by whether users are able to override resources that are specified in the launch template
Bool


 ec2:LaunchTemplate 
Filters access by the ARN of a launch template
ARN


 ec2:MetadataHttpEndpoint 
Filters access by whether the HTTP endpoint is enabled for the instance metadata service
String


 ec2:MetadataHttpPutResponseHopLimit 
Filters access by the allowed number of hops when calling the instance metadata service
Numeric


 ec2:MetadataHttpTokens 
Filters access by whether tokens are required when calling the instance metadata service (optional or required)
String


 ec2:Owner 
Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)
String


 ec2:ParentSnapshot 
Filters access by the ARN of the parent snapshot
ARN


 ec2:ParentVolume 
Filters access by the ARN of the parent volume from which the snapshot was created
ARN


 ec2:Permission 
Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)
String


 ec2:Phase1DHGroupNumbers 
Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations
Numeric


 ec2:Phase1EncryptionAlgorithms 
Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations
String


 ec2:Phase1IntegrityAlgorithms 
Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations
String


 ec2:Phase1LifetimeSeconds 
Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel
Numeric


 ec2:Phase2DHGroupNumbers 
Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations
Numeric


 ec2:Phase2EncryptionAlgorithms 
Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations
String


 ec2:Phase2IntegrityAlgorithms 
Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations
String


 ec2:Phase2LifetimeSeconds 
Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel
Numeric


 ec2:PlacementGroup 
Filters access by the ARN of the placement group
ARN


 ec2:PlacementGroupStrategy 
Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)
String


 ec2:PresharedKeys 
Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway
String


 ec2:ProductCode 
Filters access by the product code that is associated with the AMI
String


 ec2:Public 
Filters access by whether the image has public launch permissions
Bool


 ec2:Quantity 
Filters access by the number of Dedicated Hosts in a request
Numeric


 ec2:Region 
Filters access by the name of the AWS Region
String


 ec2:RekeyFuzzPercentage 
Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel
Numeric


 ec2:RekeyMarginTimeSeconds 
Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel
Numeric


 ec2:RequesterVpc 
Filters access by the ARN of a requester VPC in a VPC peering connection
ARN


 ec2:ReservedInstancesOfferingType 
Filters access by the payment option of the Reserved Instance offering (No Upfront, Partial Upfront, or All Upfront)
String


 ec2:ResourceTag/ 
Filters access by the preface string for a tag key and value pair that are attached to a resource
String


 ec2:ResourceTag/${TagKey} 
Filters access by a tag key and value pair of a resource
String


 ec2:RoleDelivery 
Filters access by the version of the instance metadata service for retrieving IAM role credentials for EC2
Numeric


 ec2:RootDeviceType 
Filters access by the root device type of the instance (ebs or instance-store)
String


 ec2:RoutingType 
Filters access by the routing type for the VPN connection
String


 ec2:SnapshotTime 
Filters access by the initiation time of a snapshot
String


 ec2:SourceInstanceARN 
Filters access by the ARN of the instance from which the request originated
ARN


 ec2:Subnet 
Filters access by the ARN of the subnet
ARN


 ec2:Tenancy 
Filters access by the tenancy of the VPC or instance (default, dedicated, or host)
String


 ec2:VolumeIops 
Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume
Numeric


 ec2:VolumeSize 
Filters access by the size of the volume, in GiB.
Numeric


 ec2:VolumeType 
Filters access by the type of volume (gp2, io1, io2, st1, sc1, or standard)
String


 ec2:Vpc 
Filters access by the ARN of the VPC
ARN


ec2:VpceServiceName
Filters access by the name of the VPC endpoint service
String


ec2:VpceServiceOwner
Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)
String


ec2:VpceServicePrivateDnsName
Filters access by the private DNS name of the VPC endpoint service
String


