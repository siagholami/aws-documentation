Amazon RDS Database Log Files
You can view, download, and watch database logs using the AWS Management Console, the AWS Command Line Interface (AWS CLI), or the Amazon RDS API. Viewing, downloading, or watching transaction logs isn't supported. 
For engine-specific information, see the following:
 MariaDB Database Log Files
 Microsoft SQL Server Database Log Files
 MySQL Database Log Files
 Oracle Database Log Files
 PostgreSQL Database Log Files
Viewing and Listing Database Log Files
You can view database log files for your DB engine by using the AWS Management Console. You can list what log files are available for download or monitoring by using the AWS CLI or Amazon RDS API. 
Note
 If you can't view the list of log files for an existing Oracle DB instance, reboot the instance to view the list. 
Console
To view a database log file


Open the Amazon RDS console at https://console.aws.amazon.com/rds/.


In the navigation pane, choose Databases.


Choose the name of the DB instance that has the log file that you want to view.


Choose the Logs & events tab.


Scroll down to the Logs section. 


In the Logs section, choose the log that you want to view, and then choose View.


AWS CLI
To list the available database log files for a DB instance, use the AWS CLI https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-log-files.html command.
The following example returns a list of log files for a DB instance named my-db-instance.
Example 
1. aws rds describe-db-log-files --db-instance-identifier my-db-instance
RDS API
To list the available database log files for a DB instance, use the Amazon RDS API https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBLogFiles.html action.
Downloading a Database Log File
You can use the AWS Management Console, AWS CLI or API to download a database log file. 
Console
To download a database log file


Open the Amazon RDS console at https://console.aws.amazon.com/rds/.


In the navigation pane, choose Databases.


Choose the name of the DB instance that has the log file that you want to view.


Choose the Logs & events tab.


Scroll down to the Logs section. 


In the Logs section, choose the button next to the log that you want to download, and then choose Download.


Open the context (right-click) menu for the link provided, and then choose Save Link As. Enter the location where you want the log file to be saved, and then choose Save.



AWS CLI
To download a database log file, use the AWS CLI command https://docs.aws.amazon.com/cli/latest/reference/rds/download-db-log-file-portion.html. By default, this command downloads only the latest portion of a log file. However, you can download an entire file by specifying the parameter --starting-token 0.
The following example shows how to download the entire contents of a log file called log/ERROR.4 and store it in a local file called errorlog.txt.
Example
For Linux, macOS, or Unix:  
1. aws rds download-db-log-file-portion \
2.                      --db-instance-identifier myexampledb \
3.                      --starting-token 0 --output text \
4.                      --log-file-name log/ERROR.4 > errorlog.txt
For Windows:  
1. aws rds download-db-log-file-portion ^
2.                      --db-instance-identifier myexampledb ^
3.                      --starting-token 0 --output text ^
4.                      --log-file-name log/ERROR.4 > errorlog.txt
RDS API
To download a database log file, use the Amazon RDS API https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DownloadDBLogFilePortion.html action.
Watching a Database Log File
You can monitor the contents of a log file by using the AWS Management Console.
Console
To watch a database log file


Open the Amazon RDS console at https://console.aws.amazon.com/rds/.


In the navigation pane, choose Databases.


Choose the name of the DB instance that has the log file that you want to view.


Choose the Logs & events tab.


In the Logs section, choose a log file, and then choose Watch.


Publishing Database Logs to Amazon CloudWatch Logs
In addition to viewing and downloading DB instance logs, you can publish logs to Amazon CloudWatch Logs. With CloudWatch Logs, you can perform real-time analysis of the log data, store the data in highly durable storage, and manage the data with the CloudWatch Logs Agent. AWS retains log data published to CloudWatch Logs for an indefinite time period unless you specify a retention period. For more information, see Change Log Data Retention in CloudWatch Logs. 
For engine-specific information, see the following:
 Publishing MariaDB Logs to Amazon CloudWatch Logs
 Publishing MySQL Logs to CloudWatch Logs
 Publishing Oracle Logs to Amazon CloudWatch Logs
 Publishing PostgreSQL Logs to CloudWatch Logs
 Publishing SQL Server Logs to Amazon CloudWatch Logs
Reading Log File Contents Using REST
Amazon RDS provides a REST endpoint that allows access to DB instance log files. This is useful if you need to write an application to stream Amazon RDS log file contents.
The syntax is:
GET /v13/downloadCompleteLogFile/DBInstanceIdentifier/LogFileName HTTP/1.1
Content-type: application/json
host: rds.region.amazonaws.com
The following parameters are required:
 DBInstanceIdentifier—the name of the DB instance that contains the log file you want to download.
 LogFileName—the name of the log file to be downloaded.
The response contains the contents of the requested log file, as a stream.
The following example downloads the log file named log/ERROR.6 for the DB instance named sample-sql in the us-west-2 region.
GET /v13/downloadCompleteLogFile/sample-sql/log/ERROR.6 HTTP/1.1
host: rds.us-west-2.amazonaws.com
X-Amz-Security-Token: AQoDYXdzEIH//////////wEa0AIXLhngC5zp9CyB1R6abwKrXHVR5efnAVN3XvR7IwqKYalFSn6UyJuEFTft9nObglx4QJGXV9cpACkETq=
X-Amz-Date: 20140903T233749Z
X-Amz-Algorithm: AWS4-HMAC-SHA256
X-Amz-Credential: AKIADQKE4SARGYLE/20140903/us-west-2/rds/aws4_request
X-Amz-SignedHeaders: host
X-Amz-Content-SHA256: e3b0c44298fc1c229afbf4c8996fb92427ae41e4649b934de495991b7852b855
X-Amz-Expires: 86400
X-Amz-Signature: 353a4f14b3f250142d9afc34f9f9948154d46ce7d4ec091d0cdabbcf8b40c558
If you specify a nonexistent DB instance, the response consists of the following error:
 DBInstanceNotFound—DBInstanceIdentifier does not refer to an existing DB instance. (HTTP status code: 404)