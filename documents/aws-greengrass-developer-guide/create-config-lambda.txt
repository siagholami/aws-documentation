Create and configure the Lambda function
In this step, you create a Lambda function that tracks the number of cars that pass the traffic light. Every time that the GG_TrafficLight shadow state changes to G, the Lambda function simulates the passing of a random number of cars (from 1 to 20). On every third G light change, the Lambda function sends basic statistics, such as min and max, to a DynamoDB table.


On your computer, create a folder named car_aggregator.


From the TrafficLight  examples folder on GitHub, download the carAggregator.py file to the car_aggregator folder. This is your Lambda function code.
Note
This example Python file is stored in the AWS IoT Greengrass Core SDK repository for convenience, but it doesn't use the AWS IoT Greengrass Core SDK.


If you aren't working in the US East (N. Virgina) Region, open carAggregator.py and change region_name in the following line to the AWS Region that's currently selected in the AWS IoT console. For the list of supported AWS Regions, see AWS IoT Greengrass in the Amazon Web Services General Reference.


dynamodb = boto3.resource('dynamodb', region_name='us-east-1')

Run the following command in a command-line window to install the Boto 3 - The AWS SDK for Python package and its dependencies in the car_aggregator folder. Greengrass Lambda functions use the AWS SDK to access other AWS services. (For Windows, use an elevated command prompt.)

pip install boto3 -t path-to-car_aggregator-folder
This results in a directory listing similar to the following:



Compress the contents of the car_aggregator folder into a .zip file named car_aggregator.zip. (Compress the folder's contents, not the folder.) This is your Lambda function deployment package.


In the Lambda console, create a function named GG_Car_Aggregator, and set the remaining fields as follows:
    For Runtime, choose Python 3.7.
    For Permissions, keep the default setting. This creates an execution role that grants basic Lambda permissions. This role isn't used by AWS IoT Greengrass.


Choose Create function.



Upload your Lambda function deployment package:


On the Configuration tab, under Function code, set the following fields:

For Code entry type, choose Upload a .zip file.
For Runtime, choose Python 3.7.
For Handler, enter carAggregator.function_handler



Choose Upload, and then choose car_aggregator.zip.


Choose Save.



Publish the Lambda function, and then create an alias named GG_CarAggregator. For step-by-step instructions, see the steps to publish the Lambda function and create an alias in Module 3 (Part 1).


In the AWS IoT console, add the Lambda function that you just created to your AWS IoT Greengrass group:


On the group configuration page, choose Lambdas, and then choose Add Lambda.


Choose Use existing Lambda.



Choose GG_Car_Aggregator, and then choose Next.



Choose Alias: GG_CarAggregator, and then choose Finish.

Note
You can remove other Lambda functions from earlier modules.


Edit the Lambda function configuration:


Choose the ellipsis (â€¦) associated with the Lambda function, and then choose Edit Configuration.



Under Memory limit, enter 64 MB.


Under Lambda lifecycle, choose Make this function long-lived and keep it running indefinitely, and then choose Update.


