Using ElastiCache Redis as an In-Memory Key-Value Store
Note
This topic is based on a Linux stack, but Windows stacks can also use Amazon ElastiCache (ElastiCache). For an example of how of how to use ElastiCache with a Windows instance, see ElastiCache as an ASP.NET Session Store.
You can often improve application server performance by using a caching server to provide an in-memory key-value store for small items of data such as strings. Amazon ElastiCache is an AWS service that makes it easy to provide caching support for your application server, using either the Memcached or Redis caching engines. AWS OpsWorks Stacks provides built-in support for Memcached. However, if Redis better suits your requirements, you can customize your stack so that your application servers use ElastiCache Redis.
This topic walks you through basic process of providing ElastiCache Redis caching support for Linux stacks, using a Rails application server as an example. It assumes that you already have an appropriate Ruby on Rails application. For more information on ElastiCache, see What Is Amazon ElastiCache?.
Topics
 Step 1: Create an ElastiCache Redis Cluster
 Step 2: Set up a Rails Stack
 Step 3: Create and Deploy a Custom Cookbook
 Step 4: Assign the Recipe to a LifeCycle Event
 Step 5: Add Access Information to the Stack Configuration JSON
 Step 6: Deploy and run the App