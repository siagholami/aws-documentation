How Amazon Chime works with IAM
Before you use IAM to manage access to Amazon Chime, you should understand what IAM features are available to use with Amazon Chime. To get a high-level view of how Amazon Chime and other AWS services work with IAM, see AWS services that work with IAM in the IAM User Guide.
Topics
 Amazon Chime identity-based policies
 Amazon Chime resource-based policies
 Authorization based on Amazon Chime tags
 Amazon Chime IAM roles
Amazon Chime identity-based policies
With IAM identity-based policies, you can specify allowed or denied actions and resources as well as the conditions under which actions are allowed or denied. Amazon Chime supports specific actions, resources, and condition keys. To learn about all of the elements that you use in a JSON policy, see IAM JSON policy elements reference in the IAM User Guide.
Actions
The Action element of an IAM identity-based policy describes the specific action or actions that will be allowed or denied by the policy. Policy actions usually have the same name as the associated AWS API operation. The action is used in a policy to grant permissions to perform the associated operation. 
Policy actions in Amazon Chime use the following prefix before the action: chime:. For example, to grant someone permission to access a list of Amazon Chime users in your account with the Amazon Chime ListUsers API operation, you include the chime:ListUsers action in their policy. Policy statements must include either an Action or NotAction element. Amazon Chime defines its own set of actions that describe tasks that you can perform with this service.
To specify multiple actions in a single statement, separate them with commas as follows:
"Action": [
      "chime:ListUsers",
      "chime:InviteUsers"
You can specify multiple actions using wildcards (*). For example, to specify all actions that begin with the word Get, include the following action:
"Action": "chime:Get*"
To see a list of Amazon Chime actions, see Actions defined by Amazon Chime in the IAM User Guide.
Resources
Amazon Chime does not support specifying resource ARNs in a policy.
Condition keys
Amazon Chime does not provide any service-specific condition keys. To see all AWS global condition keys, see AWS Global Condition Context Keys in the IAM User Guide.
Examples
To view examples of Amazon Chime identity-based policies, see Amazon Chime identity-based policy examples.
Amazon Chime resource-based policies
Amazon Chime does not support resource-based policies.
Authorization based on Amazon Chime tags
Amazon Chime does not support tagging resources or controlling access based on tags.
Amazon Chime IAM roles
An IAM role is an entity within your AWS account that has specific permissions.
Using temporary credentials with Amazon Chime
You can use temporary credentials to sign in with federation, assume an IAM role, or to assume a cross-account role. You obtain temporary security credentials by calling AWS STS API operations such as AssumeRole or GetFederationToken. 
Amazon Chime supports using temporary credentials. 
Service-linked roles
Service-linked roles allow AWS services to access resources in other services to complete an action on your behalf. Service-linked roles appear in your IAM account and are owned by the service. An IAM administrator can view but not edit the permissions for service-linked roles.
Amazon Chime supports service-linked roles. For details about creating or managing Amazon Chime service-linked roles, see Using service-linked roles for Amazon Chime.
Service roles
This feature allows a service to assume a service role on your behalf. This role allows the service to access resources in other services to complete an action on your behalf. Service roles appear in your IAM account and are owned by the account. This means that an IAM administrator can change the permissions for this role. However, doing so might break the functionality of the service.
Amazon Chime does not support service roles. 