Step 4: Test Seamlessly Joining an EC2 Instance for Windows Server to a Domain
You can use either of the following two methods to test seamless domain join. 
Method 1: Test domain join using the Amazon EC2 console
Use this step in the directory consumer account. 


Sign in to the AWS Management Console and open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.


From the Region selector in the navigation bar, choose the same Region as the existing directory.


Choose Launch Instance.


On the Step 1 page, choose Select for the appropriate AMI.


On the Step 2 page, select the appropriate instance type, and then choose Next: Configure Instance Details.


On the Step 3 page, do the following, and then choose Next: Add Storage:


For Network, choose the VPC that your directory was created in.


For Subnet, choose one of the public subnets in your VPC. The subnet that you choose must have all external traffic routed to an internet gateway. If this is not the case, you won't be able to connect to the instance remotely.


For Auto-assign Public IP, choose Enable.
For more information about public and private IP addressing, see Amazon EC2 Instance IP Addressing in the Amazon EC2 User Guide for Windows Instances.


For Domain join directory, choose your domain from the list. 
Note
This option is only available for Windows instances. Linux instances must be manually joined to the directory as explained in Manually Join a Linux Instance.


For IAM role, do one of the following:
Select an IAM role that has the AWS managed policies AmazonSSMManagedInstanceCore and AmazonSSMDirectoryServiceAccess attached to it.
-or-
If you haven't created an IAM role that has the AmazonSSMManagedInstanceCore and AmazonSSMDirectoryServiceAccess managed policies attached to it, choose the Create new IAM role link, and then do the following:


Choose Create role.


Under Select type of trusted entity, choose AWS service.


Under Choose the service that this role will use, in the full list of services, choose EC2.


Under Select your use case, choose EC2, and the choose Next: Permissions.


In the list of policies, select the AmazonSSMManagedInstanceCore and AmazonSSMDirectoryServiceAccess policies. (To filter the list, type SSM in the search box.) 
Note
AmazonSSMDirectoryServiceAccess provides the permissions to join instances to an Active Directory managed by AWS Directory Service. AmazonSSMManagedInstanceCore provides the minimum permissions necessary to use the Systems Manager service. For more information about creating a role with these permissions, and for information about other permissions and policies you can assign to your IAM role, see Create an IAM Instance Profile for Systems Manager in the AWS Systems Manager User Guide.


Choose Next: Tags.


(Optional) Add one or more tag key-value pairs to organize, track, or control access for this role, and then choose Next: Review.


For Role name, enter a name for your new role, such as EC2DomainJoin or another name that you prefer.


(Optional) For Role description, enter a description.


Choose Create role.


Go back to the Step 3 page. For IAM role, choose the refresh icon next to IAM role. Your new role should be visible in the menu. Choose it and leave the rest of the settings on this page with their default values, and then choose Next: Add Storage.




On both the Step 4 and Step 5 pages, leave the default settings or make changes as needed, and then choose the Next buttons.


On the Step 6 page, select a security group for the instance that has been configured to allow remote access to the instance from your network, and then choose Review and Launch.


On the Step 7 page, choose Launch, select a key pair, and then choose Launch Instance.


Method 2: Test domain join using the AWS Systems Manager console
Use this step in the directory consumer account. To complete this procedure, you'll need some information about the directory owner account.
Note
Make sure to attach the AmazonSSMManagedInstanceCore and AmazonSSMDirectoryServiceAccess managed policies to the IAM role permissions for your instance before starting the steps in this procedure. For information about these managed policies and other policies you can attach to an IAM instance profile for Systems Manager, see Create an IAM Instance Profile for Systems Manager in the AWS Systems Manager User Guide.For information about managed policies, see AWS Managed Policies in the IAM User Guide.


Sign into the AWS Management Console and open the AWS Systems Manager console at https://console.aws.amazon.com/systems-manager/.


In the navigation pane, choose Run Command.


Choose Run command.


On the Run a command page, search for AWS-JoinDirectoryServiceDomain. When it is displayed in the search results, select the AWS-JoinDirectoryServiceDomain option.


Scroll down to the Command parameters section. You must provide the following parameters:
    For Directory Id, enter the name of the AWS Directory Service directory.
Note
You can locate the Directory Id value by going back to the AWS Directory Service console, choosing Directories shared with me, selecting your directory, and then finding the value in the Shared directory details section. 
    For Directory Name, enter the name of the directory (for the directory owner account).
    For Dns Ip Addresses, enter the IP addresses of the DNS servers in the directory (for the directory owner account).
Note
You can locate the values for Directory Name and Dns Ip Addresses by going back to the AWS Directory Service console, choosing Directories shared with me, selecting your directory, and then reviewing the attributes found in the Owner directory details section. 


For Targets, select the instances that you want to domain join.


Leave the remainder of the form set to their default values, scroll down the page, and then choose Run.


In the navigation pane, choose Managed Instances.


Verify the instance successfully joined the domain by reviewing the instance in the list. If the Association Status displays Success, your instance has successfully joined the domain.


After completing either of these steps, you should now be able to join your EC2 instance to the domain. Once you do that, you can then log into your instance using a Remote Desktop Protocol (RDP) client with the credentials from your AWS Managed Microsoft AD user account.