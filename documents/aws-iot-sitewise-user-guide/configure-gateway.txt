Configuring a gateway
A gateway serves as the intermediary between your OPC-UA servers and AWS IoT SiteWise. You can easily deploy the AWS IoT SiteWise gateway software on any platform that can run AWS IoT Greengrass. For more information, see Choosing a gateway platform.
To configure a gateway that runs on Amazon EC2, you can create the required dependencies from an AWS CloudFormation template. For more information, see Configuring gateway dependencies on Amazon Elastic Compute Cloud.
Note
We recommend that you complete the following steps with someone who has IT administrative access to your local and corporate networks. These steps might require someone with knowledge of your OPC-UA servers and the authority to configure firewall settings.
Topics
 Setting up the gateway environment
 Creating an IAM policy and role
 Configuring an AWS IoT Greengrass group
 Configuring the AWS IoT SiteWise connector
 Adding the gateway to AWS IoT SiteWise
 Configuring gateway dependencies on Amazon Elastic Compute Cloud
Setting up the gateway environment
In this procedure, you install AWS IoT Greengrass and configure your gateway to use with AWS IoT SiteWise.
Note
This section includes instructions to install packages using the apt command. This is applicable to systems running Ubuntu or similar. If you aren't using a similar system, consult the documentation for your distribution and use the recommended package installer.
To set up the gateway


As appropriate, modify the BIOS settings of the gateway as follows.


Ensure that the gateway automatically restarts after a potential power failure, if applicable.


Ensure that the gateway won't hibernate or sleep, if applicable.


Ensure that the gateway connects to the internet.


(Optional) To use the gateway without the mouse, keyboard, and monitor, do the following steps to set up ssh on the gateway:


If you haven't already installed the SSH package, run the following command.
sudo apt install ssh


Run the following command.
service ssh status


Search for Active: active (running) in the output to confirm that the SSH server is running, 


Press Q to exit.


Run the following command to use SSH to connect to the gateway from another computer. Replace username with the user login and IP with the IP address of the gateway.
ssh username@IP
You can use the -p port-number argument to connect to a port other than the default port 22.

Download and install AWS IoT Greengrass Core software v1.10.0 or later, and create an AWS IoT Greengrass group for your gateway. To do so, follow the instructions in Getting started with AWS IoT Greengrass in the AWS IoT Greengrass Developer Guide.

We recommend that you run the AWS IoT Greengrass device setup script to quickly get started. If you want to review AWS IoT Greengrass requirements and processes more closely, you can walk through the steps in Module 1 and Module 2 to set up AWS IoT Greengrass.
Important
Review the AWS Regions where AWS IoT SiteWise is supported. When you choose a Region for AWS IoT Greengrass, make sure that the Region also supports AWS IoT SiteWise. Otherwise, you can't connect your gateway to AWS IoT SiteWise.
Before you continue to the next step, you should have AWS IoT Greengrass Core software installed on your gateway.

Run the following commands to install Java 8.

sudo apt update
   sudo apt install openjdk-8-jre
The AWS IoT SiteWise gateway software that you install later in this guide uses a Java 8 runtime.

Run the following command to verify that Java installed successfully.

java -version

The AWS IoT Greengrass Core software assumes a java8 directory. Run the following command to link your Java installation to that java8 directory.

sudo ln -s /usr/bin/java /usr/bin/java8

Run the following command to create a /var/sitewise data directory and give the ggc_user permissions for that directory. AWS IoT SiteWise stores data in this directory. You created the ggc_user when you set up AWS IoT Greengrass earlier in this procedure.

sudo mkdir /var/sitewise 
   sudo chown ggc_user /var/sitewise
   sudo chmod 700 /var/sitewise
The /var/sitewise is the default directory that AWS IoT SiteWise uses. You can customize the directory path (for example, replace /var/sitewise with /var/custom/path/), but doing so requires extra steps after the AWS IoT SiteWise gateway is created. For more information, see step 6 in Configuring the AWS IoT SiteWise connector.


If needed, ask your IT administrator to add the following endpoints and ports to your local network allow list:
    Ports: 443, 8443, and 8883
Important
You can configure AWS IoT Greengrass Core to use only port 443 for all network communications. For more information, see Connect on port 443 or through a network proxy in the AWS IoT Greengrass Developer Guide.
    The IP address of your gateway (port 443). To obtain the IP address, run the ip address or ifconfig command and note the inet value (for example, 203.0.113.0).
    The AWS IoT SiteWise data endpoint: data.iotsitewise.region.amazonaws.com (port 443).
    The following AWS endpoints that the gateway uses. You can find these in the /greengrass-root/config/config.json file. Replace greengrass-root with the root of your AWS IoT Greengrass installation.

ggHost: greengrass-ats.iot.region.amazonaws.com (ports 443, 8443, and 8883).
iotHost: prefix-ats.iot.region.amazonaws.com (ports 443, 8443, and 8883).

For more information, see AWS IoT Greengrass endpoints and quotas.


If the AWS IoT Greengrass Core software isn't already running, run the following command to start the AWS IoT Greengrass Core software. Replace greengrass-root with the root of your AWS IoT Greengrass installation. The default greengrass-root is /greengrass.


cd /greengrass-root/ggc/core
   sudo ./greengrassd start
You should see this message: Greengrass successfully started with PID: some-PID-number

Configure the AWS IoT Greengrass Core software to automatically start when your gateway turns on. Consult the documentation for your gateway's operating system.

Creating an IAM policy and role
You must create an AWS Identity and Access Management (IAM) policy and role to allow the gateway to access AWS IoT SiteWise on your behalf.
To create an IAM policy and role


Navigate to the IAM console.


In the navigation pane, choose Policies, and then choose Create policy.



On the JSON tab, delete the current contents of the policy field, and paste the following policy into the field.


{
     "Version": "2012-10-17",
     "Statement": [
       {
         "Effect": "Allow",
         "Action": "iotsitewise:BatchPutAssetPropertyValue",
         "Resource": "*"
       }
     ]
   }
Note
To improve security, you can specify an AWS IoT SiteWise asset hierarchy path in the Condition property. The following example is a trust policy that specifies an asset hierarchy path.  
{
     "Version": "2012-10-17",
     "Statement": [
       {
         "Effect": "Allow",
         "Action": "iotsitewise:BatchPutAssetPropertyValue",
         "Resource": "*",
         "Condition": {
           "StringLike": {
             "iotsitewise:assetHierarchyPath": [
               "/root node asset ID",
               "/root node asset ID/*"
             ]
           }
         }
       }
     ]
   }


Choose Review policy.


Enter a name and description for the policy, and then choose Create policy.


In the navigation pane, choose Roles, and then choose Create role.



Under Select type of trusted entity, choose AWS service. Under Choose the service that will use the role, choose Greengrass as the service that will use the role, and then choose Next: Permissions.



Search for the policy that you created (SiteWiseDemo), select the check box, and then choose Next: Tags.



(Optional) Add tags to your role, and then choose Next: Review.


Enter a name and description for the role, and then choose Create role.



In the green banner, choose the link to your new role. You can also use the search field to find the role.



Choose the Trust relationships tab, and then choose Edit trust relationship.



Replace the current contents of the policy field with the following, and then choose Update Trust Policy.


{
     "Version": "2012-10-17",
     "Statement": [
       {
         "Effect": "Allow",
         "Principal": {
           "Service": "greengrass.amazonaws.com"
         },
         "Action": "sts:AssumeRole"
       }
     ]
   }
Configuring an AWS IoT Greengrass group
To attach an IAM role to a group and enable stream manager


Navigate to the AWS IoT Greengrass console.


In the left navigation pane, under Greengrass, choose Groups, and then choose the group that you created in Setting up the gateway environment.



In the left navigation pane, choose Settings. In the Group Role section, choose Add Role.



Choose the role that you created in Creating an IAM policy and role, and then choose Save.



On the Settings page, in the Stream manager section, choose Edit.


Stream manager is a feature of AWS IoT Greengrass that enables your AWS IoT Greengrass Core to stream data to the AWS Cloud. AWS IoT SiteWise gateways require that stream manager is enabled. For more information, see Manage data streams on the AWS IoT Greengrass Core in the AWS IoT Greengrass Developer Guide.



Choose Enable, and then choose Save.


In the upper-left corner, choose Services to prepare for the next procedure.


Configuring the AWS IoT SiteWise connector
In this procedure, you configure the AWS IoT SiteWise connector on your Greengrass group. Connectors are prebuilt modules that accelerate the development lifecycle for common edge scenarios. For more information, see AWS IoT Greengrass connectors in the AWS IoT Greengrass Developer Guide.
To configure the AWS IoT SiteWise connector


Navigate to the AWS IoT Greengrass console.


In the left navigation pane, under Greengrass, choose Groups, and then choose the group that you created in Setting up the gateway environment.



In the left navigation page, choose Connectors. On the Connectors page, choose Add a connector.



Choose IoT SiteWise from the list and choose Next.



If your OPC-UA servers require authentication, you can create AWS Secrets Manager secrets with the server's user name and password. Then, you can attach each secrets to your Greengrass group and choose them under List of ARNs for OPC-UA username/password secrets. For more information about how to create and configure secrets, see Configuring source authentication. You can also add secrets to your connector later.



If you set up your gateway with a different path than /var/sitewise, enter that path for Local storage path.


(Optional) Enter a maximum disk buffer size for the connector. If the AWS IoT Greengrass core loses connection to the AWS Cloud, the connector caches data until it can successfully connect. If the cache size exceeds the maximum disk buffer size, the connector discards the oldest data from the queue.


Choose Add.


In the upper-right corner, in the Actions menu, choose Deploy.


Choose Automatic detection to start the deployment.


If the deployment fails, choose Deploy again. If the deployment continues to fail, see AWS IoT Greengrass deployment troubleshooting.
Adding the gateway to AWS IoT SiteWise
In this procedure, you add your gateway's Greengrass group to AWS IoT SiteWise. After you register your gateway with AWS IoT SiteWise, the service can deploy your data source configurations to your gateway.
To add the gateway to AWS IoT SiteWise


Navigate to the AWS IoT SiteWise console.


Choose Add gateway.


On the Add SiteWise gateway page, do the following:


Enter a Name for the gateway. Consider including the location of the gateway in the name so that you can easily identify it.


For Greengrass group ID, choose the Greengrass group that you created earlier. 
Example 



Choose Add gateway.


After your gateway creates, you can add a source for each OPC-UA server from which you want your gateway to ingest data. For more information, see Configuring data sources.
You can view CloudWatch metrics to verify that your gateway is connected to AWS IoT SiteWise. For more information, see Gateway metrics.