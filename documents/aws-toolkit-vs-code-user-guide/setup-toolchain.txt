Configuring your toolchain
The AWS Toolkit for Visual Studio Code supports multiple languages that you can use to interact with AWS. This topic describes how to set up the toolchain for each of these languages.
Configure a toolchain for .NET Core


Ensure that you have the Toolkit for VS Code installed.


Install the C# extension. This extension enables VS Code to debug .NET Core applications.


Open an AWS Serverless Application Model (AWS SAM) application, or create one.


Open the folder that contains template.yaml.


Configure a toolchain for Node.js


Ensure that you have the Toolkit for VS Code installed.


Open an AWS SAM application, or create one.


Open the folder that contains template.yaml.


Configure a toolchain for Python


Ensure that you have the Toolkit for VS Code installed.


Install the Python extension for Visual Studio Code. This extension enables VS Code to debug Python applications.


Open an AWS SAM application, or create one.


Open the folder that contains template.yaml.


Open a terminal at the root of your application, and configure virtualenv by running python -m venv ./.venv.
Note
You only need to configure virtualenv once per system.


Activate virtualenv by running one of the following:
    Bash shell: ./.venv/Scripts/activate
    PowerShell: ./.venv/Scripts/Activate.ps1


Using Your toolchain
Once you have your toolchain set up, you can use it to run or debug the AWS SAM application.