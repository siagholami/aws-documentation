CreateDeploymentJob
Deploys a specific version of a robot application to robots in a fleet.
The robot application must have a numbered applicationVersion for consistency reasons. To create a new version, use CreateRobotApplicationVersion or see Creating a Robot Application Version. 
Note
After 90 days, deployment jobs expire and will be deleted. They will no longer be accessible. 
Request Syntax
```
POST /createDeploymentJob HTTP/1.1
Content-type: application/json
{
   "clientRequestToken": "string",
   "deploymentApplicationConfigs": [ 
      { 
         "application": "string",
         "applicationVersion": "string",
         "launchConfig": { 
            "environmentVariables": { 
               "string" : "string" 
            },
            "launchFile": "string",
            "packageName": "string",
            "postLaunchFile": "string",
            "preLaunchFile": "string"
         }
      }
   ],
   "deploymentConfig": { 
      "concurrentDeploymentPercentage": number,
      "downloadConditionFile": { 
         "bucket": "string",
         "etag": "string",
         "key": "string"
      },
      "failureThresholdPercentage": number,
      "robotDeploymentTimeoutInSeconds": number
   },
   "fleet": "string",
   "tags": { 
      "string" : "string" 
   }
}
```
URI Request Parameters
The request does not use any URI parameters.
Request Body
The request accepts the following data in JSON format.
 clientRequestToken  
Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
Type: String
Length Constraints: Minimum length of 1. Maximum length of 64.
Pattern: [a-zA-Z0-9_\-=]* 
Required: Yes
 deploymentApplicationConfigs  
The deployment application configuration.
Type: Array of DeploymentApplicationConfig objects
Array Members: Fixed number of 1 item.
Required: Yes
 deploymentConfig  
The requested deployment configuration.
Type: DeploymentConfig object
Required: No
 fleet  
The Amazon Resource Name (ARN) of the fleet to deploy.
Type: String
Length Constraints: Minimum length of 1. Maximum length of 1224.
Pattern: arn:.* 
Required: Yes
 tags  
A map that contains tag keys and tag values that are attached to the deployment job.
Type: String to string map
Key Length Constraints: Minimum length of 1. Maximum length of 128.
Key Pattern: [a-zA-Z0-9 _.\-\/=:]* 
Value Length Constraints: Minimum length of 0. Maximum length of 256.
Value Pattern: [a-zA-Z0-9 _.\-\/=:]* 
Required: No
Response Syntax
```
HTTP/1.1 200
Content-type: application/json
{
   "arn": "string",
   "createdAt": number,
   "deploymentApplicationConfigs": [ 
      { 
         "application": "string",
         "applicationVersion": "string",
         "launchConfig": { 
            "environmentVariables": { 
               "string" : "string" 
            },
            "launchFile": "string",
            "packageName": "string",
            "postLaunchFile": "string",
            "preLaunchFile": "string"
         }
      }
   ],
   "deploymentConfig": { 
      "concurrentDeploymentPercentage": number,
      "downloadConditionFile": { 
         "bucket": "string",
         "etag": "string",
         "key": "string"
      },
      "failureThresholdPercentage": number,
      "robotDeploymentTimeoutInSeconds": number
   },
   "failureCode": "string",
   "failureReason": "string",
   "fleet": "string",
   "status": "string",
   "tags": { 
      "string" : "string" 
   }
}
```
Response Elements
If the action is successful, the service sends back an HTTP 200 response.
The following data is returned in JSON format by the service.
 arn  
The Amazon Resource Name (ARN) of the deployment job.
Type: String
Length Constraints: Minimum length of 1. Maximum length of 1224.
Pattern: arn:.* 
 createdAt  
The time, in milliseconds since the epoch, when the fleet was created.
Type: Timestamp
 deploymentApplicationConfigs  
The deployment application configuration.
Type: Array of DeploymentApplicationConfig objects
Array Members: Fixed number of 1 item.
 deploymentConfig  
The deployment configuration.
Type: DeploymentConfig object
 failureCode  
The failure code of the simulation job if it failed:  
BadPermissionError
AWS Greengrass requires a service-level role permission to access other services. The role must include the  AWSGreengrassResourceAccessRolePolicy managed policy. 
ExtractingBundleFailure
The robot application could not be extracted from the bundle.
FailureThresholdBreached
The percentage of robots that could not be updated exceeded the percentage set for the deployment.
GreengrassDeploymentFailed
The robot application could not be deployed to the robot.
GreengrassGroupVersionDoesNotExist
The AWS Greengrass group or version associated with a robot is missing.
InternalServerError
An internal error has occurred. Retry your request, but if the problem persists, contact us with details.
MissingRobotApplicationArchitecture
The robot application does not have a source that matches the architecture of the robot.
MissingRobotDeploymentResource
One or more of the resources specified for the robot application are missing. For example, does the robot application have the correct launch package and launch file?
PostLaunchFileFailure
The post-launch script failed.
PreLaunchFileFailure
The pre-launch script failed.
ResourceNotFound
One or more deployment resources are missing. For example, do robot application source bundles still exist? 
RobotDeploymentNoResponse
There is no response from the robot. It might not be powered on or connected to the internet.
Type: String
Valid Values:ResourceNotFound | EnvironmentSetupError | EtagMismatch | FailureThresholdBreached | RobotDeploymentAborted | RobotDeploymentNoResponse | RobotAgentConnectionTimeout | GreengrassDeploymentFailed | MissingRobotArchitecture | MissingRobotApplicationArchitecture | MissingRobotDeploymentResource | GreengrassGroupVersionDoesNotExist | ExtractingBundleFailure | PreLaunchFileFailure | PostLaunchFileFailure | BadPermissionError | DownloadConditionFailed | InternalServerError 
 failureReason  
The failure reason of the deployment job if it failed.
Type: String
 fleet  
The target fleet for the deployment job.
Type: String
Length Constraints: Minimum length of 1. Maximum length of 1224.
Pattern: arn:.* 
 status  
The status of the deployment job.
Type: String
Valid Values:Pending | Preparing | InProgress | Failed | Succeeded | Canceled 
 tags  
The list of all tags added to the deployment job.
Type: String to string map
Key Length Constraints: Minimum length of 1. Maximum length of 128.
Key Pattern: [a-zA-Z0-9 _.\-\/=:]* 
Value Length Constraints: Minimum length of 0. Maximum length of 256.
Value Pattern: [a-zA-Z0-9 _.\-\/=:]* 
Errors
For information about the errors that are common to all actions, see Common Errors.
ConcurrentDeploymentException 
The failure percentage threshold percentage was met.
HTTP Status Code: 400
IdempotentParameterMismatchException 
The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical. 
HTTP Status Code: 400
InternalServerException 
AWS RoboMaker experienced a service issue. Try your call again.
HTTP Status Code: 500
InvalidParameterException 
A parameter specified in a request is not valid, is unsupported, or cannot be used. The returned message provides an explanation of the error value.
HTTP Status Code: 400
LimitExceededException 
The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed. 
HTTP Status Code: 400
ResourceNotFoundException 
The specified resource does not exist.
HTTP Status Code: 400
ThrottlingException 
AWS RoboMaker is temporarily unable to process the request. Try your call again.
HTTP Status Code: 400
See Also
For more information about using this API in one of the language-specific AWS SDKs, see the following:
  AWS Command Line Interface 
  AWS SDK for .NET 
  AWS SDK for C 
  AWS SDK for Go 
  AWS SDK for Java 
  AWS SDK for JavaScript 
  AWS SDK for PHP V3 
  AWS SDK for Python 
  AWS SDK for Ruby V2 