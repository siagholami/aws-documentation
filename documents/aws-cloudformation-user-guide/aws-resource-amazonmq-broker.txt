AWS::AmazonMQ::Broker
A broker is a message broker environment running on Amazon MQ. It is the basic building block of Amazon MQ.
The AWS::AmazonMQ::Broker resource lets you create Amazon MQ brokers, add configuration changes or modify users for the specified broker, return information about the specified broker, and delete the specified broker. For more information, see Amazon MQ Basic Elements in the Amazon MQ Developer Guide.
 ec2:CreateNetworkInterface
This permission is required to allow Amazon MQ to create an elastic network interface (ENI) on behalf of your account.
 ec2:CreateNetworkInterfacePermission
This permission is required to attach the ENI to the broker instance.
 ec2:DeleteNetworkInterface
 ec2:DeleteNetworkInterfacePermission
 ec2:DetachNetworkInterface
 ec2:DescribeInternetGateways
 ec2:DescribeNetworkInterfaces
 ec2:DescribeNetworkInterfacePermissions
 ec2:DescribeRouteTables
 ec2:DescribeSecurityGroups
 ec2:DescribeSubnets
 ec2:DescribeVpcs
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON
{
  "Type" : "AWS::AmazonMQ::Broker",
  "Properties" : {
      "[AuthenticationStrategy](#cfn-amazonmq-broker-authenticationstrategy)" : String,
      "[AutoMinorVersionUpgrade](#cfn-amazonmq-broker-autominorversionupgrade)" : Boolean,
      "[BrokerName](#cfn-amazonmq-broker-brokername)" : String,
      "[Configuration](#cfn-amazonmq-broker-configuration)" : ConfigurationId,
      "[DeploymentMode](#cfn-amazonmq-broker-deploymentmode)" : String,
      "[EncryptionOptions](#cfn-amazonmq-broker-encryptionoptions)" : EncryptionOptions,
      "[EngineType](#cfn-amazonmq-broker-enginetype)" : String,
      "[EngineVersion](#cfn-amazonmq-broker-engineversion)" : String,
      "[HostInstanceType](#cfn-amazonmq-broker-hostinstancetype)" : String,
      "[LdapMetadata](#cfn-amazonmq-broker-ldapmetadata)" : LdapMetadata,
      "[LdapServerMetadata](#cfn-amazonmq-broker-ldapservermetadata)" : LdapServerMetadata,
      "[Logs](#cfn-amazonmq-broker-logs)" : LogList,
      "[MaintenanceWindowStartTime](#cfn-amazonmq-broker-maintenancewindowstarttime)" : MaintenanceWindow,
      "[PubliclyAccessible](#cfn-amazonmq-broker-publiclyaccessible)" : Boolean,
      "[SecurityGroups](#cfn-amazonmq-broker-securitygroups)" : [ String, ... ],
      "[StorageType](#cfn-amazonmq-broker-storagetype)" : String,
      "[SubnetIds](#cfn-amazonmq-broker-subnetids)" : [ String, ... ],
      "[Tags](#cfn-amazonmq-broker-tags)" : [ TagsEntry, ... ],
      "[Users](#cfn-amazonmq-broker-users)" : [ User, ... ]
    }
}
YAML
Type: AWS::AmazonMQ::Broker
Properties: 
  [AuthenticationStrategy](#cfn-amazonmq-broker-authenticationstrategy): String
  [AutoMinorVersionUpgrade](#cfn-amazonmq-broker-autominorversionupgrade): Boolean
  [BrokerName](#cfn-amazonmq-broker-brokername): String
  [Configuration](#cfn-amazonmq-broker-configuration): 
    ConfigurationId
  [DeploymentMode](#cfn-amazonmq-broker-deploymentmode): String
  [EncryptionOptions](#cfn-amazonmq-broker-encryptionoptions): 
    EncryptionOptions
  [EngineType](#cfn-amazonmq-broker-enginetype): String
  [EngineVersion](#cfn-amazonmq-broker-engineversion): String
  [HostInstanceType](#cfn-amazonmq-broker-hostinstancetype): String
  [LdapMetadata](#cfn-amazonmq-broker-ldapmetadata): 
    LdapMetadata
  [LdapServerMetadata](#cfn-amazonmq-broker-ldapservermetadata): 
    LdapServerMetadata
  [Logs](#cfn-amazonmq-broker-logs): 
    LogList
  [MaintenanceWindowStartTime](#cfn-amazonmq-broker-maintenancewindowstarttime): 
    MaintenanceWindow
  [PubliclyAccessible](#cfn-amazonmq-broker-publiclyaccessible): Boolean
  [SecurityGroups](#cfn-amazonmq-broker-securitygroups): 
    - String
  [StorageType](#cfn-amazonmq-broker-storagetype): String
  [SubnetIds](#cfn-amazonmq-broker-subnetids): 
    - String
  [Tags](#cfn-amazonmq-broker-tags): 
    - TagsEntry
  [Users](#cfn-amazonmq-broker-users): 
    - User
Properties
AuthenticationStrategy 
Optional. The authentication strategy used to secure the broker. The default is SIMPLE.
Required: No
Type: String
Update requires: Replacement
AutoMinorVersionUpgrade 
Enables automatic upgrades to new minor versions for brokers, as Apache releases the versions. The automatic upgrades occur during the maintenance window of the broker or after a manual broker reboot.
Required: Yes
Type: Boolean
Update requires: No interruption
BrokerName 
The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain white spaces, brackets, wildcard characters, or special characters.
Required: Yes
Type: String
Update requires: Replacement
Configuration 
A list of information about the configuration.
Required: No
Type: ConfigurationId
Update requires: No interruption
DeploymentMode 
The deployment mode of the broker. Available values:
 SINGLE_INSTANCE
 ACTIVE_STANDBY_MULTI_AZ
Required: Yes
Type: String
Update requires: Replacement
EncryptionOptions 
Encryption options for the broker.
Required: No
Type: EncryptionOptions
Update requires: Replacement
EngineType 
The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.
Required: Yes
Type: String
Update requires: Replacement
EngineVersion 
The version of the broker engine. For a list of supported engine versions, see Engine in the Amazon MQ Developer Guide. 
Required: Yes
Type: String
Update requires: No interruption
HostInstanceType 
The broker's instance type.
Required: Yes
Type: String
Update requires: No interruption
LdapMetadata 
Not currently supported by AWS CloudFormation.
Required: No
Type: LdapMetadata
Update requires: No interruption
LdapServerMetadata 
Optional. The metadata of the LDAP server used to authenticate and authorize connections to the broker.
Required: No
Type: LdapServerMetadata
Update requires: No interruption
Logs 
Enables Amazon CloudWatch logging for brokers.
Required: No
Type: LogList
Update requires: No interruption
MaintenanceWindowStartTime 
The scheduled time period relative to UTC during which Amazon MQ begins to apply pending updates or patches to the broker..
Required: No
Type: MaintenanceWindow
Update requires: Replacement
PubliclyAccessible 
Enables connections from applications outside of the VPC that hosts the broker's subnets.
Required: Yes
Type: Boolean
Update requires: Replacement
SecurityGroups 
The list of rules (1 minimum, 125 maximum) that authorize connections to brokers.
Required: No
Type: List of String
Update requires: No interruption
StorageType 
The broker's storage type.
Required: No
Type: String
Update requires: Replacement
SubnetIds 
The list of groups (2 maximum) that define which subnets and IP ranges the broker can use from different Availability Zones. A SINGLE_INSTANCE deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ deployment requires two subnets.
Required: No
Type: List of String
Update requires: Replacement
Tags 
An array of key-value pairs. For more information, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide. 
Required: No
Type: List of TagsEntry
Update requires: No interruption
Users 
The list of ActiveMQ users (persons or applications) who can access queues and topics. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ \~). This value must be 2-100 characters long.
Required: Yes
Type: List of User
Update requires: No interruption
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the Amazon MQ broker ID. For example: 
b-1234a5b6-78cd-901e-2fgh-3i45j6k178l9 
For more information about using the Ref function, see Ref.
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.

AmqpEndpoints 
The AMQP endpoints of each broker instance as a list of strings.
amqpssl://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:5671 
Arn 
The Amazon Resource Name (ARN) of the Amazon MQ broker.
arn:aws:mq:us-east-2:123456789012:broker:MyBroker:b-1234a5b6-78cd-901e-2fgh-3i45j6k178l9 
ConfigurationId 
The unique ID that Amazon MQ generates for the configuration.
c-1234a5b6-78cd-901e-2fgh-3i45j6k178l9 
ConfigurationRevision 
The revision number of the configuration.
1 
IpAddresses 
The IP addresses of each broker instance as a list of strings.
['198.51.100.2', '203.0.113.9'] 
MqttEndpoints 
The MQTT endpoints of each broker instance as a list of strings.
mqttssl://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:8883 
OpenWireEndpoints 
The OpenWire endpoints of each broker instance as a list of strings.
ssl://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:61617 
StompEndpoints 
The STOMP endpoints of each broker instance as a list of strings.
stompssl://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:61614 
WssEndpoints 
The WSS endpoints of each broker instance as a list of strings.
wss://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:61619 
Examples
Basic Amazon MQ Broker
The following example creates a basic Amazon MQ broker with one user that belongs to a group. 
JSON
{
  "Description": "Create a basic AmazonMQ broker",
  "Resources": {
    "BasicBroker": {
      "Type": "AWS::AmazonMQ::Broker",
      "Properties": {
        "AutoMinorVersionUpgrade": "false",
        "BrokerName": "MyBasicBroker",
        "DeploymentMode": "SINGLE_INSTANCE",
        "EngineType": "ActiveMQ",
        "EngineVersion": "5.15.0",
        "HostInstanceType": "mq.t2.micro",
        "PubliclyAccessible": "true",
        "Users": [
          {
            "ConsoleAccess": "true",
            "Groups": [
              "MyGroup"
            ],
            "Password" : { "Ref" : "AmazonMqPassword" },
            "Username" : { "Ref" : "AmazonMqUsername" }
          }
        ]
      }
    }
  }
}
YAML
```
Description: "Create a basic AmazonMQ broker"
Resources: 
  BasicBroker:
    Type: "AWS::AmazonMQ::Broker"
    Properties: 
      AutoMinorVersionUpgrade: "false"
      BrokerName: MyBasicBroker
      DeploymentMode: SINGLE_INSTANCE
      EngineType: ActiveMQ
      EngineVersion: "5.15.0"
      HostInstanceType: mq.t2.micro
      PubliclyAccessible: "true"
      Users: 
        - 
          ConsoleAccess: "true"
          Groups: 
            - MyGroup
          Password: 
            Ref: "BrokerPassword"          
          Username: 
            Ref: "BrokerUsername"
```
Complex Amazon MQ Broker
The following example creates a complex Amazon MQ broker with two users that don't belong to a group and one user that belongs in a group. 
JSON
{
  "Description": "Create a complex AmazonMQ broker",
  "Resources": {
    "ComplexBroker": {
      "Type": "AWS::AmazonMQ::Broker",
      "Properties": {
        "AutoMinorVersionUpgrade": "false",
        "BrokerName": "MyComplexBroker",
        "Configuration": {
          "Id": { "Ref": "Configuration1" },
          "Revision" : { "Fn::GetAtt": ["Configuration1", "Revision"] }
        },
        "DeploymentMode": "SINGLE_INSTANCE",
        "EngineType": "ActiveMQ",
        "EngineVersion": "5.15.0",
        "HostInstanceType": "mq.t2.micro",
        "Logs": {
            "General": true,
            "Audit": false
        },
        "MaintenanceWindowStartTime": {
          "DayOfWeek": "Monday",
          "TimeOfDay": "22:45",
          "TimeZone": "America/Los_Angeles"
        },
        "PubliclyAccessible": "true",
        "SecurityGroups": [
          "sg-a1b234cd",
          "sg-e5f678gh"
        ],
        "SubnetIds": [
          "subnet-12a3b45c",
          "subnet-67d8e90f"
        ],         
        "Users": [{
          "ConsoleAccess": "true",
          "Password" : { "Ref" : "AmazonMqPassword1" },
          "Username" : { "Ref" : "AmazonMqUsername1" }
        }, {
          "Password" : { "Ref" : "AmazonMqPassword2" },
          "Username" : { "Ref" : "AmazonMqUsername2" }
        }, {
          "Groups": [
            "MyGroup1",
            "MyGroup2"
          ],
          "Password" : { "Ref" : "AmazonMqPassword3" },          
          "Username" : { "Ref" : "AmazonMqUsername3" }
        }]
      }
    }
  }
}
YAML
Description: Create a complex AmazonMQ broker
Resources:
  ComplexBroker:
    Type: 'AWS::AmazonMQ::Broker'
    Properties:
      AutoMinorVersionUpgrade: 'false'
      BrokerName: MyComplexBroker
      Configuration:
        Id: !Ref Configuration1
        Revision: !GetAtt 
          - Configuration1
          - Revision
      DeploymentMode: SINGLE_INSTANCE
      EngineType: ActiveMQ
      EngineVersion: 5.15.0
      HostInstanceType: mq.t2.micro
      Logs:
        General: true
        Audit: false
      MaintenanceWindowStartTime:
        DayOfWeek: Monday
        TimeOfDay: '22:45'
        TimeZone: America/Los_Angeles
      PubliclyAccessible: 'true'
      SecurityGroups:
        - sg-a1b234cd
        - sg-e5f678gh
      SubnetIds:
        - subnet-12a3b45c
        - subnet-67d8e90f
      Users:
        - ConsoleAccess: 'true'
          Password: !Ref AmazonMqPassword1
          Username: !Ref AmazonMqUsername1
        - Password: !Ref AmazonMqPassword2
          Username: !Ref AmazonMqUsername2
        - Groups:
            - MyGroup1
            - MyGroup2
          Password: !Ref AmazonMqPassword3
          Username: !Ref AmazonMqUsername3