AWS::GameLift::Build S3Location
The location in Amazon S3 where build or script files are stored for access by Amazon GameLift. 
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON
{
  "[Bucket](#cfn-gamelift-build-storage-bucket)" : String,
  "[Key](#cfn-gamelift-build-storage-key)" : String,
  "[ObjectVersion](#cfn-gamelift-build-object-verison)" : String,
  "[RoleArn](#cfn-gamelift-build-storage-rolearn)" : String
}
YAML
[Bucket](#cfn-gamelift-build-storage-bucket): String
  [Key](#cfn-gamelift-build-storage-key): String
  [ObjectVersion](#cfn-gamelift-build-object-verison): String
  [RoleArn](#cfn-gamelift-build-storage-rolearn): String
Properties
Bucket 
An S3 bucket identifier. This is the name of the S3 bucket.
Required: Yes
Type: String
Minimum: 1
Update requires: Replacement
Key 
The name of the zip file that contains the build files or script files. 
Required: Yes
Type: String
Minimum: 1
Update requires: Replacement
ObjectVersion 
The version of the file, if object versioning is turned on for the bucket. Amazon GameLift uses this information when retrieving files from your S3 bucket. To retrieve a specific version of the file, provide an object version. To retrieve the latest version of the file, do not set this parameter. 
Required: No
Type: String
Minimum: 1
Update requires: Replacement
RoleArn 
The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access the S3 bucket.
Required: Yes
Type: String
Minimum: 1
Update requires: Replacement
See also

 Create GameLift Resources Using AWS CloudFormation in the Amazon GameLift Developer Guide
 Create a Build with Files in Amazon S3 in the Amazon GameLift Developer Guide
 Upload Script Files in Amazon S3 in the Amazon GameLift Developer Guide
S3Location in the Amazon GameLift API Reference 
