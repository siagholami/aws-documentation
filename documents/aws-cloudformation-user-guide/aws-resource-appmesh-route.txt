AWS::AppMesh::Route
Creates a route that is associated with a virtual router.
You can route several different protocols and define a retry policy for a route. Traffic can be routed to one or more virtual nodes.
For more information about routes, see Routes.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON
{
  "Type" : "AWS::AppMesh::Route",
  "Properties" : {
      "[MeshName](#cfn-appmesh-route-meshname)" : String,
      "[MeshOwner](#cfn-appmesh-route-meshowner)" : String,
      "[RouteName](#cfn-appmesh-route-routename)" : String,
      "[Spec](#cfn-appmesh-route-spec)" : RouteSpec,
      "[Tags](#cfn-appmesh-route-tags)" : [ [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html), ... ],
      "[VirtualRouterName](#cfn-appmesh-route-virtualroutername)" : String
    }
}
YAML
Type: AWS::AppMesh::Route
Properties: 
  [MeshName](#cfn-appmesh-route-meshname): String
  [MeshOwner](#cfn-appmesh-route-meshowner): String
  [RouteName](#cfn-appmesh-route-routename): String
  [Spec](#cfn-appmesh-route-spec): 
    RouteSpec
  [Tags](#cfn-appmesh-route-tags): 
    - [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)
  [VirtualRouterName](#cfn-appmesh-route-virtualroutername): String
Properties
MeshName 
The name of the service mesh to create the route in.
Required: Yes
Type: String
Update requires: Replacement
MeshOwner 
The AWS IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see Working with shared meshes.
Required: No
Type: String
Update requires: Replacement
RouteName 
The name to use for the route.
Required: Yes
Type: String
Update requires: Replacement
Spec 
The route specification to apply.
Required: Yes
Type: RouteSpec
Update requires: No interruption
Tags 
Optional metadata that you can apply to the route to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
Required: No
Type: List of Tag
Update requires: No interruption
VirtualRouterName 
The name of the virtual router in which to create the route. If the virtual router is in a shared mesh, then you must be the owner of the virtual router resource.
Required: Yes
Type: String
Update requires: Replacement
Return values
Ref
When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the resource ARN. For example:
{ "Ref": "myRoute" } 
When you pass the logical ID of an AWS::AppMesh::Route resource to the intrinsic Ref function, the function returns the route ARN, such as arn:aws:appmesh:us-east-1:555555555555:route/myRoute.
For more information about using the Ref function, see Ref.
Fn::GetAtt
The Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.
For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.

Arn 
The full Amazon Resource Name (ARN) for the route.
MeshName 
The name of the service mesh that the route resides in.
MeshOwner 
The AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it's the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with Shared Meshes.
ResourceOwner 
The AWS IAM account ID of the resource owner. If the account ID is not your own, then it's the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with Shared Meshes.
RouteName 
The name of the route.
Uid 
The unique identifier for the route.
VirtualRouterName 
The name of the virtual router that the route is associated with.
Examples
Create a Route
This example creates a route with two weighted targets.
JSON
{
   "Description": "Basic Test Route",
   "Resources": {
      "BasicRoute": {
         "Type": "AWS::AppMesh::Route",
         "Properties": {
            "RouteName": "TestRoute",
            "MeshName": null,
            "VirtualRouterName": null,
            "Spec": {
               "HttpRoute": {
                  "Match": {
                     "Prefix": "routePrefix"
                  },
                  "Action": {
                     "WeightedTargets": [
                        {
                           "VirtualNode": null,
                           "Weight": 10
                        },
                        {
                           "VirtualNode": null,
                           "Weight": 20
                        }
                     ]
                  }
               }
            },
            "Tags": [
               {
                  "Key": "Key1",
                  "Value": "Value1"
               },
               {
                  "Key": "Key2",
                  "Value": "Value2"
               }
            ]
         }
      }
   },
   "Outputs": {
      "RouteName": {
         "Description": "Name of the Route",
         "Value": {
            "Fn::GetAtt": [
               "BasicRoute",
               "RouteName"
            ]
         }
      },
      "MeshName": {
         "Description": "Name of the Mesh",
         "Value": {
            "Fn::GetAtt": [
               "BasicRoute",
               "MeshName"
            ]
         }
      },
      "VirtualRouterName": {
         "Description": "Name of the VirtualRouter",
         "Value": {
            "Fn::GetAtt": [
               "BasicRoute",
               "VirtualRouterName"
            ]
         }
      },
      "Arn": {
         "Description": "Arn of the Route created",
         "Value": {
            "Fn::GetAtt": [
               "BasicRoute",
               "Arn"
            ]
         }
      },
      "Uid": {
         "Description": "Uid of the Route created",
         "Value": {
            "Fn::GetAtt": [
               "BasicRoute",
               "Uid"
            ]
         }
      }
   }
}
YAML
```
Description: "Basic Test Route"
Resources:
  BasicRoute:
    Type: "AWS::AppMesh::Route"
    Properties:
      RouteName: "TestRoute"
      MeshName: !ImportValue TestMeshName
      VirtualRouterName: !ImportValue TestVirtualRouterName1
      Spec:
        HttpRoute:
          Match:
            Prefix: "routePrefix"
          Action:
            WeightedTargets:
            - VirtualNode: !ImportValue TestVirtualNodeName1
              Weight: 10
            - VirtualNode: !ImportValue TestVirtualNodeName2
              Weight: 20
      Tags:
      - Key: "Key1"
        Value: "Value1"
      - Key: "Key2"
        Value: "Value2"
Outputs:
  RouteName:
    Description: Name of the Route
    Value:
      Fn::GetAtt:
      - BasicRoute
      - RouteName
  MeshName:
    Description: Name of the Mesh
    Value:
      Fn::GetAtt:
      - BasicRoute
      - MeshName
  VirtualRouterName:
    Description: Name of the VirtualRouter
    Value:
      Fn::GetAtt:
      - BasicRoute
      - VirtualRouterName
  Arn:
    Description: Arn of the Route created
    Value:
      Fn::GetAtt:
      - BasicRoute
      - Arn
  Uid:
    Description: Uid of the Route created
    Value:
      Fn::GetAtt:
      - BasicRoute
      - Uid
```
See also

Routes in the * AWS App Mesh User Guide *.
CreateRoute in the * AWS App Mesh API Reference *.
