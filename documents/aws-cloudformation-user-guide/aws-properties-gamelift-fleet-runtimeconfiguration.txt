AWS::GameLift::Fleet RuntimeConfiguration
A collection of server process configurations that describe the processes to run on each instance in a fleet. All fleets must have a runtime configuration. Each instance in the fleet maintains server processes as specified in the runtime configuration, launching new ones as existing processes end. Each instance regularly checks for an updated runtime configuration makes adjustments as called for. 
The runtime configuration enables the instances in a fleet to run multiple processes simultaneously. Potential scenarios are as follows: (1) Run multiple processes of a single game server executable to maximize usage of your hosting resources. (2) Run one or more processes of different executables, such as your game server and a metrics tracking program. (3) Run multiple processes of a single game server but with different launch parameters, for example to run one process on each instance in debug mode.
An Amazon GameLift instance is limited to 50 processes running simultaneously. A runtime configuration must specify fewer than this limit. To calculate the total number of processes specified in a runtime configuration, add the values of the ConcurrentExecutions parameter for each ServerProcess object in the runtime configuration.
Syntax
To declare this entity in your AWS CloudFormation template, use the following syntax:
JSON
{
  "[GameSessionActivationTimeoutSeconds](#cfn-gamelift-fleet-runtimeconfiguration-gamesessionactivationtimeoutseconds)" : Integer,
  "[MaxConcurrentGameSessionActivations](#cfn-gamelift-fleet-runtimeconfiguration-maxconcurrentgamesessionactivations)" : Integer,
  "[ServerProcesses](#cfn-gamelift-fleet-runtimeconfiguration-serverprocesses)" : [ ServerProcess, ... ]
}
YAML
[GameSessionActivationTimeoutSeconds](#cfn-gamelift-fleet-runtimeconfiguration-gamesessionactivationtimeoutseconds): Integer
  [MaxConcurrentGameSessionActivations](#cfn-gamelift-fleet-runtimeconfiguration-maxconcurrentgamesessionactivations): Integer
  [ServerProcesses](#cfn-gamelift-fleet-runtimeconfiguration-serverprocesses): 
    - ServerProcess
Properties
GameSessionActivationTimeoutSeconds 
The maximum amount of time (in seconds) that a game session can remain in status ACTIVATING. If the game session is not active before the timeout, activation is terminated and the game session status is changed to TERMINATED.
Required: No
Type: Integer
Minimum: 1
Maximum: 600
Update requires: No interruption
MaxConcurrentGameSessionActivations 
The maximum number of game sessions with status ACTIVATING to allow on an instance simultaneously. This setting limits the amount of instance resources that can be used for new game activations at any one time.
Required: No
Type: Integer
Minimum: 1
Maximum: 2147483647
Update requires: No interruption
ServerProcesses 
A collection of server process configurations that describe which server processes to run on each instance in a fleet.
Required: No
Type: List of ServerProcess
Maximum: 50
Update requires: No interruption
See also

 Create GameLift Resources Using AWS CloudFormation in the Amazon GameLift Developer Guide
Deploy a GameLift Fleet for a Custom Game Build in the Amazon GameLift Developer Guide 
Deploy a Realtime Servers Fleet in the Amazon GameLift Developer Guide 
Run Multiple Processes on a Fleet in the Amazon GameLift Developer Guide 
RuntimeConfiguration in the Amazon GameLift API Reference 
