

How Amazon Kendra works with IAM
Before you use IAM to manage access to Amazon Kendra, you should understand what IAM features are available to use with Amazon Kendra. To get a high-level view of how Amazon Kendra and other AWS services work with IAM, see AWS Services That Work with IAM in the IAM User Guide.
Topics
 Amazon Kendra identity-based policies
 Amazon Kendra Resource-based policies
 Access control lists (ACLs)
 Authorization based on Amazon Kendra tags
 Amazon Kendra IAM Roles
Amazon Kendra identity-based policies
With IAM identity-based policies, you can specify allowed or denied actions and resources as well as the conditions under which actions are allowed or denied. Amazon Kendra supports specific actions, resources, and condition keys. To learn about all of the elements that you use in a JSON policy, see IAM JSON Policy Elements Reference in the IAM User Guide.
Actions
The Action element of an IAM identity-based policy describes the specific action or actions that will be allowed or denied by the policy. Policy actions usually have the same name as the associated AWS API operation. The action is used in a policy to grant permissions to perform the associated operation. 
Policy actions in Amazon Kendra use the following prefix before the action: kendra:. For example, to grant someone permission to list Amazon Kendra indexes with the ListIndices API operation, you include the kendra:ListIndices action in their policy. Policy statements must include either an Action or NotAction element. Amazon Kendra defines its own set of actions that describe tasks that you can perform with this service.
To specify multiple actions in a single statement, separate them with commas as follows:
"Action": [
      "kendra:action1",
      "kendra:action2"
You can specify multiple actions using wildcards (*). For example, to specify all actions that begin with the word Describe, include the following action:
"Action": "kendra:Describe*"
To see a list of Amazon Kendra actions, see Actions Defined by Amazon Kendra in the IAM User Guide.
Resources
The Resource element specifies the object or objects to which the action applies. Statements must include either a Resource or a NotResource element. You specify a resource using an ARN or using the wildcard (*) to indicate that the statement applies to all resources.
The Amazon Kendra index resource has the following ARN:
arn:${Partition}:kendra:${Region}:${Account}:index/${IndexId}
For more information about the format of ARNs, see Amazon Resource Names (ARNs) and AWS Service Namespaces.
For example, to specify an index in your statement, use the GUID of the index in the following ARN:
"Resource": "arn:aws:kendra:${Region}:${Account}:index/${GUID}"
To specify all indexes that belong to a specific account, use the wildcard (*):
"Resource": "arn:aws:${Region}:${Account}:index/*"
Some Amazon Kendra actions, such as those for creating resources, cannot be performed on a specific resource. In those cases, you must use the wildcard (*).
"Resource": "*"
To see a list of Amazon Kendra resource types and their ARNs, see Resources Defined by Amazon Kendra in the IAM User Guide. To learn with which actions you can specify the ARN of each resource, see Actions Defined by Amazon Kendra.
Condition keys
The Condition element (or Condition block) lets you specify conditions in which a statement is in effect. The Condition element is optional. You can create conditional expressions that use condition operators, such as equals or less than, to match the condition in the policy with values in the request. 
If you specify multiple Condition elements in a statement, or multiple keys in a single Condition element, AWS evaluates them using a logical AND operation. If you specify multiple values for a single condition key, AWS evaluates the condition using a logical OR operation. All of the conditions must be met before the statement's permissions are granted.
You can also use placeholder variables when you specify conditions. For example, you can grant an IAM user permission to access a resource only if it is tagged with their IAM user name. For more information, see IAM Policy Elements: Variables and Tags in the IAM User Guide. 
Amazon Kendra does not provide any service-specific condition keys, but it does support using some global condition keys. To see all AWS global condition keys, see AWS Global Condition Context Keys in the IAM User Guide.
Examples
To view examples of Amazon Kendra identity-based policies, see Amazon Kendra Identity-based policy examples.
Amazon Kendra Resource-based policies
Amazon Kendra does not support resource-based policies.
Access control lists (ACLs)
Amazon Kendra does not support access control lists (ACLs) for access to AWS services and resources.
Authorization based on Amazon Kendra tags
You can associate tags with certain types of Amazon Kendra resources to authorize access to those resources. To control access based on tags, provide tag information in the condition element of a policy by using the aws:RequestTag/key-name, or aws:TagKeys condition keys.
The following table lists the actions, corresponding resource types, and condition keys for tag-based access control. Each action is authorized based on the tags associated with the corresponding resource type.



Action
Resource type
Condition keys




CreateDataSource
 
aws:RequestTag, aws:TagKeys


CreateFaq
 
aws:RequestTag, aws:TagKeys


CreateIndex
 
aws:RequestTag, aws:TagKeys


ListTagsForResource
data source, FAQ, index
 


TagResource
data source, FAQ, index
aws:RequestTag, aws:TagKeys


UntagResource
data source, FAQ, index
aws:TagKeys



For information about tagging Amazon Kendra resources, see Tags. For an example identity-based policy that limits access to a resource based on resource tags, see Tag-based policy examples. For more information about using tags to limit access to resources, see Controlling access using tags in the IAM User Guide. 
Amazon Kendra IAM Roles
An IAM role is an entity within your AWS account that has specific permissions.
Using temporary credentials with Amazon Kendra
You can use temporary credentials to sign in with federation, assume an IAM role, or to assume a cross-account role. You obtain temporary security credentials by calling AWS STS API operations such as AssumeRole or GetFederationToken. 
Amazon Kendra supports using temporary credentials. 
Service roles
This feature allows a service to assume a service role on your behalf. This role allows the service to access resources in other services to complete an action on your behalf. Service roles appear in your IAM account and are owned by the account. This means that an IAM administrator can change the permissions for this role. However, doing so might break the functionality of the service.
Amazon Kendra supports service roles. 
Choosing an IAM role in Amazon Kendra
When you create an index, call the BatchPutDocument operation, create a data source or create an FAQ, you must provide an access role Amazon Resource Name (ARN) that Amazon Kendra uses to access the required resources on your behalf. If you have previously created a role, then the Amazon Kendra console provides you with a list of roles to choose from. It's important to choose a role that allows access to the resources that you require. For more information, see IAM access roles for Amazon Kendra.