Example: Hyperparameter Tuning Job
This example shows how to create a new notebook for configuring and launching a hyperparameter tuning job. The tuning job uses the XGBoost Algorithm to train a model to predict whether a customer will enroll for a term deposit at a bank after being contacted by phone.
You use the low-level AWS SDK for Python (Boto) to configure and launch the hyperparameter tuning job, and the AWS Management Console to monitor the status of hyperparameter tuning jobs. You can also use the Amazon SageMaker high-level Amazon SageMaker Python SDK to configure, run, monitor, and analyze hyperparameter tuning jobs. For more information, see https://github.com/aws/sagemaker-python-sdk.
Prerequisites
To run the code in this example, you need
 An AWS account and an administrator user
 An Amazon S3 bucket for storing your training dataset and the model artifacts created during training
 A running SageMaker notebook instance
Topics
 Prerequisites
 Create a Notebook
 Get the Amazon SageMaker Boto 3 Client
 Get the SageMaker Execution Role
 Specify a Bucket and Data Output Location
 Download, Prepare, and Upload Training Data
 Configure and Launch a Hyperparameter Tuning Job
 Monitor the Progress of a Hyperparameter Tuning Job
 Clean up