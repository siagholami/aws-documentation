Creating CloudWatch Alarms for CloudTrail Events: Examples
This topic describes how to configure alarms for CloudTrail events using example scenarios.
Prerequisites
Before you can use the examples in this topic, you must:
 Create a trail with the console or CLI.
 Create a log group.
 Specify or create an IAM role that grants CloudTrail the permissions to create a CloudWatch Logs log stream in the log group that you specify and to deliver CloudTrail events to that log stream. The default CloudTrail_CloudWatchLogs_Role does this for you.
For more information, see Sending Events to CloudWatch Logs.
Create a metric filter and create an alarm
To create an alarm, you must first create a metric filter and then configure an alarm based on the filter. The procedures are shown for all examples. For more information about syntax for metric filters and patterns for CloudTrail log events, see the JSON-related sections of Filter and Pattern Syntax in the Amazon CloudWatch Logs User Guide.
Note
Instead of manually creating the following metric filters and alarms examples, you can use an AWS CloudFormation template to create them all at once. For more information, see Creating CloudWatch Alarms with an AWS CloudFormation Template. 
Topics
 Example: Amazon S3 Bucket Activity
 Example: Security Group Configuration Changes
 Example: Network Access Control List (ACL) Changes
 Example: Network Gateway Changes
 Example: Amazon Virtual Private Cloud (VPC) Changes
 Example: Amazon EC2 Instance Changes
 Example: EC2 Large Instance Changes
 Example: CloudTrail Changes
 Example: Console Sign-In Failures
 Example: Authorization Failures
 Example: IAM Policy Changes
Example: Amazon S3 Bucket Activity
Follow this procedure to create an Amazon CloudWatch alarm that is triggered when an Amazon S3 API call is made to PUT or DELETE bucket policy, bucket lifecycle, bucket replication, or to PUT a bucket ACL. 
The alarm also is triggered for the CORS (cross-origin resource sharing) PUT bucket and DELETE bucket events. For more information, see Cross-Origin Resource Sharing in the Amazon Simple Storage Service Developer Guide.
Create a Metric Filter


Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.


In the navigation pane, choose Logs.


In the list of log groups, select the check box next to the log group that you created for CloudTrail log events.


Choose Create Metric Filter.


On the Define Logs Metric Filter screen, choose Filter Pattern and then type the following:


{ ($.eventSource = s3.amazonaws.com) && (($.eventName = PutBucketAcl) || ($.eventName = PutBucketPolicy) || ($.eventName = PutBucketCors) || ($.eventName = PutBucketLifecycle) || ($.eventName = PutBucketReplication) || ($.eventName = DeleteBucketPolicy) || ($.eventName = DeleteBucketCors) || ($.eventName = DeleteBucketLifecycle) || ($.eventName = DeleteBucketReplication)) }


Choose Assign Metric.


For Filter Name, type S3BucketActivity.


For Metric Namespace, type CloudTrailMetrics.


For Metric Name, type S3BucketActivityEventCount.


Choose Show advanced metric settings.


For Metric Value, type 1.


Choose Create Filter.


Create an Alarm
After you create the metric filter, follow this procedure to create an alarm.


On the Filters for Log_Group_Name page, next to the S3BucketActivity filter name, choose Create Alarm.


On the Create Alarm page, provide the following values.
 



[See the AWS documentation website for more details]

Choose Create Alarm.

Testing the Alarm for S3 Bucket Activity
You can test the alarm by changing the S3 bucket policy.
To test the alarm


Open the Amazon S3 console at https://console.aws.amazon.com/s3/.


Choose an S3 bucket in a region that your trail is logging. For example, if your trail is logging in the US East (Ohio) Region only, choose a bucket in the same region. If your trail applies to all regions, choose an S3 bucket in any region.


Choose Permissions and then choose Bucket Policy.


Use the Bucket policy editor to change the policy and then choose Save.


Your trail logs the PutBucketPolicy operation, and delivers the event to your CloudWatch Logs logs group. The event triggers your metric alarm and CloudWatch Logs sends you a notification about the change.


Example: Security Group Configuration Changes
Follow this procedure to create an Amazon CloudWatch alarm that is triggered when configuration changes happen that involve security groups.
Create a Metric Filter


Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.


In the navigation pane, choose Logs.


In the list of log groups, select the check box next to the log group that you created for CloudTrail log events.


Choose Create Metric Filter.


On the Define Logs Metric Filter screen, choose Filter Pattern and then type the following:


{ ($.eventName = AuthorizeSecurityGroupIngress) || ($.eventName = AuthorizeSecurityGroupEgress) || ($.eventName = RevokeSecurityGroupIngress) || ($.eventName = RevokeSecurityGroupEgress) || ($.eventName = CreateSecurityGroup) || ($.eventName = DeleteSecurityGroup) }


Choose Assign Metric.


For Filter Name, type SecurityGroupEvents.


For Metric Namespace, type CloudTrailMetrics.


For Metric Name, type SecurityGroupEventCount.


Choose Show advanced metric settings.


For Metric Value, type 1.


Choose Create Filter.


Create an Alarm
After you create the metric filter, follow this procedure to create an alarm.


On the Filters for Log_Group_Name page, next to the filter name, choose Create Alarm.


On the Create Alarm page, provide the following values.
 



[See the AWS documentation website for more details]

Choose Create Alarm.

Example: Network Access Control List (ACL) Changes
Follow this procedure to create an Amazon CloudWatch alarm that is triggered when any configuration changes happen involving network ACLs.
Create a Metric Filter


Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.


In the navigation pane, choose Logs.


In the list of log groups, select the check box next to the log group that you created for CloudTrail log events.


Choose Create Metric Filter.


On the Define Logs Metric Filter screen, choose Filter Pattern and then type the following:


{ ($.eventName = CreateNetworkAcl) || ($.eventName = CreateNetworkAclEntry) || ($.eventName = DeleteNetworkAcl) || ($.eventName = DeleteNetworkAclEntry) || ($.eventName = ReplaceNetworkAclEntry) || ($.eventName = ReplaceNetworkAclAssociation) }


Choose Assign Metric.


For Filter Name, type NetworkACLEvents.


For Metric Namespace, type CloudTrailMetrics.


For Metric Name, type NetworkACLEventCount.


Choose Show advanced metric settings.


For Metric Value, type 1.


Choose Create Filter.


Create an Alarm
After you create the metric filter, follow this procedure to create an alarm.


On the Filters for Log_Group_Name page, next to the filter name, choose Create Alarm.


On the Create Alarm page, provide the following values.
 



[See the AWS documentation website for more details]

Choose Create Alarm.

Example: Network Gateway Changes
Follow this procedure to create an Amazon CloudWatch alarm that is triggered when an API call is made to create, update, or delete a customer or Internet gateway. 
Create a Metric Filter


Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.


In the navigation pane, choose Logs.


In the list of log groups, select the check box next to the log group that you created for CloudTrail log events.


Choose Create Metric Filter.


On the Define Logs Metric Filter screen, choose Filter Pattern and then type the following:


{ ($.eventName = CreateCustomerGateway) || ($.eventName = DeleteCustomerGateway) || ($.eventName = AttachInternetGateway) || ($.eventName = CreateInternetGateway) || ($.eventName = DeleteInternetGateway) || ($.eventName = DetachInternetGateway) }


Choose Assign Metric.


For Filter Name, type GatewayChanges.


For Metric Namespace, type CloudTrailMetrics.


For Metric Name, type GatewayEventCount.


Choose Show advanced metric settings.


For Metric Value, type 1.


Choose Create Filter.


Example: Create an Alarm
After you create the metric filter, follow this procedure to create an alarm.


On the Filters for Log_Group_Name page, next to the filter name, choose Create Alarm.


On the Create Alarm page, provide the following values.
 



[See the AWS documentation website for more details]

Choose Create Alarm.

Example: Amazon Virtual Private Cloud (VPC) Changes
Follow this procedure to create an Amazon CloudWatch alarm that is triggered when an API call is made to create, update, or delete an Amazon VPC, an Amazon VPC peering connection, or an Amazon VPC connection to classic Amazon EC2 instances.
Create a Metric Filter


Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.


In the navigation pane, choose Logs.


In the list of log groups, select the check box next to the log group that you created for CloudTrail log events.


Choose Create Metric Filter.


On the Define Logs Metric Filter screen, choose Filter Pattern and then type the following:


{ ($.eventName = CreateVpc) || ($.eventName = DeleteVpc) || ($.eventName = ModifyVpcAttribute) || ($.eventName = AcceptVpcPeeringConnection) || ($.eventName = CreateVpcPeeringConnection) || ($.eventName = DeleteVpcPeeringConnection) || ($.eventName = RejectVpcPeeringConnection) || ($.eventName = AttachClassicLinkVpc) || ($.eventName = DetachClassicLinkVpc) || ($.eventName = DisableVpcClassicLink) || ($.eventName = EnableVpcClassicLink) }


Choose Assign Metric.


For Filter Name, type VpcChanges.


For Metric Namespace, type CloudTrailMetrics.


For Metric Name, type VpcEventCount.


Choose Show advanced metric settings.


For Metric Value, type 1.


Choose Create Filter.


Create an Alarm
After you create the metric filter, follow this procedure to create an alarm.


On the Filters for Log_Group_Name page, next to the filter name, choose Create Alarm.


On the Create Alarm page, provide the following values.
 



[See the AWS documentation website for more details]

Choose Create Alarm.

Example: Amazon EC2 Instance Changes
Follow this procedure to create an Amazon CloudWatch alarm that is triggered when an API call is made to create, terminate, start, stop, or reboot an Amazon EC2 instance.
Create a Metric Filter


Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.


In the navigation pane, choose Logs.


In the list of log groups, select the check box next to the log group that you created for CloudTrail log events.


Choose Create Metric Filter.


On the Define Logs Metric Filter screen, choose Filter Pattern and then type the following:


{ ($.eventName = RunInstances) || ($.eventName = RebootInstances) || ($.eventName = StartInstances) || ($.eventName = StopInstances) || ($.eventName = TerminateInstances) }


Choose Assign Metric.


For Filter Name, type EC2InstanceChanges.


For Metric Namespace, type CloudTrailMetrics.


For Metric Name, type EC2InstanceEventCount.


Choose Show advanced metric settings.


For Metric Value, type 1.


Choose Create Filter.


Create an Alarm
After you create the metric filter, follow this procedure to create an alarm.


On the Filters for Log_Group_Name page, next to the filter name, choose Create Alarm.


On the Create Alarm page, provide the following values.
 



[See the AWS documentation website for more details]

Choose Create Alarm.

Example: EC2 Large Instance Changes
Follow this procedure to create an Amazon CloudWatch alarm that is triggered when an API call is made to create a 4x or 8x-large Amazon EC2 instance.
Create a Metric Filter


Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.


In the navigation pane, choose Logs.


In the list of log groups, select the check box next to the log group that you created for CloudTrail log events.


Choose Create Metric Filter.


On the Define Logs Metric Filter screen, choose Filter Pattern and then type the following:


{ ($.eventName = RunInstances) && (($.requestParameters.instanceType = *.8xlarge) || ($.requestParameters.instanceType = *.4xlarge)) }


Choose Assign Metric.


For Filter Name, type EC2LargeInstanceChanges.


For Metric Namespace, type CloudTrailMetrics.


For Metric Name, type EC2LargeInstanceEventCount.


Choose Show advanced metric settings.


For Metric Value, type 1.


Choose Create Filter.


Create an Alarm
After you create the metric filter, follow this procedure to create an alarm.


On the Filters for Log_Group_Name page, next to the filter name, choose Create Alarm.


On the Create Alarm page, provide the following values.
 



[See the AWS documentation website for more details]

Choose Create Alarm.

Example: CloudTrail Changes
Follow this procedure to create an Amazon CloudWatch alarm that is triggered when an API call is made to create, update, or delete a CloudTrail trail, or to start or stop logging a trail.
Create a Metric Filter


Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.


In the navigation pane, choose Logs.


In the list of log groups, select the check box next to the log group that you created for CloudTrail log events.


Choose Create Metric Filter.


On the Define Logs Metric Filter screen, choose Filter Pattern and then type the following:


{ ($.eventName = CreateTrail) || ($.eventName = UpdateTrail) || ($.eventName = DeleteTrail) || ($.eventName = StartLogging) || ($.eventName = StopLogging) }


Choose Assign Metric.


For Filter Name, type CloudTrailChanges.


For Metric Namespace, type CloudTrailMetrics.


For Metric Name, type CloudTrailEventCount.


Choose Show advanced metric settings.


For Metric Value, type 1.


Choose Create Filter.


Create an Alarm
After you create the metric filter, follow this procedure to create an alarm.


On the Filters for Log_Group_Name page, next to the filter name, choose Create Alarm.


On the Create Alarm page, provide the following values.
 



[See the AWS documentation website for more details]

Choose Create Alarm.

Example: Console Sign-In Failures
Follow this procedure to create an Amazon CloudWatch alarm that is triggered when there are three or more sign-in failures during a five minute period.
Create a Metric Filter


Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.


In the navigation pane, choose Logs.


In the list of log groups, select the check box next to the log group that you created for CloudTrail log events.


Choose Create Metric Filter.


On the Define Logs Metric Filter screen, choose Filter Pattern and then type the following:


{ ($.eventName = ConsoleLogin) && ($.errorMessage = "Failed authentication") }


Choose Assign Metric.


For Filter Name, type ConsoleSignInFailures.


For Metric Namespace, type CloudTrailMetrics.


For Metric Name, type ConsoleSigninFailureCount.


Choose Show advanced metric settings.


For Metric Value, type 1.


Choose Create Filter.


Create an Alarm
After you create the metric filter, follow this procedure to create an alarm.


On the Filters for Log_Group_Name page, next to the filter name, choose Create Alarm.


On the Create Alarm page, provide the following values.
 



[See the AWS documentation website for more details]

Choose Create Alarm.

Example: Authorization Failures
Follow this procedure to create an Amazon CloudWatch alarm that is triggered when an unauthorized API call is made.
Create a Metric Filter


Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.


In the navigation pane, choose Logs.


In the list of log groups, select the check box next to the log group that you created for CloudTrail log events.


Choose Create Metric Filter.


On the Define Logs Metric Filter screen, choose Filter Pattern and then type the following:


{ ($.errorCode = "*UnauthorizedOperation") || ($.errorCode = "AccessDenied*") }


Choose Assign Metric.


For Filter Name, type AuthorizationFailures.


For Metric Namespace, type CloudTrailMetrics.


For Metric Name, type AuthorizationFailureCount.


Choose Show advanced metric settings.


For Metric Value, type 1.


Choose Create Filter.


Create an Alarm
After you create the metric filter, follow this procedure to create an alarm.


On the Filters for Log_Group_Name page, next to the filter name, choose Create Alarm.


On the Create Alarm page, provide the following values.
 



[See the AWS documentation website for more details]

Choose Create Alarm.

Example: IAM Policy Changes
Follow this procedure to create an Amazon CloudWatch alarm that is triggered when an API call is made to change an IAM policy.
Create a Metric Filter


Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.


In the navigation pane, choose Logs.


In the list of log groups, select the check box next to the log group that you created for CloudTrail log events.


Choose Create Metric Filter.


On the Define Logs Metric Filter screen, choose Filter Pattern and then type the following:


{($.eventName=DeleteGroupPolicy)||($.eventName=DeleteRolePolicy)||($.eventName=DeleteUserPolicy)||($.eventName=PutGroupPolicy)||($.eventName=PutRolePolicy)||($.eventName=PutUserPolicy)||($.eventName=CreatePolicy)||($.eventName=DeletePolicy)||($.eventName=CreatePolicyVersion)||($.eventName=DeletePolicyVersion)||($.eventName=AttachRolePolicy)||($.eventName=DetachRolePolicy)||($.eventName=AttachUserPolicy)||($.eventName=DetachUserPolicy)||($.eventName=AttachGroupPolicy)||($.eventName=DetachGroupPolicy)}


Choose Assign Metric.


For Filter Name, type IAMPolicyChanges.


For Metric Namespace, type CloudTrailMetrics.


For Metric Name, type IAMPolicyEventCount.


Choose Show advanced metric settings.


For Metric Value, type 1.


Choose Create Filter.


Create an Alarm
After you create the metric filter, follow this procedure to create an alarm.


On the Filters for Log_Group_Name page, next to the filter name, choose Create Alarm.


On the Create Alarm page, provide the following values.
 



[See the AWS documentation website for more details]

Choose Create Alarm.
