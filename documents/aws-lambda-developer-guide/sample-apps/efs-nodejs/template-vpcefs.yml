AWSTemplateFormatVersion: 2010-09-09
Resources:
  fileSystem:
    Type: AWS::EFS::FileSystem
  mountTargetA:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref fileSystem
      SubnetId: !Ref privateSubnetA
      SecurityGroups:
        - !GetAtt privateVPC.DefaultSecurityGroup
  mountTargetB:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref fileSystem
      SubnetId: !Ref privateSubnetB
      SecurityGroups:
        - !GetAtt privateVPC.DefaultSecurityGroup
  accessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId: !Ref fileSystem
      PosixUser:
        Uid: "1001"
        Gid: "1001"
      RootDirectory:
        CreationInfo:
          OwnerGid: "1001"
          OwnerUid: "1001"
          Permissions: "755"
        Path: "/efs-nodejs-storage"
  privateVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.31.0.0/16
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
  privateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref privateVPC
      AvailabilityZone:
        Fn::Select:
         - 0
         - Fn::GetAZs: ""
      CidrBlock: 172.31.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName","subnet-a"]]
  privateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref privateVPC
      AvailabilityZone:
        Fn::Select:
         - 1
         - Fn::GetAZs: ""
      CidrBlock: 172.31.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName","subnet-b"]]
  privateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref privateVPC
  privateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privateSubnetA
      RouteTableId: !Ref privateRouteTable
  privateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privateSubnetB
      RouteTableId: !Ref privateRouteTable
Outputs:
  privateVPCSecurityGroup:
    Description: Default security for Lambda VPC
    Value: !GetAtt privateVPC.DefaultSecurityGroup
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName","vpc-sg"]]
  privateVPCID:
    Description: VPC ID
    Value: !Ref privateVPC
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName","vpc"]]
  privateSubnetAID:
    Description: Private Subnet A ID
    Value: !Ref privateSubnetA
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName","subnet-a"]]
  privateSubnetBID:
    Description: Private Subnet B ID
    Value: !Ref privateSubnetB
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName","subnet-b"]]
  fileSystemId:
    Description: File system ID
    Value: !Ref fileSystem
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName","filesystem"]]
  mountTargetA:
    Description: Mount point A ID
    Value: !Ref mountTargetA
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName","mounttarget-a"]]
  mountTargetB:
    Description: Mount point B ID
    Value: !Ref mountTargetB
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName","mounttarget-b"]]
  accessPointArn:
    Description: Access point ARN
    Value: !GetAtt accessPoint.Arn
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName","accesspoint"]]
