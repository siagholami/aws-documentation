AWS Data Pipeline Developer Guide

*Copyright Â© 2019 Amazon Web Services, Inc. and/or its affiliates. All rights reserved.***

Amazon's trademarks and trade dress may not be used in 
     connection with any product or service that is not Amazon's, 
     in any manner that is likely to cause confusion among customers, 
     or in any manner that disparages or discredits Amazon. All other 
     trademarks not owned by Amazon are the property of their respective
     owners, who may or may not be affiliated with, connected to, or 
     sponsored by Amazon.

Contents

What is AWS Data Pipeline?
Related Services
Supported Instance Types for Pipeline Work Activities
Default Amazon EC2 Instances by AWS Region
Additional Supported Amazon EC2 Instances
Supported Amazon EC2 Instances for Amazon EMR Clusters


AWS Data Pipeline Concepts
Pipeline Definition
Pipeline Components, Instances, and Attempts
Task Runners
Data Nodes
Databases
Activities
Preconditions
Resources
Actions
Setting up for AWS Data Pipeline
Getting Started with AWS Data Pipeline
Working with Pipelines
Scheduling Pipelines
Creating a Pipeline
Creating Pipelines Using Console Templates
Getting Started Using ShellCommandActivity
Run AWS CLI Command
Export DynamoDB Table to S3
Import DynamoDB Backup Data from S3
Run Job on an Amazon EMR Cluster
Full Copy of Amazon RDS MySQL Table to Amazon S3
Incremental Copy of Amazon RDS MySQL Table to Amazon S3
Load S3 Data into Amazon RDS MySQL Table
Amazon RDS to Amazon Redshift Templates
Full Copy of Amazon RDS MySQL Table to Amazon Redshift
Incremental Copy of an Amazon RDS MySQL Table to Amazon Redshift
Load Data from Amazon S3 into Amazon Redshift
Creating a Pipeline Using Parametrized Templates


Creating Pipelines Using the Console Manually


Viewing Your Pipelines
Interpreting Pipeline Status Codes
Interpreting Pipeline and Component Health State
Viewing Your Pipeline Definitions
Viewing Pipeline Instance Details
Viewing Pipeline Logs


Editing Your Pipeline
Cloning Your Pipeline
Tagging Your Pipeline
Deactivating Your Pipeline
Deleting Your Pipeline
Staging Data and Tables with Pipeline Activities
Launching Resources for Your Pipeline into a VPC
Using Amazon EC2 Spot Instances in a Pipeline
Using a Pipeline with Resources in Multiple Regions
Cascading Failures and Reruns
Pipeline Definition File Syntax
Working with the API
Making an HTTP Request to AWS Data Pipeline


Controlling Access to Pipelines and Resources
IAM Policies for AWS Data Pipeline
Example Policies for AWS Data Pipeline
IAM Roles for AWS Data Pipeline
Tutorials
Process Data Using Amazon EMR with Hadoop Streaming
Before You Begin
Launch a Cluster Using the AWS Data Pipeline Console
Launch a Cluster Using the Command Line


Import and Export DynamoDB Data Using AWS Data Pipeline
Part One: Import Data into DynamoDB
Before You Begin
Step 1: Create the Pipeline
Step 2: Save and Validate Your Pipeline
Step 3: Activate Your Pipeline
Step 4: Monitor the Pipeline Runs
Step 5: Verify the Data Import
Step 6: Delete Your Pipeline (Optional)


Part Two: Export Data from DynamoDB
Before You Begin
Step 1: Create the Pipeline
Step 2: Save and Validate Your Pipeline
Step 3: Activate Your Pipeline
Step 4: Monitor the Pipeline Runs
Step 5: Verify the Data Export File
Step 6: Delete Your Pipeline (Optional)




Copy CSV Data Between Amazon S3 Buckets Using AWS Data Pipeline
Before You Begin
Copy CSV Data Using the AWS Data Pipeline Console
Copy CSV Data Using the Command Line


Export MySQL Data to Amazon S3 Using AWS Data Pipeline
Before You Begin
Copy MySQL Data Using the AWS Data Pipeline Console
Copy MySQL Data Using the Command Line


Copy Data to Amazon Redshift Using AWS Data Pipeline
Before You Begin: Configure COPY Options and Load Data
Set up Pipeline, Create a Security Group, and Create an Amazon Redshift Cluster
Copy Data to Amazon Redshift Using the AWS Data Pipeline Console
Copy Data to Amazon Redshift Using the Command Line
Define a Pipeline in JSON Format
Data Nodes
Resource
Activity


Upload and Activate the Pipeline Definition




Pipeline Expressions and Functions
Expressions
Mathematical Functions
String Functions
Date and Time Functions
Special Characters
Pipeline Object Reference
Data Nodes
DynamoDBDataNode
MySqlDataNode
RedshiftDataNode
S3DataNode
SqlDataNode


Activities
CopyActivity
EmrActivity
HadoopActivity
HiveActivity
HiveCopyActivity
PigActivity
RedshiftCopyActivity
ShellCommandActivity
SqlActivity


Resources
Ec2Resource
EmrCluster
Examples
Launch an Amazon EMR cluster with hadoopVersion
Launch an Amazon EMR cluster with release label emr-4.x or greater
Install additional software on your Amazon EMR cluster
Disable server-side encryption on 3.x releases
Disable server-side encryption on 4.x releases
Configure Hadoop KMS ACLs and create encryption zones in HDFS
Specify custom IAM roles
Use EmrCluster Resource in AWS SDK for Java
Configure an Amazon EMR cluster in a private subnet
Attach EBS volumes to cluster nodes




HttpProxy


Preconditions
DynamoDBDataExists
DynamoDBTableExists
Exists
S3KeyExists
S3PrefixNotEmpty
ShellCommandPrecondition


Databases
JdbcDatabase
RdsDatabase
RedshiftDatabase


Data Formats
CSV Data Format
Custom Data Format
DynamoDBDataFormat
DynamoDBExportDataFormat
RegEx Data Format
TSV Data Format


Actions
SnsAlarm
Terminate


Schedule
Utilities
ShellScriptConfig
EmrConfiguration
Property


Working with Task Runner
Task Runner on AWS Data Pipeline-Managed Resources
Executing Work on Existing Resources Using Task Runner
(Optional) Granting Task Runner Access to Amazon RDS


Task Runner Threads and Preconditions
Task Runner Configuration Options
Using Task Runner with a Proxy
Task Runner and Custom AMIs
Troubleshooting
Locating Errors in Pipelines
Identifying the Amazon EMR Cluster that Serves Your Pipeline
Interpreting Pipeline Status Details
Locating Error Logs
Resolving Common Problems
Logging AWS Data Pipeline API Calls By Using AWS CloudTrail
AWS Data Pipeline Limits
AWS Data Pipeline Resources
Document History
