PG_TERMINATE_BACKEND
Terminates a session. You can terminate a session owned by your user. A superuser can terminate any session.
Syntax
pg_terminate_backend( pid )
Arguments
pid
The process ID of the session to be terminated. Requires an integer value.
Return type
None
Usage notes
If you are close to reaching the limit for concurrent connections, use PG_TERMINATE_BACKEND to terminate idle sessions and free up the connections. For more information, see Limits in Amazon Redshift. 
If queries in multiple sessions hold locks on the same table, you can use PG_TERMINATE_BACKEND to terminate one of the sessions, which forces any currently running transactions in the terminated session to release all locks and roll back the transaction. Query the PG__LOCKS catalog table to view currently held locks. 
If a query is not in a transaction block (BEGIN â€¦ END), you can cancel the query by using the CANCEL command or the PG_CANCEL_BACKEND function. 
Examples
The following statement queries the SVV_TRANSACTIONS table to view all locks in effect for current transactions:
select * from svv_transactions;
txn_owner | txn_db    | xid   | pid  | txn_start           | lock_mode       | lockable_object_type | relation | granted
----------------------------------------------------------------------------------------------------------------
  rsuser  | dev       | 96178 | 8585 | 2017-04-12 20:13:07 | AccessShareLock | relation             |    51940 | true   
  rsuser  | dev       | 96178 | 8585 | 2017-04-12 20:13:07 | AccessShareLock | relation             |    52000 | true   
  rsuser  | dev       | 96178 | 8585 | 2017-04-12 20:13:07 | AccessShareLock | relation             |   108623 | true   
  rsuser  | dev       | 96178 | 8585 | 2017-04-12 20:13:07 | ExclusiveLock   | transactionid        |          | true
The following statement terminates the session holding the locks:
select pg_terminate_backend(8585);