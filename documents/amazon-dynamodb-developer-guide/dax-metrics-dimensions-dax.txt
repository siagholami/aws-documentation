Viewing DAX Metrics and Dimensions
When you interact with Amazon DynamoDB, it sends metrics and dimensions to Amazon CloudWatch. You can use the following procedures to view the metrics for DynamoDB Accelerator (DAX).
To view metrics (console)
Metrics are grouped first by the service namespace, and then by the various dimension combinations within each namespace.


Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.


In the navigation pane, choose Metrics.


Select the DAX namespace.


To view metrics (AWS CLI)
 At a command prompt, use the following command.
1. aws cloudwatch list-metrics --namespace "AWS/DAX"
DAX Metrics and Dimensions
The following sections contain the metrics and dimensions that DAX sends to CloudWatch.
DAX Metrics
The following metrics are available from DAX. DAX sends metrics to CloudWatch only when they have a non-zero value.
Note
CloudWatch aggregates the following DAX metrics at one-minute intervals:
CPUUtilization
CacheMemoryUtilization
NetworkBytesIn
NetworkBytesOut
NetworkPacketsIn
NetworkPacketsOut
GetItemRequestCount
BatchGetItemRequestCount
BatchWriteItemRequestCount
DeleteItemRequestCount
PutItemRequestCount
UpdateItemRequestCount
TransactWriteItemsCount
TransactGetItemsCount
ItemCacheHits
ItemCacheMisses
QueryCacheHits
QueryCacheMisses
ScanCacheHits
ScanCacheMisses
TotalRequestCount
ErrorRequestCount
FaultRequestCount
FailedRequestCount
QueryRequestCount
ScanRequestCount
ClientConnections
EstimatedDbSize
EvictedSize
Not all statistics, such as Average or Sum, are applicable for every metric. However, all of these values are available through the DAX console, or by using the CloudWatch console, AWS CLI, or AWS SDKs for all metrics. In the following table, each metric has a list of valid statistics that are applicable to that metric.




Metric
Description




CPUUtilization
The percentage of CPU utilization of the node or cluster. Units: Percent Valid Statistics: [See the AWS documentation website for more details]


CacheMemoryUtilization
The percentage of available cache memory that is in use by the item cache and query cache on the node or cluster. Cached data starts to be evicted prior to memory utilization reaching 100% (see EvictedSize metric). If CacheMemoryUtilization reaches 100% on any node, write requests will be throttled and you should consider switching to a cluster with a larger node type. Units: Percent Valid Statistics: [See the AWS documentation website for more details]


NetworkBytesIn
The number of bytes received on all network interfaces by the node or cluster. Units: Bytes Valid Statistics: [See the AWS documentation website for more details]


NetworkBytesOut
The number of bytes sent out on all network interfaces by the node or cluster. This metric identifies the volume of outgoing traffic in terms of the number of bytes on a single node or cluster. Units: Bytes Valid Statistics: [See the AWS documentation website for more details]


NetworkPacketsIn
The number of packets received on all network interfaces by the node or cluster. Units: Count Valid Statistics: [See the AWS documentation website for more details]


NetworkPacketsOut
The number of packets sent out on all network interfaces by the node or cluster. This metric identifies the volume of outgoing traffic in terms of the number of packets on a single node or cluster. Units: Count Valid Statistics:  [See the AWS documentation website for more details]


GetItemRequestCount
The number of GetItem requests handled by the node or cluster. Units: Count Valid Statistics: [See the AWS documentation website for more details]


BatchGetItemRequestCount
The number of BatchGetItem requests handled by the node or cluster. Units: Count Valid Statistics: [See the AWS documentation website for more details]


BatchWriteItemRequestCount
The number of BatchWriteItem requests handled by the node or cluster.  Units: Count Valid Statistics: [See the AWS documentation website for more details]


DeleteItemRequestCount
The number of DeleteItem requests handled by the node or cluster.  Units: Count Valid Statistics: [See the AWS documentation website for more details]


PutItemRequestCount
The number of PutItem requests handled by the node or cluster. Units: Count Valid Statistics: [See the AWS documentation website for more details]


UpdateItemRequestCount
The number of UpdateItem requests handled by the node or cluster.  Units: Count Valid Statistics: [See the AWS documentation website for more details]


TransactWriteItemsCount
The number of TransactWriteItems requests handled by the node or cluster. Units: Count Valid Statistics: [See the AWS documentation website for more details]


TransactGetItemsCount
The number of TransactGetItems requests handled by the node or cluster.  Units: Count Valid Statistics: [See the AWS documentation website for more details]


ItemCacheHits
The number of times an item was returned from the cache by the node or cluster.  Units: Count Valid Statistics: [See the AWS documentation website for more details]


ItemCacheMisses
The number of times an item was not in the node or cluster cache, and had to be retrieved from DynamoDB.  Units: Count Valid Statistics: [See the AWS documentation website for more details]


QueryCacheHits
The number of times a query result was returned from the node or cluster cache.  Units: Count Valid Statistics: [See the AWS documentation website for more details]


QueryCacheMisses
The number of times a query result was not in the node or cluster cache, and had to be retrieved from DynamoDB. Units: Count Valid Statistics: [See the AWS documentation website for more details]


ScanCacheHits
The number of times a scan result was returned from the node or cluster cache.  Units: Count Valid Statistics: [See the AWS documentation website for more details]


ScanCacheMisses
The number of times a scan result was not in the node or cluster cache, and had to be retrieved from DynamoDB. Units: Count Valid Statistics: [See the AWS documentation website for more details]


TotalRequestCount
Total number of requests handled by the node or cluster.  Units: Count Valid Statistics: [See the AWS documentation website for more details]


ErrorRequestCount
Total number of requests that resulted in a user error reported by the node or cluster. Requests that were throttled by the node or cluster are included. Units: Count Valid Statistics: [See the AWS documentation website for more details]


ThrottledRequestCount
Total number of requests throttled by the node or cluster. Requests that were throttled by DynamoDB are not included, and can be monitored using DynamoDB Metrics. Units: Count Valid Statistics: [See the AWS documentation website for more details]


FaultRequestCount
Total number of requests that resulted in an internal error reported by the node or cluster.  Units: Count Valid Statistics: [See the AWS documentation website for more details]


FailedRequestCount
Total number of requests that resulted in an error reported by the node or cluster.  Units: Count Valid Statistics: [See the AWS documentation website for more details]


QueryRequestCount
The number of query requests handled by the node or cluster.  Units: Count Valid Statistics: [See the AWS documentation website for more details]


ScanRequestCount
The number of scan requests handled by the node or cluster.  Units: Count Valid Statistics: [See the AWS documentation website for more details]


ClientConnections
The number of simultaneous connections made by clients to the node or cluster.  Units: Count Valid Statistics: [See the AWS documentation website for more details]


EstimatedDbSize
An approximation of the amount of data cached in the item cache and the query cache by the node or cluster.  Units: Bytes Valid Statistics: [See the AWS documentation website for more details]


EvictedSize
The amount of data that was evicted by the node or cluster to make room for newly requested data. If the miss rate goes up, and you see this metric also growing, it probably means that your working set has increased. You should consider switching to a cluster with a larger node type. Units: Bytes Valid Statistics: [See the AWS documentation website for more details]



Dimensions for DAX Metrics
The metrics for DAX are qualified by the values for the account, cluster ID, or cluster ID and node ID combination. You can use the CloudWatch console to retrieve DAX data along any of the dimensions in the following table. 




Dimension
CloudWatch Metric Namespace
Description




Account
DAX Metrics
Provides aggregated statistics across all nodes in an account.


ClusterId
Cluster Metrics
Limits the data to a cluster.


ClusterId, NodeId
ClusterId, NodeId
Limits the data to a node within a cluster.


