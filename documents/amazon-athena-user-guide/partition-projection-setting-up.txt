Setting up Partition Projection
Setting up partition projection in a table's properties is a two-step process:


Specify the data ranges and relevant patterns for each partition column, or use a custom template.


Enable partition projection for the table.


This section shows how to set these table properties for AWS Glue. To set them, you can use the AWS Glue console, Athena CREATE TABLE queries, or AWS Glue API operations. The following procedure shows how to set the properties in the AWS Glue console.
To configure and enable partition projection using the AWS Glue console


Sign in to the AWS Management Console and open the AWS Glue console at https://console.aws.amazon.com/glue/.


Choose the Tables tab.


On the Tables tab, you can edit existing tables, or choose Add tables to create new ones. For information about adding tables manually or with a crawler, see Working with Tables on the AWS Glue Console in the AWS Glue Developer Guide.


In the list of tables, choose the link for the table that you want to edit.



Choose Edit table.



In the Edit table details dialog box, in the Table properties section, for each partitioned column, add the following key-value pair:


For Key, add projection.columnName.type.


For Value, add one of the supported types: enum, integer, date, or injected. For more information, see Supported Types for Partition Projection.


Following the guidance in Supported Types for Partition Projection, add additional key-value pairs according to your configuration requirements.


The following example table configuration configures the year column for partition projection, restricting the values that can be returned to a range from 2000 through 2016.



Add a key-value pair to enable partition projection. For Key, enter projection.enabled, and for its Value, enter true.

Note
You can disable partition projection on this table at any time by setting projection.enabled to false.


When you are finished, choose Apply.


In the Athena Query Editor, test query the columns that you configured for the table.


The following example query uses SELECT DISTINCT to return the unique values from the year column. The database contains data from 1987 to 2016, but the projection.year.range property restricts the values returned to the years 2000 to 2016.

Note
If you set projection.enabled to true but fail to configure one or more partition columns, you receive an error message like the following:
HIVE_METASTORE_ERROR: Table database_name.table_name is configured for partition projection, but the following partition columns are missing projection configuration: [column_name] (table database_name.table_name).
Specifying Custom S3 Storage Locations
When you edit table properties in AWS Glue, you can also specify a custom Amazon S3 path template for the projected partitions. A custom template enables Athena to properly map partition values to custom Amazon S3 file locations that do not follow a typical .../column=value/... pattern. 
Using a custom template is optional. However, if you use a custom template, the template must contain a placeholder for each partition column.
To specify a custom partition location template


Following the steps to configure and enable partition projection using the AWS Glue console, add an additional a key-value pair that specifies a custom template as follows:


For Key, enter storage.location.template.


For Value, specify a location that includes a placeholder for every partition column.
The following example template values assume a table with partition columns a, b, and c.
s3://bucket/table_root/a=${a}/${b}/some_static_subdirectory/${c}/
s3://bucket/table_root/c=${c}/${b}/some_static_subdirectory/${a}/${b}/${c}/${c}/
For the same table, the following example template value is invalid because it contains no placeholder for column c.
s3://bucket/table_root/a=${a}/${b}/some_static_subdirectory/


Choose Apply.

